<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "8.2.2.15.0_1";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>network_create_server</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css">
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Reference page for network_create_server">
  <meta name="rh-index-keywords" content="network_create_server,network_socket_tcp,network_socket_udp,network_socket_ws,network_socket_bluetooth">
  <meta name="search-keywords" content="network_create_server,network_socket_tcp,network_socket_udp,network_socket_ws,network_socket_bluetooth">
  <meta name="is_pure" content="true">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Networking/network_create_server_raw.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Networking/Networking.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="network_create_server">
        <span>network_create_server</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>network_create_server</h1>
  <p>此函数使用允许的连接协议之一为您的游戏创建一个新的网络服务器 (请参阅下面列出的常量)。</p>
  <p>您提供服务器类型，然后给它一个要使用的端口，最后是服务器在任何时间允许的最大连接数 (请注意，这个数字取决于您，但是太多连接的客户端将使服务器饱和) 网络或设备 CPU 将无法处理该数量玩家的处理，因此请谨慎使用)。该函数返回一个唯一的 <i>id</i>，应将其存储在变量中并用于在所有其他网络功能中识别服务器，如果连接失败，则返回小于 0 的值。</p>
  <div data-conref="../../../assets/snippets/network_socket_types_server.hts">
  <table>
    <colgroup>
      <col>
      <col>
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Network_Socket_Type"><a target="_blank" href="network_create_socket.htm">套接字类型常量</a></span></th>
      </tr>
      <tr>
        <th>常量</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="inline">network_socket_tcp</span></td>
        <td>Create a socket using TCP.</td>
      </tr>
      <tr>
        <td><span class="inline">network_socket_udp</span></td>
        <td>Create a socket using UDP.</td>
      </tr>
      <tr>
        <td><span class="inline">network_socket_ws</span></td>
        <td>Create a WebSocket using TCP. (<em><strong>NOTE</strong>: Use <a href="network_connect_raw_async.htm">Async</a> functions for connecting through WebSockets</em>)</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><span class="note"> 注意</span> 创建服务器时不支持安全 WebSocket，<a href="network_create_socket.htm"> 仅作为客户端 </a>。</p>

</div>
  <div data-conref="../../../assets/snippets/Note_Networking_socket_limit.hts">
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;There is a maximum limit of 1024 sockets on Windows, macOS and Ubuntu, and 64 sockets on all other platforms.</p>

</div>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">network_create_server(type, port, max_client);</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>type</td>
        <td><span data-keyref="Type_Constant_Network_Socket_Type"><a target="_blank" href="network_create_socket.htm">套接字类型常量</a></span></td>
        <td>要创建的服务器的类型(请参阅上面列出的常量)。</td>
      </tr>
      <tr>
        <td>port</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>服务器将使用的端口。</td>
      </tr>
      <tr>
        <td>max_client</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>一次可以连接的最大客户端数。</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_ID_Network_Socket"><a target="_blank" href="network_create_socket.htm">Network Socket ID</a></span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">var port = 6510;<br>
    server = network_create_server(network_socket_tcp, port, 32);<br>
    while (server &lt; 0 &amp;&amp; port &lt; 65535)<br>
    {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;port++<br>
    &nbsp;&nbsp;&nbsp;&nbsp;server = network_create_server(network_socket_tcp, port, 32);<br>
    }</p>
  <p>以上代码将尝试通过端口6510使用TCP创建服务器。如果该端口不可用，则它将循环通过这些端口查找其中一个。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Networking.htm">网络</a></div>
        <div style="float:right">Next: <a href="network_create_server_raw.htm">network_create_server_raw</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
network_create_server
network_socket_tcp
network_socket_udp
network_socket_ws
network_socket_bluetooth
-->
  <!-- TAGS
network_create_server
-->

</body></html>