<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.6.2.0_32";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>gpu_set_blendmode_ext_sepalpha</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Reference for the function gpu_set_blendmode_ext_sepalpha">
  <meta name="rh-index-keywords" content="gpu_set_blendmode_ext_sepalpha,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour">
  <meta name="search-keywords" content="gpu_set_blendmode_ext_sepalpha,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/GPU_Control/gpu_set_colourwriteenable.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/GPU_Control/gpu_set_blendmode_ext.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="gpu_set_blendmode_ext_sepalpha">
        <span>gpu_set_blendmode_ext_sepalpha</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_set_blendmode_ext_sepalpha</h1>
  <p>When <span data-keyref="GameMaker Name">GameMaker</span> goes to draw a pixel there is a source colour (the colour of the pixel we're going to draw) and a destination colour (the colour that's already in the pixel we're drawing to), so when determining the new colour of the pixel, the source and destination colours are calculated according to the chosen blend mode.</p>
  <p>Each component of the colours is stored as a floating point value between 0 and 1, and the new colour is calculated by multiplying each component of the source colour by some factor and by multiplying each component of destination colour by some other factor and then adding the results together component by component (or using a different <a href="gpu_set_blendequation.htm">equation</a>).</p>
  <p>This function permits you to set how the different component parts that should be factored together to create a custom blend mode, selecting different blend mode factors for the RGB components and the Alpha component. So the "src" and "dest" argument will use the first 3 blend mode values (RGB) and the "alphasrc" and "alphadest" arguments will take the last part of the blend mode factor. For example, if you have the RGB source as <span class="inline">bm_zero</span>, then (0, 0, 0) will be used. If you then set the Alpha source as <span class="inline">bm_one</span> then (1) will be used, giving a final source blend mode of (0, 0, 0, 1).</p>
  <p>下图显示了每个混合模式的 RGBA 值，其中(R、G、B、As)被视为源值，(Rd、Gd、Bd、Ad)是目标值。在此函数中使用时，可用的十一个常量可以是源或目标(或两者)。</p>
  <div data-conref="../../../../assets/snippets/Table_Gpu_blend_modes_ext.hts">
  <table>
    <colgroup>
      <col>
      <col>
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a target="_blank" href="gpu_get_blendmode_ext.htm">混合模式系数常量</a></span></th>
      </tr>
      <tr>
        <th>常量</th>
        <th>混合因子(红色、绿色、蓝色、透明度)</th>
      </tr>
      <tr>
        <td><span class="inline">bm_zero</span></td>
        <td>(0, 0, 0, 0)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_one</span></td>
        <td>(1, 1, 1, 1)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_src_colour</span></td>
        <td>(Rs, Gs, Bs, As)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_inv_src_colour</span></td>
        <td>(1-Rs, 1-Gs, 1-Bs, 1-As)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_src_alpha</span></td>
        <td>(As, As, As, As)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_inv_src_alpha</span></td>
        <td>(1-As, 1-As, 1-As, 1-As)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_dest_alpha</span></td>
        <td>(Ad, Ad, Ad, Ad)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_inv_dest_alpha</span></td>
        <td>(1-Ad, 1-Ad, 1-Ad, 1-Ad)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_dest_colour</span></td>
        <td>(Rd, Gd, Bd, Ad)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_inv_dest_colour</span></td>
        <td>(1-Rd, 1-Gd, 1-Bd, 1-Ad)</td>
      </tr>
      <tr>
        <td><span class="inline">bm_src_alpha_sat</span></td>
        <td>(f, f, f, 1) where f = min(As, 1-Ad)</td>
      </tr>
    </tbody>
  </table>

</div>
  <p class="note"><b>IMPORTANT!</b> HTML5 without WebGL enabled will <b>not</b> be able to display following modes correctly:</p>
  <ul class="colour" style="padding-left: 120px">
    <li><span class="inline">bm_src_colour</span></li>
    <li><span class="inline">bm_inv_src_colour</span></li>
    <li><span class="inline">bm_dest_colour</span></li>
    <li><span class="inline">bm_inv_dest_colour</span></li>
    <li><span class="inline">bm_src_alpha_sat</span></li>
  </ul>
  <p>&nbsp;</p>
  <p>请注意，您可以为此函数提供四个单独的参数，也可以提供一个参数数组(例如，由函数<a href="gpu_get_blendmode_ext_sepalpha.htm"><span class="inline">gpu_get_blendmode_ext_se丈()</span></a>返回)。如果提供数组，则应具有以下四个元素：</p>
  <ul class="colour">
    <li>[0] = 源混合模式减去 Alpha 分量 (默认为 <span class="inline">bm_src_alpha</span>(As、As、As))</li>
    <li>[1] = 目标混合模式减去 Alpha 分量 (默认为 <span class="inline">bm_inv_src_alpha</span>(1-As，1-As，1-As))</li>
    <li>[2] = 源 Alpha 组件 (默认为 <span class="inline">bm_src_alpha</span>(As))</li>
    <li>[3] = 目标 Alpha 组件 (默认为 <span class="inline">bm_inv_src_alpha</span>(1-As))</li>
  </ul>
  <p>为了帮助您充分利用混合模式，并帮助您了解它们如何工作以及它们如何影响绘制到屏幕的最终图像，建议您阅读以下指南：</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">混合模式使用指南</a></li>
  </ul>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">gpu_set_blendmode(src, dest, alphasrc, alphadest);</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>src</td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a target="_blank" href="gpu_get_blendmode_ext.htm">混合模式系数常量</a></span></td>
        <td>RGB 的源混合模式因子 (请参见上面的常量)。</td>
      </tr>
      <tr>
        <td>dest</td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a target="_blank" href="gpu_get_blendmode_ext.htm">混合模式系数常量</a></span></td>
        <td>RGB 的目标混合模式因子 (请参见上面的常量)</td>
      </tr>
      <tr>
        <td>alphasrc</td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a target="_blank" href="gpu_get_blendmode_ext.htm">混合模式系数常量</a></span></td>
        <td>源混合模式因子 Alpha(请参见上面的常量)。</td>
      </tr>
      <tr>
        <td>alphadest</td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a target="_blank" href="gpu_get_blendmode_ext.htm">混合模式系数常量</a></span></td>
        <td>目标混合模式因子 Alpha(请参见上面的常量)</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">var bm = gpu_get_blendmode_ext_sepalpha();<br>
    bm[0] = bm_src_alpha;<br>
    bm[1] = bm_inv_src_alpha;<br>
    gpu_set_blendmode_ext_sepalpha(bm);</p>
  <p>上述代码将创建一个局部数组，并获取具有单独 Alpha 值的当前扩展混合模式。然后操纵该数组并返回以设置混合模式。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:&nbsp;<a href="GPU_Control.htm">GPU 控制</a></div>
        <div style="float:right">Next:&nbsp;<a href="gpu_set_blendequation.htm">gpu_set_blendequation</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_blendmode_ext_sepalpha
bm_zero
bm_one
bm_src_colour
bm_inv_src_colour
bm_src_alpha
bm_inv_src_alpha
bm_dest_alpha
bm_inv_dest_alpha
bm_dest_colour
bm_inv_dest_colour
bm_src_alpha_sat
-->
  <!-- TAGS
gpu_set_blendmode_ext_sepalpha
-->

</body></html>