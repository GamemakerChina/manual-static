<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.5.2.0_12";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>mp_grid_path</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="This page outlines the function mp_grid_path">
  <meta name="rh-index-keywords" content="mp_grid_path">
  <meta name="search-keywords" content="mp_grid_path">
  <meta name="is_pure" content="true">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Movement_And_Collisions/Motion_Planning/mp_grid_add_cell.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Movement_And_Collisions/Motion_Planning/mp_grid_destroy.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="mp_grid_path">
        <span>mp_grid_path</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>mp_grid_path</h1>
  <p>使用此函数，您可以创建一个路径，该路径将使用先前定义的 <span class="inline">mp_grid</span> 从起点导航到终点，从而避免已添加到网格中的任何障碍。xstart 和 ystart 参数指示房间坐标中路径的起点，而 xgoal 和 ygoal 参数指示目标。也可以只选择水平 / 垂直移动，或者通过在 allowdiag 参数中指定 true 来允许完全对角线移动。函数返回 true(成功查找路径) 或 false(失败) 以及设置所选路径。在下图中，您可以看到这一切是如何协同工作的：</p>
  <p><img alt="MP Grid path example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/mp_grid_path_image.png"> 如您所见，"管道 " 对象已添加到网格中，这意味着创建的任何路径都必须绕过它们。在图像中创建了两条路径，一条 (绿色) 为允许对角线，另一条 (红色) 为不允许对角线。两者之间的区别非常明显，绿色道路显得更加 " 优雅 " 和直接，但这完全取决于你将他们放在你更喜欢的地方有什么用。请注意，路径与当前实例无关-它是通过网格的路径，而不是特定实例的路径，即使特定实例可能具有存储路径索引的变量。您可能还需要调试这些路径以查看它们是如何在游戏环境中创建和交互的，在这种情况下，您应该使用 <span class="inline"><a href="../../Drawing/Basic_Forms/draw_path.htm">draw_path()</a></span> 函数。</p>
  <p class="note"><b> 注意 </b>: 路径必须是以前创建的 (使用 <span style="font-size:1px;"><a href="../../Asset_Management/Paths/Path_Manipulation/path_add.htm"><span class="inline">path_add()</span></a></span> 的代码或作为资源)，并且将由此函数生成的路径替换。</p>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">mp_grid_path(id, path, xstart, ystart, xgoal, ygoal, allowdiag);</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>id</td>
        <td><span data-keyref="Type_ID_MP_Grid"><a target="_blank" href="mp_grid_create.htm">MP Grid ID</a></span></td>
        <td>要使用的 mp_grid 的索引</td>
      </tr>
      <tr>
        <td>path</td>
        <td><span data-keyref="Type_Asset_Path"><a target="_blank" href="../../../../The_Asset_Editors/Paths.htm">Path Asset</a></span></td>
        <td>函数要使用的路径的索引</td>
      </tr>
      <tr>
        <td>xstart</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>新路径的起始 X 坐标</td>
      </tr>
      <tr>
        <td>ystart</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>新路径的起始 Y 坐标</td>
      </tr>
      <tr>
        <td>xgoal</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>完成新路径的 X 坐标</td>
      </tr>
      <tr>
        <td>ygoal</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>完成新路径的 Y 坐标</td>
      </tr>
      <tr>
        <td>allowdiag</td>
        <td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td>
        <td>指示是否允许对角线移动，而不仅仅是水平或垂直移动</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">global.grid = mp_grid_create(0, 0, room_width div 32, room_height div 32, 32, 32);<br>
    mp_grid_add_instances(global.grid, obj_wall, false);<br>
    with (obj_Enemy)<br>
    {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;path = path_add();<br>
    &nbsp;&nbsp;&nbsp;&nbsp;if (mp_grid_path(global.grid, path, x, y, obj_Player.x, obj_Player.y, 1)) <br>
    &nbsp; &nbsp; {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path_start(path, 0, 3, 0);<br>
    &nbsp; &nbsp; }<br>
    }</p>
  <p>上述代码创建一个全局变量 global.grid，然后生成一个 mp_grid 并将其 index(id) 分配给该变量，以便在所有进一步的 mp_grid 函数调用中使用。然后将 "obj_Wall" 的所有实例添加到网格中，然后获取 "obj_Enemy" 的所有实例以创建路径，然后使用 <span class="inline">mp_grid_path</span> 计算从其位置到 "obj_Player" 位置的路由。如果存在路由，则对象将沿路径启动自身。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:&nbsp;<a href="Motion_Planning.htm">运动规划</a></div>
        <div style="float:right">Next:&nbsp;<a href="mp_grid_add_cell.htm">mp_grid_add_cell</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
mp_grid_path
-->
  <!-- TAGS
mp_grid_path
-->

</body></html>