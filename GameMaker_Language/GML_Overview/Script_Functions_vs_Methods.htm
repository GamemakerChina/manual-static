<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "8.2.1.1_7";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">
<link rel="stylesheet" type="text/css" href="../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js"></script>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="generator" content="Adobe RoboHelp 2022">
  <title>Script Functions vs. Methods</title>
  <meta name="topic-status" content="Draft">
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css">
  <script src="../../assets/scripts/main_script.js" type="module"></script>
  <meta name="template" content="../../assets/masterpages/Manual_Page.htt">
  <meta name="rh-authors" content="Gurpreet S. Matharoo">
  <meta name="topic-comment" content="Page explaining practical differences between Script Functions and Methods.">
  <meta name="rh-index-keywords" content="Script Functions vs. Methods">
  <meta name="search-keywords" content="calling methods, calling script functions, method performance">
<meta name="brsnext" value="GameMaker_Language/GML_Overview/Functions/Static_Variables.htm"><meta name="brsprev" value="GameMaker_Language/GML_Overview/Method_Variables.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Script Functions vs. Methods">
        <span>Script Functions vs. Methods</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <div>
  </div>
  <div>
  <h1>脚本函数与方法</h1>
  <p>本页介绍有关使用脚本函数与方法的基本信息。</p>
  <h2>基本差异</h2>
  <p><a href="Script_Functions.htm">脚本函数</a>使用以下语法创建：</p>
  <p class="code">function name()<br>
    {<br>
    &nbsp; &nbsp; code;<br>
    }</p>
  <p><a href="Method_Variables.htm">方法变量</a>使用以下语法创建：</p>
  <p class="code">name = function()<br>
    {<br>
    &nbsp; &nbsp; code;<br>
    }</p>
  <p>你应该在脚本中使用第一种语法，以创建全局函数，可以从游戏中的任何范围调用。</p>
  <p>在<a href="Structs.htm">结构/构造函数</a>和对象中创建函数时，应使用第二种语法。此语法创建一个包含方法的变量。</p>
  <h2>直接调用</h2>
  <p>你可以通过使用括号<span class="inline2">()</span>直接调用脚本函数和方法，就像<a href="Runtime_Functions.htm">运行时函数</a>一样。</p>
  <p class="code">// Create the function<br>
    function reset_x()<br>
    {<br>
    &nbsp; &nbsp; x = xstart;<br>
    }<br>
    <br>
    // Call the function<br>
    reset_x();
  </p>
  <p>你也可以使用函数<a href="../GML_Reference/Asset_Management/Scripts/script_execute.htm"><span class="inline">script_execute()</span></a>来运行一个脚本函数，尽管它现在是一个遗留函数，不推荐使用。</p>
  <h2>间接调用：方法</h2>
  <p>您可以在另一个变量中存储对方法的引用，以便稍后通过该变量调用该方法：</p>
  <p class="code">// Create method<br>
    reset_alpha = function()<br>
    {<br>
    &nbsp; &nbsp; image_alpha = 1;<br>
    }<br>
    <br>
    // Pass reference and call<br>
    temp_1 = reset_alpha;<br>
    temp_1();
  </p>
  <p class="note"><span class="note">注意</span>看代码中没有把<span class="inline2">()</span>放在<span class="inline2">reset_alpha</span>后面。这是因为我们在读取方法的引用，而不是调用它。</p>
  <p>在这个例子中，调用<span class="inline2">temp_1</span>将调用<span class="inline2">reset_alpha</span>，因为它存储了对该<strong>方法</strong>的引用。</p>
  <p>以这种方式传递方法引用是完全正确的。但在使用脚本函数时，需要注意。</p>
  <h2>间接调用：脚本函数</h2>
  <p>你也可以把对脚本函数的引用，存储在另一个变量中。</p>
  <p class="code">// Create function<br>
    function reset_x()<br>
    {<br>
    &nbsp; &nbsp; x = xstart;<br>
    }<br>
    <br>
    // Store reference<br>
    temp_1 = reset_x;
  </p>
  <p>现在，您可以通过执行以下操作来调用<span class="inline2">temp_1</span>：</p>
  <p class="code">temp_1();</p>
  <p>但是，由于此变量引用<strong>脚本函数</strong>，因此它必须先将其转换为<strong>方法</strong>，然后再调用它。</p>
  <p>这很容易导致内存使用量增加，尤其是在你每帧调用它时，因为引擎现在必须为这个调用每帧创建一个新方法。</p>
  <p>那么，解决方案是什么？</p>
  <ul class="colour">
    <li>使用<a href="../GML_Reference/Asset_Management/Scripts/script_execute.htm"><span class="inline">script_execute()</span></a>通过脚本函数的引用调用该脚本函数，该引用不会创建方法。</li>
    <li>或者，更好的解决方案是：在传递脚本函数引用时，将脚本函数<a href="../GML_Reference/Variable_Functions/method.htm">转换为方法</a>。</li>
  </ul>
  <p>要实现第二种解决方案，您的代码将如下所示：</p>
  <p class="code">temp_1 = method(undefined, reset_x);</p>
  <p>这是从<span class="inline2">reset_x</span>脚本函数中创建一个新方法，使用<a href="../GML_Reference/Variable_Functions/method.htm"><span class="inline">method()</span></a>。</p>
  <p>现在使用圆括号调用<span class="inline2">temp_1()</span>不会增加内存占用，因为已经为你创建了方法。</p>
  <p>同样，这只适用于你通过存储在变量中的引用间接调用脚本函数<strong>的情况。直接调用它并不会导致这样的问题。</strong></p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back:&nbsp;<a href="GML_Overview.htm">GML 代码概述</a></div>
        <div>Next:&nbsp;<a href="Functions/Static_Variables.htm">静态变量</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Script Functions vs. Methods
-->
  <!-- TAGS
script_functions_vs_methods
-->

</div>
  <!-- KEYWORDS
-->
  <!-- TAGS
-->

</body></html>