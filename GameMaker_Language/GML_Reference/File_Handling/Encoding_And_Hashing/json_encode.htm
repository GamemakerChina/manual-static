<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.17.6.0_1";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>json_encode</title>
  <meta name="generator" content="Adobe RoboHelp 2020">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Reference page for json_encode">
  <meta name="rh-index-keywords" content="json_encode">
  <meta name="search-keywords" content="json_encode">
  <meta name="is_pure" content="true">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/File_Handling/Encoding_And_Hashing/json_decode.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/File_Handling/Encoding_And_Hashing/Encoding_And_Hashing.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="json_encode">
        <span>json_encode</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_encode</h1>
  <h3><strong>重要</strong> 此函数 -虽然仍然有效 -已被函数 <span class="inline"><a href="json_stringify.htm">json_stringify()</a></span> 取代，我们仅建议您将此函数用于旧版支持。</h3>
  <p>JSON (JSON)是一种轻量级的数据交换格式，对于人和机器来说，都很容易读写。它建立在两个基本结构之上:</p>
  <ul class="colour">
    <li>名称/值对的集合，在<span data-keyref="GameMaker Name"> GameMaker </span>中称为<a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline"> DS Map </span></a> ，但在其他编程语言中也称为“字典”或“对象”("dictionary" or "object")。</li>
    <li>一个有序的值列表，在<span data-keyref="GameMaker Name"> GameMaker </span>中称为<a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><span class="inline"> DS </span><span class="inline"> List </span> </a>，但在其他编程语言中也可以称为“数组”或“序列”("array" or "sequence")。</li>
  </ul>
  <p><span class="inline">json_encode()</span>获取您之前创建的 DS 映射或数组并将其编码为 JSON 字符串，然后您可以将其用作(例如)<a href="../../Asynchronous_Functions/HTTP/http_post_string.htm"><span class="inline">http_post_string()</span></a>的一部分 调用，或者 - 所以它可以存储在外部 - 它可以写入文件。 如果使用数组作为顶级结构，则该数组只能包含有效值或其他数组，并且<em>不是</em>数据结构。 为此，您应该使用适当的 DS 函数。</p>
  <p class="note"><strong>重要</strong>JSON 与数字无关。 在任何编程语言中，都可以有各种容量和补码的多种数字类型，固定的或浮动的，二进制的或十进制的。 这会使不同编程语言之间的交流变得困难。 相反，JSON 仅提供人类使用的数字表示：数字序列。 所有编程语言都知道如何理解数字序列，即使它们在内部表示上存在分歧。 如需了解详细信息，请参阅 <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">ECMA JSON 标准</a>。</p>
  <p>使用此函数时，需要注意一些重要事项：</p>
  <ul class="colour">
    <li>请注意，将 JSON 写入 ini 文件时应小心，因为 ini 规范在使用引号和转义字符时可能会导致问题。 有关详细信息，请参阅函数 <a href="../Ini_Files/ini_write_string.htm"><span class="inline2">ini_write_string()</span></a>。</li>
    <li>如果提供的 map 包含任何循环引用，例如返回到主 map 本身的引用 (形成无限循环) 或对主 map 内的 map 的引用形成这种无限循环，则这些引用将仅在遇到它们的第一级上被序列化，并转换为 <span class="inline2">"null"</span> 以用于更深的引用。</li>
    <li>如果您将 int64 编码为 JSON，如果它在 int32 的有效范围内，它会将其写为 <i>int</i>，如果它可以在不丢失精度的情况下写为 <i>double</i>，或者(如果 这些情况都不适用)作为<i>字符串</i>，其前面有标识符“<span class="inline">@i64@</span>”，后面有“<span class="inline">$i64$</span>”。 当您再次将 JSON 解码为 map 时，<span data-keyref="GameMaker Name">GameMaker</span> 将选取这些标识符并将值重新转换为 int64。 这确实意味着如果 JSON 用于服务器或其他一些非 GameMaker 目标，则这些值将不合适，因此应避免使用。</li>
    <li><a href="../../../GML_Overview/Data_Types.htm"><span class="inline2">infinity</span></a> 和 <a href="../../../GML_Overview/Data_Types.htm"><span class="inline2">NaN</span></a> 将分别作为 <span class="inline2">"@@infinity$$"</span>(<span class="inline2">"@@-infinity$$"</span> 表示负数) 和 <span class="inline2">"@@nan$$"</span> 写入 JSON。当使用 <span class="inline3_func"><a href="json_decode.htm">json_decode</a></span> 加载 JSON 时，这些值将正确加载回内存。</li>
  </ul>
  <p class="note"><b>注意</b>：JSON 的分层函数可通过特殊的 DS 映射和 DS 列表函数(例如 <span class="inline"><a href="../../Data_Structures/DS_Maps/ds_map_add_list.htm" style="font-size: 14px">ds_map_add_list()</a></span>或 <span class="inline"><a href="../../Data_Structures/DS_Lists/ds_list_mark_as_map.htm" style="font-size: 14px">ds_list_mark_as_map()</a></span> )，因此您可以对子列表和映射进行编码。</p>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">json_encode(map)</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>map</td>
        <td><span data-keyref="Type_ID_DS_Map"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/ds_map_create.htm">DS Map ID</a></span></td>
        <td>带有要编码的信息(或数组)的 DS 映射</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_String"><a target="_blank" href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">String</a></span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">var hiscore_map, i, str;<br>
    hiscore_map = ds_map_create();<br>
    for (i = 0; i &lt; 10; i ++;)<br>
    {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;ds_map_add(hiscore_map, name[i], score[i]);<br>
    }<br>
    str = json_encode(hiscore_map);<br>
    get[0] = http_post_string("http://www.angusgames.com/game?game_id=" + string(global.game_id), str)<br>
    ds_map_destroy(hiscore_map);</p>
  <p>上面的代码创建了一个 DS 映射，然后遍历 name 和 score 数组，将每个键/值对添加到新映射中。 接下来，使用 <span class="inline">json_encode()</span> 对该 map 进行编码，并将其作为字符串存储在变量“str”中。 然后使用 <span class="inline">http_post_string()</span> 将此字符串发送到网络服务器，并销毁 DS map 以防止内存泄漏，因为不再需要它。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Encoding_And_Hashing.htm">File Encoding</a></div>
        <div style="float:right">Next: <a href="json_decode.htm">json_decode (弃用)</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
json_encode
-->
  <!-- TAGS
json_encode
-->

</body></html>