<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.7"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Primitives&nbsp;And Vertex Formats</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference section for the Primitive&nbsp;And Vertex Format functions and variables"><meta name="rh-index-keywords" content=""><meta name="search-keywords" content="Primitives&nbsp;And Vertex Formats,Primitives,Vertex Buffers,Vertex Formats"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Primitives/draw_primitive_begin.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Text/draw_highscore.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Primitives&nbsp;And Vertex Formats"><span>Primitives&nbsp;And Vertex Formats</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">基元和顶点格式</span></h1><p>图元是一种使用点来定义屏幕上显示内容的绘图类型。它们可以由单个点、线或三角形组成，可以着色、进行 Alpha 混合，甚至可以赋予纹理，这意味着它们可以用来在 2D 和 3D 游戏中创建一些非常令人兴奋的效果！</p><p>图元的点称为 <em>顶点</em> ( 单个 <em><a class="tooltip" title="顶点是一个多边形的单点的名称，它包含了定义它的位置、颜色和纹理的各种特征。在计算机图形学中，这通常指用于创建原语的三角形的一个角，而这些原语的组合构成了屏幕上的图形。">顶点</a></em> )，并存储有关其位置、颜色、纹理和可能的其他信息的数据。然后，GPU 使用您提供的原始 <em>类型</em> 绘制这些顶点：</p><p><img alt="The different primitive types" class="center" height="436" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/primitive_types.png" width="573"></p><p>例如，您可以使用两个三角形基元创建一个矩形，然后使用标志精灵对其进行纹理化，并在实例的绘制事件中让该标志在风中 " 波动"，并通过简单地修改形成的点来扭曲您使用的精灵原语。<b></b></p><div data-conref="../../../../assets/snippets/Note_Primitives_Enable_WebGL_On_HTML5.hts"><p class="note"><b><span data-conref="../../../../assets/snippets/Tag_warning.hts"><span class="warning">警告</span></span></b> 除非您在 <a href="../../../../Settings/Game_Options/HTML5.htm">游戏选项</a> 中启用了 WebGL，否则这些函数无法与 HTML5 模块配合使用。</p></div><h2>创建基元</h2><p><span data-keyref="GameMaker Name">GameMaker</span> 提供两种绘制和创建基元的方法：</p><ul class="colour"><li>基元函数：<span class="inline3_func">draw_primitive_*</span> 和 <span class="inline3_func">draw_vertex_*</span> 函数</li><li>顶点缓冲区</li></ul><h3>基元函数</h3><p><span class="inline3_func">draw_primitive_*</span> 函数允许您定义基元并将其直接绘制到屏幕 (或 <a href="../Surfaces/Surfaces.htm">表面</a> )。您调用 <span class="inline3_func"><a href="draw_primitive_begin.htm">draw_primitive_begin</a></span> 或 <span class="inline3_func"><a href="draw_primitive_begin_texture.htm">draw_primitive_begin_texture</a></span>，然后使用任意 <span class="inline3_func">draw_vertex_*</span> 函数定义顶点，最后调用 <span class="inline3_func"><a href="draw_primitive_end.htm">draw_primitive_end</a></span> 以绘制图元。</p><p class="code_heading">Draw Event</p><p class="code">var _tex = sprite_get_texture(spr_image, 0);<br>draw_primitive_begin_texture(pr_trianglestrip, _tex);<br>draw_vertex_texture(0, 0, 0, 0);<br>draw_vertex_texture(100, 0, 1, 0);<br>draw_vertex_texture(0, 100, 0, 1);<br>draw_vertex_texture(100, 100, 1, 1);<br>draw_primitive_end();</p><h3>顶点缓冲区</h3><p>顶点缓冲区是定义可重用图元的更高级方法。它们是专门存储有关顶点的数据 (" 顶点数据 ") 的 <a href="../../Buffers/Buffers.htm">缓冲区</a> 。使用顶点缓冲区，您可以将图元的定义及其绘制分开。</p><p>您可以使用 <span class="inline3_func"><a href="vertex_create_buffer.htm">vertex_create_buffer</a></span>/<span class="inline3_func"><a href="vertex_create_buffer_ext.htm">vertex_create_buffer_ext</a></span> 创建一个新的空顶点缓冲区，或者使用 <span class="inline3_func"><a href="vertex_create_buffer_from_buffer.htm">vertex_create_buffer_from_buffer</a></span> 创建一个缓冲区并用缓冲区中的数据填充它 /<span class="inline3_func"><a href="vertex_create_buffer_from_buffer_ext.htm">vertex_create_buffer_from_buffer_ext</a></span>：</p><p class="code_heading">Create Event</p><p class="code">// Create an empty vertex buffer<br>vb = vertex_create_buffer();<br><br>// Create a vertex buffer filled with data from a buffer<br>var _buff = buffer_load("model.mod");<br>vb_model = vertex_create_buffer_from_buffer(_buff, format);<br>buffer_delete(_buff);</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span> 有关如何在两种缓冲区类型之间传递数据的详细信息，请参阅 <a href="../../Buffers/Transferring_Data_Between_Buffers.htm">在缓冲区之间传输数据</a> 。</p><p>您可以使用 <span class="inline3_func"><a href="vertex_submit.htm">vertex_submit</a></span> 在 Draw 事件中随时提交顶点缓冲区，或者使用 <span class="inline3_func"><a href="vertex_submit_ext.htm">vertex_submit_ext</a></span> 提交其中的一部分来绘制顶点缓冲区。</p><p>以下是使用 <span data-keyref="GameMaker Name">GameMaker</span> 的默认 <a href="../../../../Additional_Information/Guide_To_Primitives_And_Vertex_Building.htm">直通顶点格式</a> 的完整示例：</p><p class="code_heading">Create Event</p><p class="code">var _uv_data = sprite_get_uvs(spr_image, 0);<br>var _umin = _uv_data[0], _vmin = _uv_data[1], _umax = _uv_data[2], _vmax = _uv_data[3];<br><br>vb = vertex_create_buffer();<br><br>vertex_begin(vb, format);<br><br>vertex_position_3d(vb,&nbsp; &nbsp;0,&nbsp; &nbsp;0, 0); vertex_color(vb, c_white, 1); vertex_texcoord(vb, _umin, _vmin);<br>vertex_position_3d(vb, 100,&nbsp; &nbsp;0, 0); vertex_color(vb, c_white, 1); vertex_texcoord(vb, _umax, _vmin);<br>vertex_position_3d(vb,&nbsp; &nbsp;0, 100, 0); vertex_color(vb, c_white, 1); vertex_texcoord(vb, _umin, _vmax);<br>vertex_position_3d(vb, 100, 100, 0); vertex_color(vb, c_white, 1); vertex_texcoord(vb, _umax, _vmax);<br><br>vertex_end(vb);</p><p class="code_heading">Draw Event</p><p class="code">var _tex = sprite_get_texture(spr_image, 0);<br>vertex_submit(vb, pr_trianglestrip, _tex);</p><p class="code_heading">Cleanup Event</p><p class="code">vertex_delete_buffer(vb);</p><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span> 有关如何使用顶点缓冲区的详细信息，请参阅 <a href="../../../../Additional_Information/Guide_To_Primitives_And_Vertex_Building.htm">基元和顶点构建指南</a> 。</p><h3>纹理坐标</h3><p>在上面的代码示例中，为顶点缓冲区提供了不同的 UV。这是因为两组函数对 UV 的解释不同：</p><ul class="colour"><li>函数 <span class="inline3_func"><a href="draw_vertex_texture.htm">draw_vertex_texture</a></span> 和 <span class="inline3_func"><a href="draw_vertex_texture_colour.htm">draw_vertex_texture_colour</a></span> 将 (0, 0) 映射到纹理页面上精灵区域的左上角，将 (1, 1) 映射到底部- 纹理页面上精灵区域的右角。</li><li>函数 <span class="inline3_func"><a href="vertex_texcoord.htm">vertex_texcoord</a></span> 不会将您传递的纹理坐标映射到纹理页面中的任何精灵。因此，(0, 0) 是纹理页的左上角，(1, 1) 是纹理页的右下角，即范围 [0, 1] 覆盖了整个纹理页。</li></ul><p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span> 您可以使用函数 <span class="inline3_func"><a href="../../Asset_Management/Sprites/Sprite_Information/sprite_get_uvs.htm">sprite_get_uvs</a></span>、<span class="inline3_func"><a href="../../Asset_Management/Fonts/font_get_uvs.htm">font_get_uvs</a></span> 和 <span class="inline3_func"><a href="../../Asset_Management/Tilsets/tileset_get_uvs.htm">tileset_get_uvs</a></span> 获取特定资源的 UV 范围在纹理页面上。</p><h2 id="func_ref">功能参考</h2><h3 id="func_ref_primitives">基元</h3><ul class="colour"><li><a href="draw_primitive_begin.htm">draw_primitive_begin</a></li><li><a href="draw_primitive_begin_texture.htm">draw_primitive_begin_texture</a></li><li><a href="draw_primitive_end.htm">draw_primitive_end</a></li><li><a href="draw_vertex.htm">draw_vertex</a></li><li><a href="draw_vertex_colour.htm">draw_vertex_colour</a></li><li><a href="draw_vertex_texture.htm">draw_vertex_texture</a></li><li><a href="draw_vertex_texture_colour.htm">draw_vertex_texture_colour</a></li></ul><h3 id="func_ref_vertex_formats">顶点格式</h3><p><span data-keyref="GameMaker Name">GameMaker</span> 允许您定义自己的顶点格式，您可以从中创建自己的自定义基元。这可以大大加快着色器操作的速度，或者可以用来扩展其功能并创建令人惊讶的效果。</p><p><strong>顶点格式</strong> 按顺序列出为顶点存储的属性。您首先使用 <span class="inline3_func"><a href="vertex_format_begin.htm">vertex_format_begin</a></span> 定义一个属性，然后使用 <span class="inline2">vertex_format_add_*</span> 函数添加属性，最后使用 <span class="inline3_func"><a href="vertex_format_end.htm">vertex_format_end</a></span> 结束。</p><ul class="colour"><li><a href="vertex_format_begin.htm">vertex_format_begin</a></li><li><a href="vertex_format_add_colour.htm">vertex_format_add_colour</a></li><li><a href="vertex_format_add_position.htm">vertex_format_add_position</a></li><li><a href="vertex_format_add_position_3d.htm">vertex_format_add_position_3d</a></li><li><a href="vertex_format_add_texcoord.htm">vertex_format_add_texcoord</a></li><li><a href="vertex_format_add_normal.htm">vertex_format_add_normal</a></li><li><a href="vertex_format_add_custom.htm">vertex_format_add_custom</a></li><li><a href="vertex_format_end.htm">vertex_format_end</a></li><li><a href="vertex_format_delete.htm">vertex_format_delete</a></li><li><a href="vertex_format_get_info.htm">vertex_format_get_info</a></li></ul><h3 id="func_ref_vertex_buffers">顶点缓冲区</h3><p>创建顶点格式后 (请参阅上面的部分)，您可以使用它来构建您想要使用以下顶点缓冲区函数绘制的图元：</p><ul class="colour"><li><a href="vertex_create_buffer.htm">vertex_create_buffer</a></li><li><a href="vertex_create_buffer_ext.htm">vertex_create_buffer_ext</a></li><li><a href="vertex_create_buffer_from_buffer.htm">vertex_create_buffer_from_buffer</a></li><li><a href="vertex_create_buffer_from_buffer_ext.htm">vertex_create_buffer_from_buffer_ext</a></li><li><a href="vertex_update_buffer_from_buffer.htm">vertex_update_buffer_from_buffer</a></li><li><a href="vertex_update_buffer_from_vertex.htm">vertex_update_buffer_from_vertex</a></li><li><a href="vertex_get_buffer_size.htm">vertex_get_buffer_size</a></li><li><a href="vertex_get_number.htm">vertex_get_number</a></li><li><a href="vertex_delete_buffer.htm">vertex_delete_buffer</a></li><li><a href="vertex_begin.htm">vertex_begin</a></li><li><a href="vertex_colour.htm">vertex_colour</a></li><li><a href="vertex_normal.htm">vertex_normal</a></li><li><a href="vertex_position.htm">vertex_position</a></li><li><a href="vertex_position_3d.htm">vertex_position_3d</a></li><li><a href="vertex_argb.htm">vertex_argb</a></li><li><a href="vertex_texcoord.htm">vertex_texcoord</a></li><li><a href="vertex_float1.htm">vertex_float1</a></li><li><a href="vertex_float2.htm">vertex_float2</a></li><li><a href="vertex_float3.htm">vertex_float3</a></li><li><a href="vertex_float4.htm">vertex_float4</a></li><li><a href="vertex_ubyte4.htm">vertex_ubyte4</a></li><li><a href="vertex_end.htm">vertex_end</a></li><li><a href="vertex_freeze.htm">vertex_freeze</a></li><li><a href="vertex_submit.htm">vertex_submit</a></li><li><a href="vertex_submit_ext.htm">vertex_submit_ext</a></li></ul><p class="note"><span data-conref="../../../../assets/snippets/Tag_important.hts"><span class="important">重要信息</span></span> 您构建的基元应遵循您使用 " 顶点格式 " 函数设置的格式，因此，如果您定义了仅包含位置数据的顶点格式，则没有必要使用颜色构建基元数据。您应该注意，向正在构建的图元添加属性的顺序是由创建顶点格式时添加这些属性的顺序定义的，因此，如果您已使用顺序位置、颜色和纹理定义了矢量格式坐标，您 <i>必须</i> 将这些属性添加到以相同顺序构建的基元中，否则您会收到错误。</p><p>有关如何使用顶点函数构建基元的概述，请参阅：</p><ul class="colour"><li><a href="../../../../Additional_Information/Guide_To_Primitives_And_Vertex_Building.htm">基元和顶点构建指南</a></li></ul><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Drawing.htm">绘制</a></div><div style="float:right">Next: <a href="../Surfaces/Surfaces.htm">表面</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>