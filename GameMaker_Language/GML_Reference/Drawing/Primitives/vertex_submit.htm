<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../../..",gTopicId="8.2.2.6.7.0_41"</script><script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>vertex_submit</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"><script src="../../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference for vertex_submit"><meta name="rh-index-keywords" content="vertex_submit,pr_pointlist,pr_linelist,pr_linestrip,pr_trianglelist,pr_trianglestrip"><meta name="search-keywords" content="vertex_submit,pr_pointlist,pr_linelist,pr_linestrip,pr_trianglelist,pr_trianglestrip"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_submit_ext.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_freeze.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="vertex_submit"><span>vertex_submit</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">vertex_submit</span></h1><p>此函数将顶点缓冲区的内容提交到图形管道以供着色器使用。</p><p>您提供顶点缓冲区、基本基元类型 (请参阅下面的常量) 和要使用的纹理。基本基元类型仅用于指定绘制和连接缓冲区中存储的顶点的顺序，但每个顶点使用的实际数据将是您在创建顶点缓冲区时定义的数据。</p><div data-conref="../../../../assets/snippets/Note_Warning_Surface_Must_Exist.hts"><p class="note"><span data-conref="../../../../assets/snippets/Tag_warning.hts"><span class="warning">警告</span></span> 使用表面作为纹理 (由 <span class="inline3_func"><a href="../Surfaces/surface_get_texture.htm">surface_get_texture</a></span> 返回) 时，应确保表面本身存在 (<span class="inline3_func"><a href="../Surfaces/surface_exists.htm">surface_exists</a></span>) 。</p></div><h3>使用说明</h3><ul class="colour"><li>此函数只能在 <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">绘制事件</a> 中使用。</li><li>顶点缓冲区中的顶点数量必须与您使用的图元类型一致。</li><li>您可以使用 <span class="inline3_func"><a href="vertex_submit_ext.htm">vertex_submit_ext</a></span> 来仅提交顶点缓冲区中的一系列顶点。</li><li>Triangle fans (<span class="inline2">pr_trianglefan</span>) are converted to <span class="inline2">pr_trianglelist</span> internally on platforms that don't support them when you call this function.</li></ul><p>有关可用的不同基本基元的视觉示例，请参见下图：</p><p><img alt="The different primitive types" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/primitive_types.png"></p><div data-conref="../../../../assets/snippets/Primitive_Type_Constants.hts"><table style="caption-side:top"><caption><span data-keyref="Type_Constant_Draw_Primitive_Type"><a target="_blank" href="draw_primitive_begin.htm">基本类型常量</a></span></caption><colgroup><col><col></colgroup><tbody><tr><th>常量</th><th>描述</th></tr><tr><td><span class="inline">pr_pointlist</span></td><td>A point list - A point is drawn for every vertex.</td></tr><tr><td><span class="inline">pr_linelist</span></td><td>A line list - A line is drawn between the first and the second vertex, between the third and fourth vertex, etc.</td></tr><tr><td><span class="inline">pr_linestrip</span></td><td>A line strip - A line is drawn between the first and the second vertex, between the second and the third vertex, the third and the fourth vertex, etc.</td></tr><tr><td><span class="inline">pr_trianglelist</span></td><td>A triangle list - A triangle is drawn for the first, second and third vertex, then for the fourth, fifth and sixth vertex, etc.</td></tr><tr><td><span class="inline">pr_trianglestrip</span></td><td>A triangle strip - A triangle is drawn for the first, second and third vertex, then for the second, third and fourth vertex, etc.</td></tr><tr><td><span class="inline">pr_trianglefan</span></td><td>A triangle fan - Every two vertices connect to the first vertex to make a triangle.<br><br><span data-conref="../../../../assets/snippets/Tag_warning.hts"><span class="warning">WARNING</span></span>&nbsp;<span>This primitive type is not natively supported on some platforms and there could be a performance hit if you use it.</span></td></tr></tbody></table></div><p>&nbsp;</p><h4>语法:</h4><p class="code"><span data-field="title" data-format="default">vertex_submit</span>(buffer, primitive, texture);</p><table><tbody><tr><th>参数</th><th>类型</th><th>描述</th></tr><tr><td>buffer</td><td><span data-keyref="Type_ID_Buffer_Vertex"><a target="_blank" href="vertex_create_buffer.htm">Vertex Buffer</a></span></td><td>要使用的顶点缓冲区。</td></tr><tr><td>primitive</td><td><span data-keyref="Type_Constant_Draw_Primitive_Type"><a target="_blank" href="draw_primitive_begin.htm">基本类型常量</a></span></td><td>基本体基本类型。</td></tr><tr><td>texture</td><td><span data-keyref="Type_Pointer_Texture"><a target="_blank" href="../../Asset_Management/Sprites/Sprite_Information/sprite_get_texture.htm">Texture</a></span></td><td>要使用的纹理 (或 <span class="inline2">-1</span> 表示无纹理)。</td></tr></tbody></table><p>&nbsp;</p><h4>返回:</h4><p class="code"><span data-keyref="Type_Void">N/A</span></p><p>&nbsp;</p><h4>例子:</h4><p class="code">shader_set(shader_prim);<br><span data-field="title" data-format="default">vertex_submit</span>(buff, pr_trianglelist, sprite_get_texture(sprite_index, 0));<br>shader_reset();</p><p>上述代码将顶点缓冲区提交到变量 <span class="inline2">buff</span> 中，以便使用着色器 <span class="inline2">shader_prim</span> 进行绘制，使用三角形列表作为基本基元，并使用运行代码的实例的精灵纹理。</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Primitives_And_Vertex_Formats.htm">基元和顶点格式</a></div><div style="float:right">Next:&nbsp;<a href="vertex_submit_ext.htm">vertex_submit_ext</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>