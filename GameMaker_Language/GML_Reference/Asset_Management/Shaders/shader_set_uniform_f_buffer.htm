<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.3.8.0_7";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>shader_set_uniform_f_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Bart Teunis">
  <meta name="topic-comment" content="Reference page for shader_set_uniform_f_buffer">
  <meta name="rh-index-keywords" content="shader_set_uniform_f_buffer">
  <meta name="search-keywords" content="shader_set_uniform_f_buffer">
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt">
  <meta name="condition-tags" content="">
</head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="shader_set_uniform_f_buffer">
        <span>shader_set_uniform_f_buffer</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <h1><span data-field="title" data-format="default">shader_set_uniform_f_buffer</span></h1>
  <p>使用该函数，可以将着色器统一的值设置为存储在缓冲区中的浮点值的列表。</p>
  <p>由于浮点数是使用 <span class="inline2"><a href="../../Buffers/buffer_write.htm">buffer_f32</a></span> 数据类型在缓冲区中表示的，因此此函数要求将偏移量和计数给定范围内的数据格式化为该类型的连续值。</p>
  <div data-conref="../../../../assets/snippets/Note_Set_Uniforms_After_Shader_Set.hts">
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span>：在调用函数<span class="inline2"><a href="shader_set.htm">shader_set()</a></span> <em>之后</em>，在调用<span class="inline2"><a href="shader_reset.htm">shader_reset()</a></span> <em>之前</em>，必须设置所有 uniform 。</p>

</div>
  <h4>语法:</h4>
  <p class="code"><span data-field="title" data-format="default">shader_set_uniform_f_buffer</span>(uniform, buffer, offset, count);</p>
  <table>
    <colgroup>
      <col>
      <col>
      <col>
    </colgroup>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>handle</td>
        <td><span data-keyref="Type_Handle_Shader_Uniform"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Shaders/shader_get_uniform.htm">Shader Uniform Handle</a></span></td>
        <td>由 <span class="inline2"><a href="shader_get_uniform.htm">shader_get_uniform</a></span> 返回的着色器统一的 uniform 句柄</td>
      </tr>
      <tr>
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">Buffer ID</a></span></td>
        <td>要从中读取值的缓冲区</td>
      </tr>
      <tr>
        <td>offset</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>缓冲区中的偏移量(字节)</td>
      </tr>
      <tr>
        <td>count</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>要使用的 <span class="inline2">buffer_f32</span> 类型的值数 (参见 <a href="../../Buffers/buffer_write.htm#table"> 缓冲区数据类型常量 </a>)</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">/// Create Event<br>
    var _values = 4;<br>
    var _size = buffer_sizeof(buffer_f32);<br>
    buffer = buffer_create(_values * _size, buffer_fixed, 1);<br>
    <br>
    buffer_write(buffer, buffer_f32, 1);<br>
    buffer_write(buffer, buffer_f32, 0.7);<br>
    buffer_write(buffer, buffer_f32, 0.9);<br>
    buffer_write(buffer, buffer_f32, 1);<br>
    <br>
    uni_blend_colour = shader_get_uniform(shader_Colorize, "u_vBlendColour");<br>
    <br>
    <br>
    /// Draw Event<br>
    shader_set(shader_Colorize);<br>
    <span data-field="title" data-format="default">shader_set_uniform_f_buffer</span>(uni_blend_colour, _buffer, 0, 4);<br>
    vertex_submit(global.vb_character, pr_trianglelist, -1);<br>
    shader_reset();<br>
    <br>
    <br>
    /// Clean Up event<br>
    buffer_delete(buffer);
  </p>
  <p>上面的代码首先创建一个固定大小的新缓冲区 <span class="inline2">buffer</span>，该缓冲区具有存储类型为 <span class="inline2">buffer_f32</span> 的四个值 (<span class="inline2">_values</span>) 的空间。这是在对象的创建事件中完成的。然后，将 0 到 1 之间的四个值按顺序<a href="../../Buffers/buffer_write.htm">写入</a>表示混合色的 R、G、B 和 A 分量的缓冲区。之后，句柄被检索到在名为 "shader_Colorize" 的 <a href="Shaders.htm"> 着色器 </a> 中定义的<span class="inline2"> uniform vec4 u_vBlendColour; </span> 句柄。接下来，在设置此着色器的绘制事件中，缓冲区中的四个值将传递给着色器使用<span class="inline2"><span data-field="title" data-format="default">shader_set_uniform_f_buffer</span></span>，并提交名为 <span class="inline2">vb_character</span> 的 <a href="../../Drawing/Primitives/vertex_create_buffer.htm"> 顶点缓冲区 </a> 中的模型 (即 <em>drawn</em>)。之后，着色器将重置。最后，在清除事件中，删除缓冲区以避免内存泄漏。</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back:&nbsp;<a href="Shaders.htm">着色器</a></div>
        <div>Next:&nbsp;<a href="shader_set_uniform_i.htm">shader_set_uniform_i</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
shader_set_uniform_f_buffer
-->
  <!-- TAGS
shader_set_uniform_f_buffer
-->

</body></html>