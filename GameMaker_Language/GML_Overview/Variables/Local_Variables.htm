<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.1.1.0_1"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Local Variables</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page explaining local variables"><meta name="rh-index-keywords" content="var,Local Variables"><meta name="search-keywords" content="local variables,local,var,local scope"><meta name="brsnext" value="GameMaker_Language/GML_Overview/Variables/Instance_Variables.htm"><meta name="brsprev" value="GameMaker_Language/GML_Overview/Variables_And_Variable_Scope.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Local Variables"><span>Local Variables</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">局部变量</span></h1><p><strong>局部</strong>变量(Local Variables)是我们<i>仅</i>为特定的<strong>事件</strong>或<strong>函数</strong>创建的变量，然后在事件或函数完成后丢弃。如果局部变量是在自定义函数中创建的，则局部变量仅适用于该函数，然后在函数完成后将其丢弃。我们为什么需要它们？好吧，变量会占用内存中的空间，可能我们只将它们用于一个操作或函数，在这种情况下，我们只需要在使用它的那短时间内将其存入内存。这样可以使您的代码库保持干净整洁，并优化内存空间，以满足真正需要它的事物。要声明局部变量，我们使用<span class="inline"><strong><span class="inline">var</span></strong></span>运算符，如下所示：</p><p class="code">var _i, _num, _str;<br>_i = 0;<br>_num = 24.5;<br>_str = "Hello World";<br><br>// or<br><br>var _i = 0, _num = 24.5, _str = "Hello World";<br><br>// or<br><br>var _i = 0;<br>var _num = 24.5;<br>var _str = "Hello World";</p><p>所有以这种方式创建的变量将在创建它们的事件(或函数)结束时被 "遗忘"(即：从内存中删除)。你应该注意，你给所有<span class="inline">var</span>声明的变量起的名字不能与运行代码的对象中的另一个实例变量重合，而且还要确保你无意在你声明的事件或函数之外使用该变量中存储的值(在上面的例子中，所有<span class="inline">var</span>声明的变量都在变量名前面加上了下划线"_"，但这并不是必须的，这样做只是为了在代码中更明显地说明我们在处理一个局部变量)。也就是说，如果你发现自己处于这样一种情况：你认为局部变量<em>应该</em>与实例变量相同，那么你可以使用<span class="inline">self</span><a href="../Instance_Keywords.htm">关键字</a>来确定实例变量是独立的，比如说。</p><p class="code">var hp = 10;<br>with (obj_Enemy)<br>{<br>&nbsp; &nbsp; self.hp -= hp;<br>}</p><p>程序中经常使用局部变量，特别是在循环中用于计数<a class="tooltip" title="迭代是对项目代码中的一组操作的一次遍历。计算机编程中一种迭代形式是通过循环。循环将重复一段代码，直到满足条件为止，然后循环可以继续进行。每次计算机运行一个循环，就称为迭代。简单来说，迭代是一遍又一遍地重复执行特定代码段以执行特定操作的过程。">迭代</a><span class="glossextra"></span> ，或者在一个操作中多次使用一个值而不会再重复时。下面是另外几个例子。</p><p class="code">var _i = 0;<br>repeat (10)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;inventory[_i] = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;_i += 1;<br>}</p><p>上面的代码创建了一个名为"<span class="inline">_i</span>"的局部变量并将其设置为 0，所有这些都在同一行中。请注意，在之前版本的<span data-keyref="GameMaker Name">GameMaker</span>中，您必须先声明局部变量，<i>然后</i>为其赋值，但在此版本中，您可以同时声明并为其赋值。<i>然后</i>，上面的代码使用该变量来初始化一个<a href="../Arrays.htm">数组</a>。由于变量"<span class="inline">_i</span>"不会用于实例中除此之外的任何其他函数，因此它的作用域可以是本地的。这里还有一个例子：</p><p class="code">var _x, _y;<br>_x = x - 32 + irandom(64);<br>_y = y - 32 + irandom(64);<br>instance_create_layer(_x, _y, "Effects", obj_blood);</p><p>这里我们使用了局部变量"<span class="inline">_x</span>"和"<span class="inline">_y</span>"来存储一些随机的坐标，然后用它们来创建一个实例。在这个例子中，你可以看到，严格来说，我们没有必要使用这些变量，但为了可读性和易用性，我们还是使用了。比起使用这段代码，我们在这里做的事情要清楚和明显得多。</p><p class="code">instance_create_layer(x - 32 + irandom(64), y - 32 + irandom(64), "Effects", obj_guts);</p><p>您还可以在单​​个局部变量语句中声明多个变量，并同时为每个变量分配一个值：</p><p class="code">var a = 10, b = "a text", c = {index: 0, previous: -1};</p><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span>您还可以在<a href="../Language_Features/for.htm">for</a>循环的<span class="inline2">&lt;赋值&gt;</span>部分中使用上述多变量初始化。</p><p>关于<span class="inline">var</span>声明的局部变量的最后一件事应该注意...由于它们对于运行它们的事件或函数来说是唯一的，因此它们也可以通过代码在任何其他实例中使用！这意味着我们可以使用这些变量通过"<span class="inline">with()</span>"构造来设置和更改其他实例中的内容(有关详细信息，请参阅有关<a href="../Variables_And_Variable_Scope.htm">变量范围</a>的部分)。实际的代码本身看起来像这样：</p><p class="code">var num = instance_number(obj_Enemy);<br>with (obj_Enemy)<br>{<br>&nbsp;&nbsp;&nbsp;&nbsp;if num&gt;10 instance_destroy();<br>}</p><p>上述代码之所以有效，是因为<span class="inline">var</span>声明的变量是它所包含的<i>事件</i>(或函数)的局部，而不是实例，也不是游戏世界，所以只要在同一个代码块中，就可以在任何对象的任何函数中使用。</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Variables_And_Variable_Scope.htm">变量及其作用域</a></div><div style="float:right">Next: <a href="Instance_Variables.htm">实例变量</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>