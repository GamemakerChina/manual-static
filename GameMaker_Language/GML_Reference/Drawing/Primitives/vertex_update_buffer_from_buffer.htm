<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.6.7.0_22";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>vertex_update_buffer_from_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="">
  <meta name="topic-comment" content="">
  <meta name="rh-index-keywords" content="vertex_update_buffer_from_buffer">
  <meta name="search-keywords" content="vertex_update_buffer_from_buffer">
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_update_buffer_from_vertex.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_create_buffer_from_buffer_ext.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="vertex_update_buffer_from_buffer">
        <span>vertex_update_buffer_from_buffer</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <h1><span data-field="title" data-format="default">vertex_update_buffer_from_buffer</span></h1>
  <p>该函数使用给定缓冲区中的数据更新顶点缓冲区的内容。</p>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_important.hts"><span class="important"> 重要信息</span></span> 您无法将 <a href="vertex_freeze.htm"> 冻结 </a> 顶点缓冲区作为目标缓冲区传递。</p>
  <h3>使用说明</h3>
  <ul class="Disc">
    <li>源缓冲区中的数据的格式应与目标顶点缓冲区的顶点格式相同。如果不是，您可能会得到意想不到的结果或没有结果。</li>
    <li>您可以使用函数 <span class="inline3_func"><a href="vertex_format_get_info.htm">vertex_format_get_info</a></span> 来获取属性的大小和偏移量。</li>
    <li>在顶点缓冲区当前大小之外写入数据将根据需要调整顶点缓冲区的大小。</li>
  </ul>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code"><span data-field="title" data-format="default">vertex_update_buffer_from_buffer</span>(dest_vbuff, dest_offset, src_buffer[, src_offset, src_size]);</p>
  <table>
    <colgroup>
      <col>
      <col>
      <col>
    </colgroup>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>dest_vbuff</td>
        <td><span data-keyref="Type_ID_Buffer_Vertex"><a target="_blank" href="vertex_create_buffer.htm">Vertex Buffer</a></span></td>
        <td>要复制到的顶点缓冲区</td>
      </tr>
      <tr>
        <td>dest_offset</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>开始写入数据的目标缓冲区中的偏移量</td>
      </tr>
      <tr>
        <td>src_buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../../Buffers/buffer_create.htm">Buffer</a></span></td>
        <td>要复制的源缓冲区</td>
      </tr>
      <tr>
        <td>src_offset</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td><span data-conref="../../../../assets/snippets/Tag_optional.hts"><span class="optional"> 可选</span></span> 开始复制的源缓冲区中的偏移量 (以字节为单位)。默认为 0。</td>
      </tr>
      <tr>
        <td>src_size</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td><span data-conref="../../../../assets/snippets/Tag_optional.hts"><span class="optional"> 可选</span></span> 要从源缓冲区复制的数据大小 (以字节为单位)。默认为 -1。当 -1 时，复制整个缓冲区。</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">vertex_format_begin();<br>
    vertex_format_add_position_3d();&nbsp; &nbsp; &nbsp;// Three buffer_f32 values<br>
    vertex_format_add_texcoord();&nbsp; &nbsp; &nbsp; &nbsp; // Two buffer_f32 values<br>
    vertex_format = vertex_format_end();<br>
    <br>
    var _i = 0,&nbsp;_vertex_size = (3 + 2) * buffer_sizeof(buffer_f32), _buff = buffer_create(1000, buffer_fixed, 4);<br>
    repeat(51)<br>
    {<br>
    &nbsp; &nbsp; repeat(3) buffer_write(_buff, buffer_f32, random(500));&nbsp; &nbsp; &nbsp; &nbsp; // x, y, z<br>
    &nbsp; &nbsp; repeat(2) buffer_write(_buff, buffer_f32, ((_i++ mod 6) &lt; 3)); // u, v<br>
    }<br>
    <br>
    vb = vertex_create_buffer_from_buffer_ext(_buff, vertex_format, 0, 30);<br>
    <span data-field="title" data-format="default">vertex_update_buffer_from_buffer</span>(vb, 0, _buff, 40 * _vertex_size, 3 * _vertex_size);
  </p>
  <p>上面的代码首先创建一个新的顶点格式，其中包含 3D 位置属性和纹理坐标属性。然后它初始化几个临时变量：循环计数器、源缓冲区和单个顶点的字节大小。<span class="inline2">(3 + 2)</span> 指的是用于存储位置的三个浮点值和用于存储 UV 坐标的两个浮点值。然后，缓冲区会填充一些随机值，以创建总共 51 个随机定位的顶点或 17 个三角形，并存储为 <span class="inline2">pr_trianglelist</span>( 请参阅 <span data-keyref="Type_Constant_Draw_Primitive_Type"><a target="_blank" href="draw_primitive_begin.htm"> 基元类型常量 </a></span>)。之后，从缓冲区中的前 30 个顶点创建一个新的顶点缓冲区。最后，通过调用 <span class="inline3_func"><span data-field="title" data-format="default">vertex_update_buffer_from_buffer</span></span>; 更新此顶点缓冲区中的前三个顶点 ; 它们被原始缓冲区中顶点索引 40、41 和 42 的数据覆盖。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back:&nbsp;<a href="Primitives_And_Vertex_Formats.htm">基元和顶点格式</a></div>
        <div>Next:&nbsp;<a href="vertex_update_buffer_from_vertex.htm">vertex_update_buffer_from_vertex</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
vertex_update_buffer_from_buffer
-->
  <!-- TAGS
vertex_update_buffer_from_buffer
-->

</body></html>