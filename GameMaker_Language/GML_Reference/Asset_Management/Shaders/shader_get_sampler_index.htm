<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.3.8.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>shader_get_sampler_index</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Page outlining the function shader_get_sampler_index">
  <meta name="rh-index-keywords" content="shader_get_sampler_index">
  <meta name="search-keywords" content="shader_get_sampler_index">
  <meta name="is_pure" content="true">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Shaders/shader_set.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Shaders/shader_get_uniform.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="shader_get_sampler_index">
        <span>shader_get_sampler_index</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>shader_get_sampler_index</h1>
  <p>由于无法在着色器本身中更改着色器采样器的值，因此必须在使用可用的<strong>Uniform Set</strong>函数之一调用着色器之前设置它。但是，为了能够执行<i></i>，必须首先调用此函数以获取要设置的着色器采样器的"句柄"。</p>
  <p class="note"><span class="note">注意</span>尽管着色器由两个独立的程序(Vertex和Fragment)组成，但此函数不会区分这两个程序，并将从其中任何一个程序返回着色器示例的句柄。</p>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">shader_get_sampler_index(shader, uniform);</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>shader</td>
        <td><span data-keyref="Type_Asset_Shader"><a target="_blank" href="../../../../The_Asset_Editors/Shaders.htm">Shader Asset</a></span></td>
        <td>要使用的着色器的索引。</td>
      </tr>
      <tr>
        <td>uniform</td>
        <td><span data-keyref="Type_String"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">String</a></span></td>
        <td>获取(字符串)句柄的着色器采样器。</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Handle_Shader_Sampler"><a target="_blank" href="shader_get_sampler_index.htm">Shader Sampler Handle</a></span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">glassshader_bgsampler = shader_get_sampler_index(GlassShader, "s_BackgroundSampler")<br>
    spr = sprite_get_texture(sprite_index, 0);<br>
    shader_set(GlassShader);<br>
    texture_set_stage(glassshader_bgsampler, spr);<br>
    shader_reset();</p>
  <p>上面的代码将获取被索引为"GlassShader"的着色器中的采样器的<i>句柄</i>，然后将着色器常量设置为给定的精灵纹理。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Shaders.htm">着色器</a></div>
        <div style="float:right">Next: <a href="shader_set.htm">shader_set</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
shader_get_sampler_index
-->
  <!-- TAGS
shader_get_sampler_index
-->

</body></html>