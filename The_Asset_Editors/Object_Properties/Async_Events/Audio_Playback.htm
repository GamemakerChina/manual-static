<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "6.3.1.2.0_1";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Audio Playback</title>
  <meta name="generator" content="Adobe RoboHelp 2020">
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Page detailing the Audio Playback async event.">
  <meta name="rh-index-keywords" content="Objects - Async Audio Playback Event">
  <meta name="search-keywords" content="Audio Playback,ev_async_audio_playback">
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css">
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
<meta name="brsnext" value="The_Asset_Editors/Object_Properties/Async_Events/Audio_Recording.htm"><meta name="brsprev" value="The_Asset_Editors/Object_Properties/Async_Events.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Audio Playback">
        <span>Audio Playback</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">Audio Playback</span></h1>
  <p><img alt="Audio Playback Event" class="center" src="../../../assets/Images/Asset_Editors/Async_AudioPlayback.png">This event can only be triggered by the <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/Audio_Buffers.htm">audio queue</a> play functions&nbsp;and will return a <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a>&nbsp;stored in the variable <span class="inline2"><a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">async_load</a></span>, containing different key/value pairs relating to the audio queue that has triggered the event. The event is triggered by a&nbsp;<a class="tooltip" title="回调仅是一个函数，该函数先运行，然后在完成分配的工作后触发另一个函数（或代码块）。例如，功能sprite_add()将在加载精灵后在异步Image Loaded事件中触发回调。">callback</a>&nbsp;when you have selected an audio queue to playback and a buffer in that audio queue has finished playing.</p>
  <p>以下键将在DS地图中可用：</p>
  <ul class="dropspotlist">
    <li class="dropspot">"<span class="inline">queue_id</span>"- 已完成播放的队列的队列索引，由函数返回 <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_play_queue.htm"><span class="inline">audio_create_play_queue()</span></a>.</li>
    <li class="dropspot">"<span class="inline">buffer_id</span>"-不再播放的<a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">缓冲区</a>的缓冲区ID。</li>
    <li class="dropspot">"<span class="inline">queue_shutdown</span>"-在正常播放期间设置为0，在接收到事件时设置为1，因为<a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_free_play_queue.htm"><span class="inline">audio_free_play_queue()</span></a>被称为。当此值设置为1时，您不希望排队等待任何进一步的数据。</li>
  </ul>
  <p>由于可以从多个缓冲区创建音频队列，因此当到达缓冲音频的每个部分的末尾时，可以为一个队列多次触发此事件，因此使用"buffer_id"键。</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;The variable&nbsp;<span class="inline2"><a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">async_load</a></span> is only valid in the asynchronous events, as the DS map that it points to is created at the start of the event, then deleted again at the end, with this variable being reset to a value of <span class="inline2">-1</span>. However, all further data structures created from the event must be cleaned up using the appropriate functions.</p>
  <p>在下面给出的使用示例中，我们将创建一个音频队列，其中添加了10个缓冲的音频声音，然后播放队列：</p>
  <p class="code">audio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono);<br>
    for (var i = 0; i &lt; 10; i++;)<br>
    &nbsp; &nbsp;{<br>
    &nbsp; &nbsp;audio_queue_sound(audio_queue, audio_buffer[i], 0, buffer_get_size(audio_buffer[i]));<br>
    &nbsp; &nbsp;}<br>
    audio_play_sound(audio_queue, 0, true);</p>
  <p>现在检测到录音的每个游戏步骤都会触发一个异步音频录制事件，您可以在其中处理录制的输入，如下所示：</p>
  <p class="code">var queue = async_load[? "queue_id"];<br>
    var num = 0;<br>
    if queue = audio_queue<br>
    &nbsp; &nbsp;{<br>
    &nbsp; &nbsp;for (var i = 0; i &lt; 10; i++;)<br>
    &nbsp; &nbsp; &nbsp; {<br>
    &nbsp; &nbsp; &nbsp; if async_load[? "buffer_id"] == audio_buffer[i]<br>
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{<br>
    &nbsp;buffer_seek(audio_buffer[i], buffer_seek_start, 0);<br>
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;num = i;<br>
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}<br>
    &nbsp; &nbsp; &nbsp; }<br>
    &nbsp; &nbsp;if num == 9<br>
    &nbsp; &nbsp; &nbsp; {<br>
    &nbsp; &nbsp; &nbsp; audio_stop_sound(audio_queue);<br>
    &nbsp; &nbsp; &nbsp; audio_free_play_queue(audio_queue);<br>
    &nbsp; &nbsp; &nbsp; }<br>
    &nbsp;}</p>
  <p>在这里，我们检查队列ID，如果它是我们想要的，我们然后检查缓冲区ID以查看哪个缓冲区已完成播放。然后，我们还将本地变量设置为该索引值以供稍后检查，并将缓冲区设置回初始值声音。一旦我们的局部变量达到9，表明队列已经完成，我们就停止声音播放并释放队列。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Async_Events.htm">异步事件</a></div>
        <div style="float:right">Next:&nbsp;<a href="Audio_Playback_Ended.htm">Audio Playback Ended</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Playback Event
ev_audio_playback
Audio Playback
-->
  <!-- TAGS
ev_audio_playback
-->

</body></html>