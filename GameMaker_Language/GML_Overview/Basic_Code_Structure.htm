<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "8.2.1.0_1";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Basic Code Structure</title>
  <meta name="generator" content="Adobe RoboHelp 2020">
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css">
  <script src="../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Page outlining the basic code structure when using GML">
  <meta name="rh-index-keywords" content="Code Structure">
  <meta name="search-keywords" content="Code Structure,begin,end,statement">
<meta name="brsnext" value="GameMaker_Language/GML_Overview/Runtime_Functions.htm"><meta name="brsprev" value="GameMaker_Language/GML_Overview/GML_Overview.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Basic Code Structure">
        <span>Basic Code Structure</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>基本代码结构</h1>
  <p>代码以<em>块</em>形式写入，典型的代码块由一组名为<a class="tooltip" title="在编程中，语句是用编程语言合法编写的单行代码，表示要执行的操作。语句可能具有自己的内部组件，包括表达式，运算符和函数。语句的一个示例是A = B +5。GameMakerStudio 2程序不过是一系列一起执行任务（如移动玩家）的一个或多个语句的序列。">语句</a><span class="glossextra"> </span>的指令组成，然后由<span data-keyref="GameMaker Name">GameMaker</span>解释并用于在游戏中实现某些操作。"某事"可以简单到加2和2得到4，或者复杂到让敌人在他们的健康状况低于一定值时逃跑。程序的实际结构可能会有很大差异，具体取决于它使用的函数，但细分到基本函数时，它只是看起来如下所示：</p>
  <p class="code">&lt;statement&gt;;<br>
    &lt;statement&gt;;<br>
    ...</p>
  <p>语句应该用';'符号分隔，以防止<a class="tooltip" title="变量是程序中的命名值，可以在需要时对其进行修改，存储和显示。例如，如果我们有一个名为XYZ的整数变量，并且它存储的值为10，则可以执行A = XYZ + 10之类的操作，这将把变量A的值设置为20，因为XYZ为10，我们正在添加10。您还可以使用运算符更改变量值，因此XYZ = XYZ + 100会将XYZ变量的值修改为等于110。变量也可以用于存储标识符和对不同资源的引用。">变量</a>声明错误，并保持代码干净整洁，它们可以由变量声明、<a class="tooltip" title="表达式是一个或多个常量，变量，运算符和/或函数的组合，这些常量根据特定的优先级和关联规则进行解释以返回另一个值。一个简单的表达式是（5 + 5），它返回10。">表达式</a><span class="glossextra"> </span>和对特定<strong>函数</strong>的调用组成。你也可以使用花括号<span class="inline">{}</span>将语句“分组”成一个块，这样它们就可以一起运行，就像下面的<a class="tooltip" title="条件，条件语句和条件表达式是通用编程语言的功能，它们可以帮助代码在结果为真或假的情况下做出选择。它们可以根据程序员的需要执行不同的操作，并且可以将多个条件组合为一个条件，只要条件的最终值为true或false。条件语句的示例是 if”和“ while”。">条件</a>示例:</p>
  <p class="code">if (&lt;conditional&gt;)<br>
    {<br>
    &nbsp; &nbsp; &lt;statement&gt;;<br>
    &nbsp; &nbsp; &lt;statement&gt;;<br>
    &nbsp; &nbsp; ...<br>
    }</p>
  <p class="note"><span class="note">注意</span>&nbsp; GameMaker语言也将接受 <span class="inline">begin</span><span> </span>&nbsp;<span class="inline">和</span>end<span></span>&nbsp;&nbsp;<span class="inline">，而不是花括号</span>{}，尽管这不是典型的最常见的方法:</p>
  <p class="code">if (&lt;conditional&gt;)<br>
    begin<br>
    &nbsp; &nbsp; &lt;statement&gt;;<br>
    &nbsp; &nbsp; &lt;statement&gt;;<br>
    &nbsp; &nbsp; ...<br>
    end</p>
  <p>以下是代码块外观的更直观表示，这次在<b>GameMaker</b><span data-keyref="GameMaker Name">脚本编辑器</span>中创建为<a href="../../The_Asset_Editors/Scripts.htm">脚本</a>：</p>
  <p><img alt="Program Example" class="center" src="../../assets/Images/Scripting_Reference/GML/Overview/ProgramExample.png" style="cursor: nwse-resize;"></p>
  <p>有许多不同类型的陈述、表述、条件和函数，所有这些都将在手册的后续章节中详细讨论。</p>
  <p class="note"><span class="note">注意</span>如果您是新编程人员，可能需要先查看<a href="../../Quick_Start_Guide/Quick_Start_Guide.htm">《快速入门指南》</a>，然后再继续。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="GML_Overview.htm">GML&nbsp;Overview</a></div>
        <div style="float:right">Next: <a href="Runtime_Functions.htm">运行时函数</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Basic Code Structure
code structure
code block
statements
statement separator
begin
end
-->
  <!-- TAGS
structure
-->

</body></html>