<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "8.2.2.10";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Strings</title>
  <meta name="generator" content="Adobe RoboHelp 2020">
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css">
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Reference section for string functions">
  <meta name="rh-index-keywords" content="\r,\b,\f,\t,\v,\\,\a,\u,\x,\,\r,\b,\f,\t,\v,\\,\a,\u,\x,\">
  <meta name="search-keywords" content="Strings,\n,\r,\b,\f,\t,\v,\\,\a,\u,\x,\,string literal,@">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Strings/ansi_char.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Data_Structures/ds_set_precision.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Strings">
        <span>Strings</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">字符串</span></h1>
  <p>如果您希望在游戏中使用文本，无论是用于对话、菜单还是仅用于调试，请使用<span data-field="title" data-format="lower-alpha">字符串</span>。</p>
  <p>在 GML 中，文本被创建为<em>字符串</em>，可以存储在变量中。"字符串"是指组成文本的"<em>字符串</em>字符"。</p>
  <p><span data-keyref="GameMaker Name">GameMaker</span> 有一套完整的函数，允许您以多种方式操作<span data-field="title" data-format="lower-alpha">字符串</span>，包括在另一个字符串中插入字符串、复制字符串以及分析<span data-field="title" data-format="lower-alpha">字符串</span>中包含的数字或字母。</p>
  <p>它还具有更高级的字符串处理函数，包括修剪、拆分成数组、从数组连接和迭代字符。</p>
  <p>最后，<span data-keyref="GameMaker Name">GameMaker</span> 还提供了一种便捷的方法来转换<a href="../../GML_Overview/Structs.htm">结构</a>和<a href="../Asset_Management/Instances/Instances.htm">实例</a>到字符串表示形式，是为它们分配一个 <a href="Strings.htm#h3">toString() 方法</a>。</p>
  <h2>字符串基础</h2>
  <p>字符串是一种<a href="../../GML_Overview/Variables_And_Variable_Scope.htm">变量</a>。最简单的创建方法是在双引号 <span class="inline2">""</span> 中添加文本：</p>
  <p class="code">my_first_string = "Hello World!";</p>
  <p>上面的代码行创建了一个字符串，其内容为 "Hello World!" 并将其赋给名为 <span class="inline2">my_first_string</span> 的变量。</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span> 不接受单引号字符串 <span class="inline2">' '</span>。</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span> 您不能在代码中将一个字符串拆分为多行，并期望 <span data-keyref="GameMaker Name">GameMaker</span> 将其呈现为换行符，但是，您可以通过使用字符串标识符 <span class="inline2"><a href="Strings.htm#@">@</a></span> 之前在您的字符串的开始引号来做到这一点，如下面的<a href="#h2">所述。</a></p>
  <h3 id="h1">转义字符</h3>
  <p>有时，您需要在字符串中添加特殊字符，如双引号 <span class="inline2">"</span>、换行符或具有特定字符代码的字符。</p>
  <p>这可以通过使用<i>转义字符</i>来完成。这些字符前面有一个反斜杠 <span class="inline2">\</span> 符号。例如，如果您想要在字符串中加引号，则应该是这样的：</p>
  <p class="code">str = "Hello\"World\"!";</p>
  <p><span data-keyref="GameMaker Name">GameMaker</span> 还支持完整的四字节宽 Unicode 字符，允许您解码和编码标准上限的 Unicode 字符 (包括但不限于表情符号)。</p>
  <p>要处理Unicode字符，您可以使用反斜杠<span class="inline2">\</span>在十六进制的任何Unicode文字数字之前加上"<span class="inline">u</span>"，例如，"<span class="inline"><span class="inline">\u00e2</span></span>"代表"á"，其中数字是Unicode字符的编号。在以这种方式使用Unicode时，您需要注意这样一个事实：<span data-keyref="GameMaker Name">GameMaker</span>将解释"<span class="inline">u</span>"后面的<i>所有</i>数字，因此，如果您想要写"áa"，例如，您应该使用：</p>
  <p class="code">"\u00e2\a"</p>
  <p>或</p>
  <p class="code">"\u00e2\u61"</p>
  <p>或</p>
  <p class="code">"\u00e2" + "a"</p>
  <p>只使用 "<span class="inline">\u00e2a</span>" 实际上会产生 Unicode 字符 "<span class="inline">ส</span>"( 实质上变成 "<span class="inline">\ue2a</span>")。</p>
  <p><span data-keyref="GameMaker Name">GameMaker</span> 还可以处理任何十六进制文字-通常写为 "<span class="inline">0x</span>" 后面的十六进制数字，例如 "<span class="inline">0xff</span>"，其中数字形成要使用的字符的字符代码。在 <span data-keyref="GameMaker Name">GameMaker</span>&nbsp;字符串中，这些字符串使用 "<span class="inline">\x</span>"，然后是十六进制值。下表列出了这些字符和其他预定义的转义字符：</p>
  <table style="caption-side: top">
    <caption>字符串转义字符</caption>
    <tbody>
      <tr>
        <th>常量</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>\n</td>
        <td>Newline</td>
      </tr>
      <tr>
        <td>\r</td>
        <td>Carriage return (0x0d)</td>
      </tr>
      <tr>
        <td>\b</td>
        <td>Backspace (0x08)</td>
      </tr>
      <tr>
        <td>\f</td>
        <td>Form Feed (0x0c)</td>
      </tr>
      <tr>
        <td>\t</td>
        <td>Horizontal Tab (0x09)</td>
      </tr>
      <tr>
        <td>\v</td>
        <td>Vertical Tab (0x0b)</td>
      </tr>
      <tr>
        <td>\\</td>
        <td>Backslash itself (0x5c)</td>
      </tr>
      <tr>
        <td>\a</td>
        <td>Alert (0x07)</td>
      </tr>
      <tr>
        <td>\u[Hex Digits]</td>
        <td>Insert Unicode character</td>
      </tr>
      <tr>
        <td>\x[Hex Digits]</td>
        <td>Insert hex literal character</td>
      </tr>
      <tr>
        <td>\[Octal Digits]</td>
        <td>Insert octal Unicode character</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span>&nbsp;字符串支持换页、垂直制表符等...。但这并不意味着可以<b>呈现</b>，在绘制字符串时，这些字符可能会被忽略。</p>
  <h3 id="h2">多行字符串文字</h3>
  <p>您可以通过在整个字符串前面加上 <span class="inline"><a id="@"></a>@</span> 字符来创建多行字符串文字：</p>
  <p class="code">var test = @"This string has<br>
    line breaks<br>
    over multiple<br>
    lines<br>
    ";</p>
  <p>上面的代码将创建一个字符串，该字符串在多行中呈现，就像包含换行符一样。字符串文字也可以使用单引号 <span class="inline2">' '</span> 定义，如果前面加一个 <span class="inline">@</span> 符号的话。</p>
  <p>多行字符串文字不支持转义字符，例如，<span class="inline">@"Hello\World"</span> 将 <em> 不会 </em> 尝试对 World 上的 W 进行转义，并将逐字存储。但请注意，在使用这样的字符串文字时，如果希望将引号作为字符串的一部分，则需要断开字符串，例如：</p>
  <p class="code">var test = @"Hello " + "\"" + @"World" + "\"";</p>
  <div data-conref="../../../assets/snippets/Note_Unicode_missing_glyph_replacement.hts">
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span> 在绘制事件中呈现时，Unicode 字符 9647(▯) 用于替换指定字体中可能缺少的任何 <a class="tooltip" title="字形是字符的一种特殊的视觉外观。它是使用给定字体的字符的外观。"> 字形 </a>。例如，如果你的字体没有 ° 符号，那么写 90° 实际上会产生 90▯。</p>

</div>
  <h3 id="h4">Template Strings</h3>
  <p>Template strings give you a convenient syntax to create and format strings. You can create them by prefixing a string literal with the <span class="inline2"><a id="$"></a>$</span> character, and including expressions inside <span class="inline2">{}</span>:&nbsp;</p>
  <p class="code">var _world = "Earth";<br>
    var _template = $"Hello {_world}!";</p>
  <p>Which produces the same string as:&nbsp;</p>
  <p class="code">var _world = "Earth";<br>
    var _template = string("Hello {0}!", _world);</p>
  <p>Everything written between curly braces <span class="inline2">{ }</span>&nbsp;inside a template string is executed as regular GML. The result of the GML expression between the braces is inserted into the string:&nbsp;</p>
  <p class="code">var _template = $"The result of a random complicated calculation is {5 * power(pi, 3) + 37.84094}";</p>
  <p>To make it more clear that this is regular GML,&nbsp;<a href="../../../The_Asset_Editors/Scripts.htm">The Script Editor</a>&nbsp;also highlights this code normally.&nbsp;<a href="../../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">Feather</a>&nbsp;also checks these GML expressions for any errors, e.g.:&nbsp;</p>
  <p class="code">var _arr = [ 1, 2, 3, 4 ];<br>
    var _a = $"The first value is {_arr[| 0]}"; // GM1028 - Accessor is intended for type of 'Id.DsList' but 'Array&lt;Real&gt;' appears instead.</p>
  <p>You can split a template string across multiple lines, however you can only do this in the expression parts of the templates. Any newline and other&nbsp;white-space characters&nbsp;that need to be added to the actual string have to be added using&nbsp;<a href="Strings.htm#h1">转义字符</a>.</p>
  <p>The following code shows a valid and an invalid way of splitting a template string across multiple lines:&nbsp;</p>
  <p class="code">var _a = $"This is the \n{<br>
    valid<br>
    }\nway to split&nbsp;a template across multiple lines";<br>
    <br>
    var _b = $"This is the&nbsp;<br>
    {invalid}<br>
    way to split&nbsp;a template across multiple lines";
  </p>
  <h2 id="h3">toString() 方法</h2>
  <p>当将对对象的结构或实例的引用作为参数传递给 <span class="inline2"><a href="string.htm">string</a></span>/<span class="inline2"><a href="string_ext.htm">string_ext</a></span>/<span class="inline2"><a href="../Debugging/show_debug_message.htm">show_debug_message</a></span>/<span class="inline2"><a href="show_debug_message_ext.htm">show_debug_message_ext</a></span> 中的任何一个时，将调用其 <span class="inline2">toString</span> 方法 (如果设置了一个方法)。</p>
  <p class="code">toString = function()<br>
    {<br>
    &nbsp; &nbsp; return string("I am the instance with ID {0}", id);<br>
    }</p>
  <p>您可以将结构引用传递给上述函数之一以使用其 <span class="inline2">toString()</span> 方法，但对于实例，您必须在其作用域内使用 <span class="inline2">self</span>，因为传递实例 ID 不会调用其 <span class="inline2">toString()</span> 方法。</p>
  <p class="code">// In an instance<br>
    string(self); // Calls its toString() method, if it exists<br>
    string(id); // Prints "ref &lt;id&gt;", same goes for IDs returned from instance_create_*()</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_tip.hts"><span class="tip">提示</span></span> 当将数组传递给上述函数之一时，它们会自动转换为字符串表示形式，而不需要为数组分配自定义函数。</p>
  <p>如果要绘制结构或实例，则不需要使用 <a href="string.htm"><span class="inline2">string()</span></a> 将其转换为字符串。只需传递对 <span class="inline2"><a href="../Drawing/Text/draw_text.htm">draw_text</a></span> 或 <a href="../Drawing/Text/Text.htm"> 任何相关的 <span class="inline2">draw_text_</span> 函数 </a> 的有效引用即可自动将其转换为字符串：</p>
  <p class="code">draw_text(0, 0, self);</p>
  <h2>函数参考</h2>
  <p>下面是处理字符串的函数列表。</p>
  <div data-conref="../../../assets/snippets/Note_String_Indices_Start_At_1.hts">
  <p class="note"><span data-conref="../../../assets/snippets/Tag_important.hts"><span class="important">重要</span></span> 与 <span data-keyref="GameMaker Name">GameMaker</span> 中的其他数据类型都是<a href="https://en.wikipedia.org/wiki/Zero-based_numbering">从 0</a> 开始的其他数据类型相比，<span data-keyref="GameMaker Name">GameMaker</span> 中的字符串位置从 1 开始(表示它们从<em>从1</em>开始)。因此，字符串中的第一个字符的位置为 1，第二个字符的位置为 2，依此类推。最后一个字符是<span class="inline2"><a href="string_length.htm">string_length</a>(string)</span>。</p>

</div>
  <h3>创建字符串</h3>
  <ul class="Disc">
    <li><a href="string.htm">string</a></li>
    <li><a href="string_ext.htm">string_ext</a></li>
  </ul>
  <h3>字符串编码</h3>
  <ul class="Disc">
    <li><a href="ansi_char.htm">ansi_char</a></li>
    <li><a href="chr.htm">chr</a></li>
    <li><a href="ord.htm">ord</a></li>
    <li><a href="real.htm">real</a></li>
    <li><a href="string_byte_at.htm">string_byte_at</a></li>
    <li><a href="string_byte_length.htm">string_byte_length</a></li>
    <li><a href="string_set_byte_at.htm">string_set_byte_at</a></li>
    <li><a href="string_char_at.htm">string_char_at</a></li>
    <li><a href="string_ord_at.htm">string_ord_at</a></li>
  </ul>
  <h3>搜索和信息</h3>
  <ul class="Disc">
    <li><a href="string_length.htm">string_length</a></li>
    <li><a href="string_pos.htm">string_pos</a></li>
    <li><a href="string_pos_ext.htm">string_pos_ext</a></li>
    <li><a href="string_last_pos.htm">string_last_pos</a></li>
    <li><a href="string_last_pos_ext.htm">string_last_pos_ext</a></li>
    <li><a href="string_starts_with.htm">string_starts_with</a></li>
    <li><a href="string_ends_with.htm">string_ends_with</a></li>
    <li><a href="string_count.htm">string_count</a></li>
  </ul>
  <h3>操作字符串</h3>
  <ul class="Disc">
    <li><a href="string_copy.htm">string_copy</a></li>
    <li><a href="string_delete.htm">string_delete</a></li>
    <li><a href="string_digits.htm">string_digits</a></li>
    <li><a href="string_format.htm">string_format</a></li>
    <li><a href="string_insert.htm">string_insert</a></li>
    <li><a href="string_letters.htm">string_letters</a></li>
    <li><a href="string_lettersdigits.htm">string_lettersdigits</a></li>
    <li><a href="string_lower.htm">string_lower</a></li>
    <li><a href="string_repeat.htm">string_repeat</a></li>
    <li><a href="string_replace.htm">string_replace</a></li>
    <li><a href="string_replace_all.htm">string_replace_all</a></li>
    <li><a href="string_upper.htm">string_upper</a></li>
    <li><a href="string_hash_to_newline.htm">string_hash_to_newline</a></li>
    <li><a href="string_trim.htm">string_trim</a></li>
    <li><a href="string_trim_start.htm">string_trim_start</a></li>
    <li><a href="string_trim_end.htm">string_trim_end</a></li>
    <li><a href="string_split.htm">string_split</a></li>
    <li><a href="string_split_ext.htm">string_split_ext</a></li>
    <li><a href="string_join.htm">string_join</a></li>
    <li><a href="string_join_ext.htm">string_join_ext</a></li>
    <li><a href="string_concat.htm">string_concat</a></li>
    <li><a href="string_concat_ext.htm">string_concat_ext</a></li>
  </ul>
  <h3>与绘制相关的</h3>
  <ul class="Disc">
    <li><a href="string_width.htm">string_width</a></li>
    <li><a href="string_width_ext.htm">string_width_ext</a></li>
    <li><a href="string_height.htm">string_height</a></li>
    <li><a href="string_height_ext.htm">string_height_ext</a></li>
  </ul>
  <h3>重复</h3>
  <ul class="Disc">
    <li><a href="string_foreach.htm">string_foreach</a></li>
  </ul>
  <h3>数据类型</h3>
  <ul class="Disc">
    <li><a href="../Variable_Functions/is_string.htm">is_string</a></li>
  </ul>
  <h3>方法</h3>
  <ul class="Disc">
    <li><a href="Strings.htm#h3">toString() 方法</a></li>
  </ul>
  <h3>相关函数</h3>
  <ul class="Disc">
    <li><a href="../Drawing/Text/Text.htm">文本</a></li>
    <li>调试：<span class="inline2"><a href="../Debugging/show_debug_message.htm">show_debug_message</a></span> 和 <span class="inline2"><a href="show_debug_message_ext.htm">show_debug_message_ext</a></span></li>
    <li><a href="../OS_And_Compiler/OS_And_Compiler.htm#h">剪贴板</a></li>
  </ul>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:&nbsp;<a href="../GML_Reference.htm">GML 代码参考</a></div>
        <div style="float:right">Next: <a href="../Maths_And_Numbers/Maths_And_Numbers.htm">数学与数字</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Strings
\n
\r
\b
\f
\t
\v
\\
\a
\u
\x
\
-->
  <!-- TAGS
string_functions
-->

</body></html>