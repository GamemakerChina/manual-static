<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../../..";
    gCommonRootRelPath = "../../../../..";
    gTopicId = "8.2.2.3.14.6";
  
//]]></script>

  <script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Filter and Effect Functions</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css">
  <script src="../../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo">
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Filter/Effect Layers">
  <meta name="rh-index-keywords" content="">
  <meta name="search-keywords" content="Filter and Effect Functions">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Rooms/Filter_Effect_Layers/fx_create.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Rooms/Sequence_Layers/layer_sequence_is_finished.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Filter and Effect Functions">
        <span>Filter and Effect Functions</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>过滤器和效果函数</h1>
  <h2>概述</h2>
  <p>有各种 GML 函数可用于创建、修改和删除房间内图层中的滤镜/效果，使您能够轻松实时管理效果，以创建逼真的和动态的滤镜/效果。</p>
  <div data-conref="../../../../../assets/snippets/FX_only_added_through_IDE.hts">
  <p>请注意，目前只有两种方法可确保GameMaker在游戏中加载特定过滤器/效果：</p>
  <ul class="colour">
    <li>通过IDE在<strong>至少一个房间</strong>中添加滤镜/效果</li>
    <li>调用<span class="inline"><a href="fx_create.htm">fx_create()</a></span>，将过滤器/效果名称作为字符串<a class="tooltip" title="在代码中写入的显式值，例如，当您编写“A TEXT STRING”时，您使用的是字符串字面量，而不是通过变量或函数返回字符串。类似地，[0,1,2]是数组字面值。">literal</a></li>
  </ul>
  <p>这意味着要在运行时使用特定的过滤器/效果，必须首先将其添加到房间(因此 GameMaker 知道要使用它)，或者在<span class="inline"><a href="fx_create.htm">fx_create()</a></span>调用中明确指定。</p>

</div>
  <p>后一种方法(在代码中指定filter/effect)只与函数参数中直接指定的string<a class="tooltip" title="在代码中写入的显式值，例如，当您编写“A TEXT STRING”时，您使用的是字符串字面量，而不是通过变量或函数返回字符串。类似地，[0,1,2]是数组字面值。">literal</a><span class="glossextra">s</span>一起工作，这意味着如果您使用变量或任何逻辑生成filter/effect名称字符串，则资源编译器将不检测该字符串，并且不会加载filter/effect。</p>
  <p>请参考以下示例：</p>
  <p class="code">// This will work on its own<br>
    var _fxshake&nbsp;= fx_create("_filter_screenshake");<br>
    <br>
    // This will NOT work on its own<br>
    var _myfilters = { screenshake: "_screenshake" }<br>
    var _filter_to_use = "_filter" + _myfilters.screenshake;<br>
    var _fxshake = fx_create(_filter_to_use);
  </p>
  <p>为确保后一种方法有效，您只需将过滤器添加到项目中的至少一个房间，或者确保<span class="inline"><a href="fx_create.htm">fx_create()</a></span>在项目中的任何地方被调用，该过滤器名作为字符串常量(而不是变量)。</p>
  <div data-conref="../../../../../assets/snippets/FX_Limitations.hts">
  <h2>限制</h2>
  <p>使用滤镜 / 效果时需要记住一些限制：</p>
  <ul class="colour">
    <li>禁用<a href="../../../Drawing/Surfaces/application_surface_enable.htm">应用程序表面</a>时滤镜/效果将不起作用。它在默认情况下是启用的，您通常不应该要求禁用它，但您可以这样做以在移动设备上获得性能。在这种情况下，您将无法使用滤镜/效果，因为它们需要材质球操纵的表面纹理。</li>
    <li>采用纹理图像的滤镜 / 效果要求该图像位于单独的纹理页面上。您可以通过 <a href="../../../../../The_Asset_Editors/Sprites.htm"> 精灵编辑器 </a> 进行设置。</li>
  </ul>

</div>
  <h2>函数列表</h2>
  <p>以下函数用于创建和管理包含效果数据的"FX结构"：</p>
  <ul class="colour">
    <li><a href="fx_create.htm">fx_create</a></li>
    <li><a href="fx_get_parameter.htm">fx_get_parameter</a></li>
    <li><a href="fx_get_parameters.htm">fx_get_parameters</a></li>
    <li><a href="fx_get_name.htm">fx_get_name</a></li>
    <li><a href="fx_get_parameter_names.htm">fx_get_parameter_names</a></li>
    <li><a href="fx_get_single_layer.htm">fx_get_single_layer</a></li>
    <li><a href="fx_set_parameter.htm">fx_set_parameter</a></li>
    <li><a href="fx_set_parameters.htm">fx_set_parameters</a></li>
    <li><a href="fx_set_single_layer.htm">fx_set_single_layer</a></li>
  </ul>
  <p>以下函数用于通过使用FX结构修改可能包含过滤器/效果的层：</p>
  <ul class="colour">
    <li><a href="layer_set_fx.htm">layer_set_fx</a></li>
    <li><a href="layer_get_fx.htm">layer_get_fx</a></li>
    <li><a href="layer_clear_fx.htm">layer_clear_fx</a></li>
    <li><a href="layer_enable_fx.htm">layer_enable_fx</a></li>
    <li><a href="layer_fx_is_enabled.htm">layer_fx_is_enabled</a></li>
  </ul>
  <h2>运行时修改FX</h2>
  <p>您可以通过执行以下操作在运行时修改过滤器/效果：</p>
  <ul class="colour">
    <li><strong>通过调用</strong><span class="inline"><a href="layer_get_fx.htm">layer_get_fx()</a></span>从你要修改的层中获取FX结构。<ul><li><em>或者，通过调用<span class="inline"><a href="fx_create.htm">fx_create()</a></span>创建一个新的FX结构，并使用<span class="inline"><a href="layer_set_fx.htm">layer_set_fx()</a></span>将其应用于一个图层。</em></li></ul></li>
    <li><strong>调用</strong><span class="inline"><a href="fx_get_parameters.htm">fx_get_parameters()</a></span><span class="inline"></span>{}检索其参数结构</li>
    <li><strong>通过为结构变量赋值，根据需要修改参数</strong><ul><li><em>从此处获取参数名称：<a href="../../../../../The_Asset_Editors/Room_Properties/FX/All_Filter_Effect_Types.htm">外汇类型 参数</a></em></li></ul></li>
    <li>通过调用 <span class="inline"><a href="fx_set_parameters.htm">fx_set_parameters()</a></span><ul><li><em> 将修改后的结构 <strong> 应用回 FX结构，您无需在此处调用 </strong><a href="layer_set_fx.htm"><span class="inline">layer_set_fx()</span></a> 因为修改 FX 结构会直接影响它已分配给的层 </em></li></ul></li>
  </ul>
  <p>下面是上面提到的工作流的示例代码：</p>
  <p class="code_heading">创建事件</p>
  <p class="code">// Store the FX struct, and its parameters struct, in variables<br>
    pixelate_fx = layer_get_fx("Effect_1");<br>
    pixelate_fx_params = fx_get_parameters(pixelate_fx);</p>
  <p class="code_heading">步事件</p>
  <p class="code">// Change param as variable<br>
    pixelate_fx_params.g_CellSize = round((mouse_x / room_width) * 64);<br>
    <br>
    // Or, change param as string<br>
    pixelate_fx_params[$ "g_CellSize"] = round((mouse_x / room_width) * 64);<br>
    <br>
    // Apply updated parameters struct to the FX struct<br>
    fx_set_parameters(pixelate_fx, pixelate_fx_params);
  </p>
  <h2>FX 运行时参数</h2>
  <p><a href="../../../../../The_Asset_Editors/Room_Properties/FX/All_Filter_Effect_Types.htm">外汇类型 参数</a>页列出了所有筛选器/效果及其<strong>运行时参数</strong>。</p>
  <p>可以通过以下三种方式使用运行时参数名称(以参数<span class="inline2">" g_CellSize"</span>为例)：</p>
  <ul class="colour">
    <li>通过调用<span class="inline"><a href="fx_set_parameter.htm">fx_set_parameter()</a></span>：<span class="inline2">fx_set_parameter( fx_struct，<strong>" g_CellSize"</strong>， 8)修改FX结构中的参数;</span></li>
    <li>修改参数结构中的变量：<span class="inline2">params_struct.<strong>g_CellSize</strong>= 8;</span><ul><li><span class="note">注意</span><em>调用<span class="inline"><a href="fx_get_parameters.htm">fx_get_parameters()</a></span>.</em></li></ul></li>
    <li>使用<span class="inline2">$</span>访问器和字符串修改参数结构中的变量：<span class="inline2">params_struct[$<strong>" g_CellSize"</strong>]= 8;</span></li>
  </ul>
  <h2>单层模式</h2>
  <p>默认情况下，滤镜/效果应用于<a href="layer_set_fx.htm">分配给</a>的层以及该层下的所有层，但是，您可以使用<a href="fx_set_single_layer.htm"><span class="inline">fx_set_single_layer()</span></a>为筛选器/效果启用<strong>单层</strong>模式，以确保仅将其应用于指定给的层。</p>
  <p>下图显示了将一个过滤器应用于多个层(这是所有FX层的默认行为)，然后显示启用了单层模式并应用于非FX层的相同过滤器：</p>
  <div class="image_columns">
    <figure><img alt="Fire Jump man is woozy with the universe" class="center_shadow" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Rooms/FX_single_layer_off.png" title="Fire Jump man is woozy with the universe">
      <figcaption>单层模式关闭</figcaption>
    </figure>
    <figure><img alt="Fire Jump man is woozy... alone" class="center_shadow" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Rooms/FX_single_layer_on.png" style="cursor: nesw-resize;" title="Fire Jump man is woozy... alone">
      <figcaption>单层模式开启</figcaption>
    </figure>
  </div>
  <p>也可以使用<a href="../../../../../IDE_Tools/The_Inspector.htm">检查器</a>在"房间编辑器"中使用 SingleLayer 效果。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Rooms.htm">房间</a></div>
        <div style="float:right">Next:&nbsp;<a href="../General_Layer_Functions/General_Layer_Functions.htm">常规图层函数</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Filter and Effect Functions
Filter/Effect Layers
-->
  <!-- TAGS
fx_layer_functions
-->

</body></html>