<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.6.8";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Surfaces</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Reference section for the Surface functions and variables">
  <meta name="rh-index-keywords" content="">
  <meta name="search-keywords" content="Surfaces,application_surface,application surface,app surface">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Surfaces/surface_exists.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_submit.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Surfaces">
        <span>Surfaces</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">Surfaces</span></h1>
  <p>在正常绘制事件中，<span data-keyref="GameMaker Name">GameMaker</span> 实际上并不直接绘制到屏幕，而是绘制到称为<i>应用程序表面</i>的<b>表面</b>。此表面基本上是一个空白的"画布"，稍后可以在需要时在绘制到屏幕之前对其进行操作，并且在大多数情况下 <span data-keyref="GameMaker Name">GameMaker</span> 会为您处理此事件(尽管您也可以在着色器、缩放和许多其他事情的代码中自行操作它，但下面会提供进一步的详细信息)。</p>
  <p>但是，除了这个应用程序表面，你还可以创建自己的表面，并使用它们在游戏中创建令人惊叹或微妙的特殊效果。例如，可以使用表面来"捕捉"实例，然后可以销毁这些实例，通过这种方式，可以创建贴花效果，其中实例的精灵显示在表面上，就好像它仍然存在一样，允许出现碎片、血液等图形效果，而不会产生任何实际的处理开销。你可以对表面做的另一件事情是把它们当作纹理来操纵，或者创建"飞行中的精灵"，或者创建复杂的叠加，实际上对表面的用途是无穷的！</p>
  <p>法线表面非常容易使用，但使用它们时需要遵循一些基本规则：</p>
  <ul class="colour">
    <li>首先，您应该意识到表面(应用程序表面<i>除外</i>)是"易变的"。这意味着，如果设备或窗口失去焦点或被最小化(很好的例子是，当您 Alt+ Tab 键切换到不同的窗口，然后在 Windows 上返回，或者当应用程序由于调用而失去焦点时，在 Android 设备上返回)，则表面<strong>可能会被破坏</strong>。这是因为它<em>仅</em>存储在纹理内存 (<a class="tooltip" title="VRAM是视频可用的内存量，即：可以存储纹理和图像的内存空间。">VRAM</a>)中，并且可能会在目标平台需要该内存进行其他操作时被覆盖，这意味着您应该<i><b>始终</b></i>具有某种类型的失败安全代码，通常具有 <a href="surface_exists.htm"><span class="inline">surface_exists()</span></a> 函数。</li>
  </ul>
  <p class="note" style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 4em"><span class="note">注意</span><strong></strong>这种情况似乎不会发生在精灵或其他视觉资源上(但实际上会发生！)，因为它们也存储在常规存储器 (RAM) 中，当它们从纹理存储器 (VRAM) 中移除时，当游戏重新聚焦时，它们会立即从常规存储器中恢复。</p>
  <ul class="colour">
    <li>其次，应注意，表面可能需要大量 VRAM 才能使用，因此应尝试将其保持尽可能小的尺寸。通常，您会尝试使它们不大于视图或显示窗口的大小。</li>
    <li>第三，<b>只应在绘制事件中创建表面</b>。如果在实例的"创建事件"中创建表面，则可能会获得与 <span class="inline">application_surface</span> <i>相同的</i>个索引。这可能会导致许多问题和混淆，因为您认为使用的是自己的表面，但实际上使用的是当前渲染目标。您还应该始终尝试将<i>绘制</i>限制在绘制事件中的表面，因为 <span data-keyref="GameMaker Name">GameMaker</span> 绘制到屏幕的优化方式，建议您将所有绘制函数<i>保留在绘制事件</i>-这包括在首次创建表面时清除表面，等等...绘制到绘制事件外部的表面是可能的，甚至对于某些效果可能是必需的，但这不是<em>应该如何进行</em>。</li>
    <li>第四，当手动绘制到表面时，表面总是<i>处于(0,0 )的位置。这意味着您可能需要将</i>绝对<em>坐标转换为表面的</em>相对<em>坐标。例如，如果具有摄影机大小的表面，并希望将摄影机中当前可见的内容绘制到该表面，则应从实际的x和y坐标中减去摄影机视图x和y坐标，以获得与表面(0,0 )位置的相对位置。因此，代码看起来像这样：</em></li>
  </ul>
  <p class="code">if view_current = 0<br>
    {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;surface_set_target(surf);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;with (obj_Effect)<br>
    &nbsp; &nbsp; {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _vx = camera_get_view_x(view_camera[1]);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var _vy = camera_get_view_y(view_camera[1]);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_sprite(sprite_index, image_index, x - _vx, y - _vy);<br>
    &nbsp; &nbsp; }<br>
    &nbsp;&nbsp;&nbsp;&nbsp;surface_reset_target();<br>
    }<br>
    else<br>
    {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;draw_surface(surf, 0, 0);<br>
    }</p>
  <ul class="colour">
    <li>最后，值得注意的是，绘制到表面将考虑每个像素的颜色<em>和</em>的Alpha分量，这两个分量既来自表面本身，也来自绘制到表面的内容。这可能会导致一些相当不直观的结果(例如，将具有0.5 Alpha的精灵绘制到具有0 Alpha的表面将给出0.25的最终Alpha)。下一页说明了这样做的原因，我们建议您在处理表面之前阅读这些原因：<a href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">使用混合模式指南</a></li>
  </ul>
  <p class="note"><span class="note">注意</span>这不适用于<a href="application_surface.htm">应用表面</a>，只适用于用户创建的表面。</p>
  <p>表面的基本用途如下：</p>
  <ul class="colour">
    <li>首先创建表面并将其索引指定给变量。</li>
    <li>然后将绘制目标设置为表面而不是显示。</li>
    <li>接下来，您将绘制所需的内容以及执行任何其他操作。</li>
    <li>完成后，将重置绘制目标，以便所有进一步的绘制再次出现在屏幕上。</li>
    <li>最后，绘制表面(或者在着色器中使用，或者根据需要使用)。</li>
  </ul>
  <p>需要注意的一点是，如果需要将整个显示绘制到一个表面(包括图块、背景等)，可以简单地访问应用程序表面本身(有关详细信息，请参阅下面的内容)，或者可以使用变量<a href="../../Cameras_And_Display/Cameras_And_Viewports/view_surface_id.htm"><span class="inline">view_surface_id[ 0..7 ]</span></a>将表面指定给视口，因此，在该视口中可见的所有内容都将绘制到相应的表面。</p>
  <p>以下函数用于处理表面(这些函数专用于创建和操作表面，但要将它们实际绘制到屏幕，应使用下面可以找到的特定绘制函数)：</p>
  <ul class="colour">
    <li><a href="surface_exists.htm">surface_exists</a></li>
    <li><a href="surface_create.htm">surface_create</a></li>
    <li><a href="surface_create_ext.htm">surface_create_ext</a></li>
    <li><a href="surface_resize.htm">surface_resize</a></li>
    <li><a href="surface_set_target.htm">surface_set_target</a></li>
    <li><a href="surface_set_target_ext.htm">surface_set_target_ext</a></li>
    <li><a href="surface_get_target.htm">surface_get_target</a></li>
    <li><a href="surface_get_target_ext.htm">surface_get_target_ext</a></li>
    <li><a href="surface_reset_target.htm">surface_reset_target</a></li>
    <li><a href="surface_copy.htm">surface_copy</a></li>
    <li><a href="surface_copy_part.htm">surface_copy_part</a></li>
    <li><a href="surface_depth_disable.htm">surface_depth_disable</a></li>
    <li><a href="surface_get_height.htm">surface_get_height</a></li>
    <li><a href="surface_get_width.htm">surface_get_width</a></li>
    <li><a href="surface_get_texture.htm">surface_get_texture</a></li>
    <li><a href="surface_get_depth_disable.htm">surface_get_depth_disable</a></li>
    <li><a href="surface_getpixel.htm">surface_getpixel</a></li>
    <li><a href="surface_getpixel_ext.htm">surface_getpixel_ext</a></li>
    <li><a href="surface_get_format.htm">surface_get_format</a></li>
    <li><a href="surface_format_is_supported.htm">surface_format_is_supported</a></li>
    <li><a href="surface_free.htm">surface_free</a></li>
    <li><a href="surface_save.htm">surface_save</a></li>
    <li><a href="surface_save_part.htm">surface_save_part</a></li>
  </ul>
  <p>&nbsp;</p>
  <p>绘制表面具有以下函数：</p>
  <p class="note"><b><span class="note">注意</span></b>使用表面时，由于表面存储在纹理内存中，因此表面可能随时停止存在。在直接引用表面之前，应该<b>始终</b>使用<span style="font-size:1px;"><a href="surface_exists.htm"><span class="inline">surface_exists()</span></a></span>检查表面是否存在。</p>
  <ul class="colour">
    <li><a href="draw_surface.htm">draw_surface</a></li>
    <li><a href="draw_surface_ext.htm">draw_surface_ext</a></li>
    <li><a href="draw_surface_part.htm">draw_surface_part</a></li>
    <li><a href="draw_surface_part_ext.htm">draw_surface_part_ext</a></li>
    <li><a href="draw_surface_stretched.htm">draw_surface_stretched</a></li>
    <li><a href="draw_surface_stretched_ext.htm">draw_surface_stretched_ext</a></li>
    <li><a href="draw_surface_tiled.htm">draw_surface_tiled</a></li>
    <li><a href="draw_surface_tiled_ext.htm">draw_surface_tiled_ext</a></li>
    <li><a href="draw_surface_general.htm">draw_surface_general</a></li>
  </ul>
  <p>&nbsp;</p>
  <p>最后，您有两个用于在<a href="../../Buffers/Buffers.htm">缓冲区</a>中存储和检索表面的函数：</p>
  <ul class="colour">
    <li><a href="../../Buffers/buffer_get_surface.htm">buffer_get_surface</a></li>
    <li><a href="../../Buffers/buffer_set_surface.htm">buffer_set_surface</a></li>
  </ul>
  <p>&nbsp;</p>
  <p>As mentioned above, <span data-keyref="GameMaker Name">GameMaker</span> doesn't actually render most things to the screen directly, but instead it renders them to the <b>application surface</b>. This is essentially a surface - just like any that you can make yourself using the surface functions -&nbsp;and as such it can be manipulated, drawn to, sent to shaders, etc. Basically,&nbsp;anything that you would normally do with a surface you created can also be applied to the application surface.</p>
  <p class="note"><b><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;</b>The only thing you <b>cannot</b> do with the application surface is free it. It always exists, although the index value to access it may change.</p>
  <p>运行游戏时，在您进入的每个新房间中第一次调用<a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">绘制事件</a>时会创建此表面，这意味着在此之前不会绘制任何内容。但是，您仍然可以在<b>创建事件</b>或任何其他事件中获取应用程序表面位置并调整其大小，而不会出现任何错误，并且在创建表面时使用的值将与表面相关。创建和绘制应用程序表面的实际事件顺序如下：</p>
  <ul class="colour">
    <li>绘制前事件<br>---&gt;<b>将创建应用程序表面(如果它不存在)并设置渲染目标</b></li>
    <li><b></b>对于每个可见视图端口，或者，如果没有活动的视图端口，则执行一次<ul class="colour"><li>绘制开始事件</li><li>绘制事件</li><li>绘制结束事件<br>---&gt;<b>此处重置应用程序表面渲染目标</b></li></ul></li>
    <li><b></b>绘制后事件<br>---&gt;<b>默认情况下，应用程序表面将绘制到<a class="tooltip" title="显示缓冲区是最终绘制所有内容的“画布”。一些事件直接针对此事件（例如Pre Draw事件），而另一些事件将首先绘制到应用程序表面，然后将其绘制到显示缓冲区。">显示缓冲区</a>中<br></b>(虽然您可以使用 <span class="inline"><a href="application_surface_draw_enable.htm">application_surface_draw_enable()</a></span> 关闭此函数)</li>
    <li><b></b>绘制 GUI 开始事件</li>
    <li>绘制 GUI 事件</li>
    <li>绘制 GUI 结束事件</li>
  </ul>
  <p>使用此表面意味着您可以使用着色器轻松创建令人难以置信的过渡，或者将屏幕包裹在3D形状周围，或者简单地将低分辨率游戏缩放到任何分辨率屏幕...可能性是无穷的！</p>
  <p>要访问此表面，您需要使用内置全局变量 <span class="inline">application_surface</span>，该变量在以下页面中进行了说明：</p>
  <ul class="colour">
    <li><a href="application_surface.htm">application_surface</a></li>
  </ul>
  <p>&nbsp;</p>
  <p>您还具有一些专业函数，这些函数仅设计为<em>用于应用程序表面：</em></p>
  <ul class="colour">
    <li><a href="application_surface_enable.htm">application_surface_enable</a></li>
    <li><a href="application_surface_is_enabled.htm">application_surface_is_enabled</a></li>
    <li><a href="application_get_position.htm">application_get_position</a></li>
    <li><a href="application_surface_draw_enable.htm">application_surface_draw_enable</a></li>
  </ul>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Drawing.htm">绘制</a></div>
        <div style="float:right">Next: <a href="../Lighting/Lighting.htm">光照</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Surfaces
app surface
application surface
-->
  <!-- TAGS
surfaces_functions
-->

</body></html>