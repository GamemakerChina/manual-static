<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../..";
    gCommonRootRelPath = "../..";
    gTopicId = "5.1.0_8";
  
//]]></script>

  <script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>Android</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css">
  <script src="../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Page that details the Android Game Options">
  <meta name="rh-index-keywords" content="Game Options - Android">
  <meta name="search-keywords" content="Android Game Options">
<meta name="brsnext" value="Settings/Game_Options/iOS.htm"><meta name="brsprev" value="Settings/Game_Options/Amazon_Fire.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Android">
        <span>Android</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">Android</span>&nbsp;游戏设置</h1>
  <p>本节概述了可用于控制如何编译 Android 游戏项目的不同选项。不同的章节是:</p>
  <h2 id="general">常规</h2>
  <p><img alt="General Android Game Options 1" class="center" src="../../assets/Images/Settings/Android_General1_Options.png"><strong>常规</strong>部分的第一部分专用于<strong>产品信息</strong>和<strong>生成设置</strong>。您应该填写 产品信息(包括项目<strong>显示名称</strong>)及其包信息(包括<strong>域名</strong>、<strong>公司</strong>和<strong>产品名</strong>)。包信息只能由 A-Z 字母和数字0-9组成，不能有任何符号或其他特殊字符，也不能有大写字母。然后，这些详细信息将用于生成格式为“<span class="inline">com.company.myappname</span>”的 Package ID。</p>
  <p>然后需要设置<strong>生成工具</strong>以及<strong>Target</strong>、<strong>Minimum</strong>和<strong>Compile SDK </strong>版本。</p>
  <p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;There is also an option for the "<strong>Support Library</strong>" version to use. From <span data-keyref="GameMaker Name">GameMaker</span> v2.2.4 and above, this is no longer required and any values used here will be ignored. The setting is maintained for use with legacy projects that require an earlier runtime than 2.2.4.</p>
  <p>当<span data-keyref="GameMaker Name"> GameMaker </span>为 Android 目标构建游戏时，使用构建工具(如果需要，还有支持库) ，并且应该根据您使用 Android Studio 安装的工具将其设置为适当的值。</p>
  <ul class="colour">
    <li><strong>Target SDK</strong> 表示您已经在(直到并包括)您在这里指定的版本上测试了您的应用程序。这只是为了让 Android 操作系统知道它应该如何根据操作系统的特性来处理你的应用程序。出于各种实际目的，大多数应用程序都希望将 Target SDK 设置为 API 的最新发布版本(如 Compile SDK 设置所使用的那样)。这将确保您的应用程序在最新的 Android 设备上看起来尽可能好。请注意，从2019年11月开始，谷歌已经将 API 级别28作为必要的目标。</li>
    <li><strong>Minimum SDK </strong>版本是将运行项目的最小 API 级别。从2019年11月开始，谷歌已经将 API 级别定为16级，但是如果你添加了扩展，那么他们可能需要更高的最低 API 级别。</li>
    <li><strong>CompileSDK </strong>版本是项目所编译的 API 的版本。这意味着您可以使用该版本 API 中包含的 Android API 特性。如果您尝试使用 API 16特性-例如-但是设置 Compile SDK15，那么您将得到一个编译错误。但是，如果您将 Compile SDK 设置为28，那么您仍然可以在 API 26设备上运行该应用程序(以及所有其他以前的版本)。</li>
  </ul>
  <p>您可以从一个预定义的目标设置中进行选择，方法是单击<strong>预填充 SDK </strong>值到选定的 API 级别按钮，该按钮将打开一个可供选择的不同 API 列表。选择其中任何一个都将使用适当的值填充所有 SDK 文件，然后您可以根据需要使用或编辑这些值。</p>
  <p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span>要正确编译项目，您必须已经在 Android SDK 管理器中或通过 Android Studio 安装了适当的 API。</p>
  <p><img alt="Android General Options Part 2" class="center" src="../../assets/Images/Settings/Android_General2_Options.png"></p>
  <p><strong>常规</strong>部分的第二部分介绍了要构建的 CPU 体系结构，有以下选项可供选择(您可以选择所有 CPU 体系结构，或者只选择您需要的 CPU 体系结构，但是请注意，每个 CPU 体系结构都会添加到编译后的 apk 的最终大小) :</p>
  <ul class="Disc">
    <li>为 Armv7 编译</li>
    <li>为 Arm64 构建(默认检查)</li>
    <li>为 x86_64 构建</li>
  </ul>
  <p>设置之后，您可以选择不同的方向，您的游戏可以运行在最佳的用户体验。现有的选择包括:</p>
  <ul class="Disc">
    <li>竖向</li>
    <li>竖向翻转</li>
    <li>横向</li>
    <li>横向翻转</li>
  </ul>
  <p>最后，你有以下各种选择:</p>
  <ul class="colour">
    <li><strong>Enable Bluetooth/iCade support</strong>: This will add support for Bluetooth or iCade gamepads to your game project. This is on by default.</li>
    <li><strong>运行 Lint 代码分析</strong> : 当这个选项被标记时，构建工具将在项目构建时运行一个 Lint 代码分析，进行更深入的错误检查，并在项目编译时在输出窗口中显示更多信息(也将创建一个 LOG 文件，在<a href="../../Introduction/The_Output_Window.htm"> Output Window </a>中编译结束时显示文件的路径)。请注意，并不是所有被 lint 分析标记为错误的东西对于您的游戏都必然是有问题的，启用这个功能可能意味着您的游戏不再编译，即使当它关闭时，它也会编译并运行良好。本质上，这仅用于调试，默认情况下该选项是关闭的。</li>
    <li><strong>安装位置</strong> : 您可以在这里设置游戏的默认安装位置。这可以设置为<strong>自动</strong> ，在这种情况下，游戏将被安装到用户在他们的设备上选择的位置，或者可以设置为<strong>首选外部</strong> ，它将总是尝试安装游戏到设备的外部存储。</li>
  </ul>
  <p>You can also set the Android&nbsp;<strong>Sleep Margin</strong> here. This option is related to reducing stuttering when running your game on specific systems. Basically, if your game is running faster than your game speed <span data-keyref="GameMaker Name">GameMaker</span> will "sleep" for the remaining time, but this sleep can be quite inaccurate and you can often end of sleeping for longer than necessary, causing your frame to take longer which causes stuttering. To get around this we can sleep for less time, then sit in a tight loop for the remainder of the time to make it more accurate - although the problem with sitting in a loop is that it causes CPU usage to increase, which in turn can cause your CPU temperatures to rise and your device to use more battery. By default, this value is set to 4, and in 99.99% of the cases you'll be fine with this, but for low end devices or for devices with a lot of background processes running this may not be an ideal solution and a value of 5 up to 10 may be required. Note though that this is very much a device specific configuration and what works on your build device may not be appropriate for another user, and as such if in doubt leave it set to 4.</p>
  <p>&nbsp;</p>
  <h2 id="adaptive_icons">自适应图标</h2>
  <p><img alt="Android Adaptive Icons Options" class="center" src="../../assets/Images/Settings/Android_AdaptiveIcons_Options.png"> Android 8.0(API 级别26)为您的游戏引入了<strong>自适应启动器图标</strong>，这些图标可以在不同的设备模型中显示各种形状。为了解决这个问题，您需要提供一些前景和背景图像，您的图标显示在不同的大小。这些图标大小如下:</p>
  <ul class="Disc">
    <li>81x81 pixels (LDPI)</li>
    <li>108x108 pixels MDPI)</li>
    <li>162x162 pixels (HDPI)</li>
    <li>216x216 pixels (XHDPI)</li>
    <li>324x324 pixels (XXHDPI)</li>
    <li>432x432 pixels (XXXHDPI)</li>
  </ul>
  <p>您可以分别提供每个前景和背景图像，也可以选择从文件生成图标。这意味着<span data-keyref="GameMaker Name"> GameMaker </span>将从基本(XXXHDPI)文件生成所需的图标图像。您需要为前景和背景各提供一个图像，然后单击标记为 Generate 的按钮，图标将为您创建。图像应该都是<span class="inline"> *.png </span>格式。</p>
  <p>理解你的自适应图标可能会在任何给定的设备上被屏蔽是很重要的，所以你也可以从<strong>预览自适应图标</strong>菜单中选择看看它们和这些屏蔽一起是什么样子:</p>
  <p><img alt="Android Adaptive Mask Preview" class="center" src="../../assets/Images/Settings/Android_AdaptiveIcons_Masks.gif">请注意，这只是一个<em>能够</em>预览的图标，设置不会影响如何图标导出和显示，因为这取决于设备和操作系统的游戏将运行。还要注意，这些图标是在使用<a href="../../IDE_Tools/Project_Image_Generator.htm">项目图像生成器</a>工具生成图像时为您创建的<strong>而不是</strong>从图片中读取的。</p>
  <p>&nbsp;</p>
  <h2 id="graphics">图形</h2>
  <p><img alt="Android Graphics Options" class="center" src="../../assets/Images/Settings/Android_Graphics_Options.png">这里您可以更改下列与游戏显示方式相关的详细信息，并提供以下选项:</p>
  <ul class="colour">
    <li><strong>像素间插值颜色</strong>：启用<a class="tooltip" title="线性插值是通过用一条直线连接两个相邻的已知值来估计一个新值。然后你可以通过检查直线上的任意一点来得到插值值。在图形学中，线性插值是指平滑像素边缘的一种基本方法。">线性插值</a>，基本上是“平滑”像素。对于清晰的像素图形，它应该处于禁用状态，但如果您有漂亮的Alpha混合和平滑的边缘图形，则最好保持启用状态。默认情况下，此选项处于启用状态。</li>
    <li><strong>屏幕颜色深度</strong> : 这可以用来将渲染的颜色深度设置为16位或24位。如果设置为24位，这将影响与一些旧设备的兼容性，并且还会增加所需的<em> ashmem </em>(这是 AmazonFire 设备上的共享内存)。</li>
    <li><strong>设备支持</strong> : 此选项将设置是仅支持具有专用 GPU 的设备，还是支持所有设备。基本上，如果您的游戏有任何高级绘制功能，如阿尔法混合，添加混合，表面等...你都应该把它限制在那些有 GPU 的设备上，否则你的游戏可能会因为图形错误或者老设备崩溃而收到负面评论和糟糕的评级。</li>
    <li><strong>缩放</strong> : 在这里你可以选择缩放画布来保持设备屏幕的高宽比——在边缘添加“填充”来适应屏幕——或者你可以选择拉伸画布来适应设备屏幕。</li>
  </ul>
  <p>Finally there is the option to set the size of the <a class="tooltip" title="纹理页面（也称为纹理图集）是以最佳方式组合在一起的图像（精灵，图块集，字体字符等）的集合，以便在您的游戏时占用最少的纹理内存运行。">texture page</a>. The default (and most compatible) size is 2048x2048, but you can choose from anywhere between 256x256 up to 8192x8192.&nbsp;There is also a button marked <strong>Preview </strong>which will generate the texture pages for this platform and then open a window so that you can see how they look. This can be very useful if you wish to see how the texture pages are structured and to prevent having texture pages larger (or smaller) than necessary. For more information on texture pages, please see <a href="../Texture_Information/Texture_Pages.htm">Texture Pages</a>.</p>
  <p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;Be aware that the larger the size of the texture page, the less compatible your game will be with different browsers and devices.</p>
  <p>&nbsp;</p>
  <h2 id="icons">图标</h2>
  <p><img alt="Android Icons Options" class="center" src="../../assets/Images/Settings/Android_Icons_Options.png">此部分允许您添加项目需要用于不同存储页和设备的各种<strong>图标</strong>图像。所有图标图像应该创建为24位指定大小的<span class="inline">*.png</span>文件。</p>
  <p>值得注意的是，<span data-keyref="GameMaker Name"> GameMaker </span>有一个<a href="../../IDE_Tools/Project_Image_Generator.htm">项目图像生成器</a>工具，可用于自动创建所有不同目标平台所需的图像。如果您使用这个工具，您应该修改所创建的图像，以确保它们是您所需要的。该工具将生成图标以及图像(见下一节)。</p>
  <p>&nbsp;</p>
  <h2 id="images">图像</h2>
  <p><img alt="Android Images Options" class="center" src="../../assets/Images/Settings/Android_Images_Options.png">这里您可以设置<strong>边框颜色</strong> ，它将用作未设置为填充全屏的启动画面的背景。您还可以为最终的游戏文件添加<strong>启动屏</strong>和<em>纵向</em>模式的<em>启动画面</em> ，这将在游戏装载到设备上时显示。此屏幕应为24位<span class="inline"> *.png </span>文件，建议大小与游戏的第一个房间(或视图)相同。如果您需要显示启动画面的特定时间，那么您也可以在这里将其从0设置为10秒(默认时间为0意味着它只会在资源加载期间显示)。您还可以通过以下选项设置启动画面的显示方式:</p>
  <ul class="colour">
    <li><strong>保持长宽比</strong> : 这将保持图像与设备屏幕的长宽比，在需要的地方在边缘添加“填充”。</li>
    <li><strong>裁剪适合</strong> : 这将使图像与设备屏幕保持1:1，并根据需要裁剪(或填充)边缘。</li>
    <li><strong>拉伸</strong> : 这将拉伸图像以填充设备屏幕(并可能使显示的图像失真)。</li>
  </ul>
  <p>最后，您可以在 Android 电视设备上为游戏设置<strong>横幅图像</strong> ，它也是一个24位<span class="inline"> *.png </span>。</p>
  <p>&nbsp;</p>
  <h2 id="packaging">打包</h2>
  <p><img alt="Android Packaging Options" class="center" src="../../assets/Images/Settings/Android_Packaging_Options.png"></p>
  <h2 id="proguard">Proguard</h2>
  <p>在这里，您可以为 ProGuard 启用“<strong> minifyEnable </strong>”和“<strong> shinkResources </strong>”来减小 APK 文件大小。</p>
  <p>“<strong>minifyEnable</strong>”从最终可执行文件中删除不必要的代码，“<strong>shinkResources</strong>”删除缩小后未被引用的任何资源，因此它取决于启用的前一个选项。</p>
  <p>请参阅<a href="https://developer.android.com/studio/build/shrink-code"> Android 开发人员</a>上的“<strong>缩小代码</strong>”和“<strong>缩小资源</strong>”部分。</p>
  <h2 id="google">谷歌 (Google)</h2>
  <p>在您的 Android 游戏中使用 Google Play 的一个特性是能够<strong>授权</strong>您的游戏。这意味着你的游戏将由谷歌控制，只有通过他们的市场下载的人才能玩游戏，从而避免非法拷贝你的产品被分发。</p>
  <p>要在游戏中激活此功能，您需要将您的<strong>公钥</strong>复制到标签为<strong>谷歌许可公钥</strong>的框中。可以通过进入您的<a href="https://play.google.com/apps/publish"> Google Play Developers 页</a> ，然后选择您希望编辑的游戏来找到此许可证。在游戏配置文件页面上，向下滚动到标题为“<em>服务和 API </em>”的部分，您应该会找到启用此功能所需的公钥。</p>
  <p>一旦激活，如果任何人谁没有授权拥有你的游戏试图玩它，他们将显示一个弹出消息框，将告诉他们，许可证无法在他们的设备上找到，然后给他们选择重试和测试，或退出游戏。</p>
  <p>授权的另一个特性是您的游戏可以使用<strong> APK 扩展</strong>。这是一种绕过 GooglePlay (只有 GooglePlay)规定的50MB 最大应用程序大小的方法。它将创建您的游戏分为两部分: 一个小<span class="inline"> *.apk </span>文件和较大的<span class="inline"> *.zip </span>文件，该文件将保存所有的游戏资源，这两个资源都将上载到商店。当用户第一次运行你的游戏，压缩包将被下载和解压缩。您可以在这里找到此选项<a href="https://help.yoyogames.com/hc/en-us/articles/115002418632-Android-Using-APK-Expansions-With-Google-Play">的详细信息</a>。</p>
  <p>当使用<span class="inline">*.aab</span>导出选项时，你还可以使用 Google Dynamic Asset Deliver 来构建 1GB 大小的应用程序包。这将所有的游戏资源打包为“安装时”资源，并与应用程序本身一起安装。您可以在这里找到关于此特性的进一步<a href="https://developer.android.com/guide/playcore/asset-delivery" title="Asset Delivery">详细信息</a>。</p>
  <h2 id="android_tv">Android TV</h2>
  <p>最后，您可以选择将最终的应用程序包准备为一个<strong> Android TV 游戏</strong>(只有在您的游戏符合<a href="https://developer.android.com/training/tv/games/"> Android TV 指南</a>的情况下才应该勾选此选项)。</p>
  <h2 id="permissions">权限</h2>
  <p><img alt="Android Permission Options" class="center" src="../../assets/Images/Settings/Android_Permissions_Options.png">在此选项卡中，您可以更改游戏在Android Manifest中可能请求的一些权限。<span data-keyref="GameMaker Name"> GameMaker </span>会根据游戏使用的功能自动分配权限，但是你可能会发现你的游戏需要一个未正确分配的权限(例如，当你使用自定义扩展时) ，在这种情况下，勾选必要的权限框。</p>
  <p>下面的列表概述了可用的权限:</p>
  <ul class="colour">
    <li><span class="inline">WRITE_EXTERNAL_STORAGE</span> : 将允许游戏写入外部存储。</li>
    <li><span class="inline">READ_PHONE_STATE</span> : 允许只读访问电话状态。</li>
    <li><span class="inline">ACCESS_NETWORK_STATE</span> : 允许游戏访问有关网络的信息。</li>
    <li><span class="inline">INTERNET</span>: 允许您的游戏打开网络套接字</li>
    <li><span class="inline">BLUETOOTH</span> : 将允许游戏连接到配对的蓝牙设备。</li>
    <li><span class="inline">RECORD_AUDIO</span>: 将允许您的游戏记录来自麦克风的音频输入。</li>
  </ul>
  <p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;If you are not sure that you need these, you should probably just leave them un-checked by default and let <span data-keyref="GameMaker Name">GameMaker</span> deal with the permissions for your game.</p>
  <p>Android Permission 部分还有一个区域，您可以将权限注入到<strong> AndroidManif.xml </strong>中的<span class="inline"> Android Application Tags </span>中。你可以在这里找到 Android 文档中可用标签的完整列表:</p>
  <ul class="colour">
    <li><a href="https://developer.android.com/guide/topics/manifest/application-element">Android Developer: Application Tags</a></li>
  </ul>
  <p>值得注意的是，对于目标 API 28及以上，您将不再被允许使用任何使用“<span class="inline">http</span>”-“<span class="inline">https</span>”的外部 Web 调用-除非您添加以下标记:</p>
  <p class="code">android:usesCleartextTraffic="true"</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Game_Options.htm">游戏设置</a></div>
        <div style="float:right">Next: <a href="iOS.htm">iOS</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Android Game Options
-->
  <!-- TAGS
android_options
-->

</body></html>