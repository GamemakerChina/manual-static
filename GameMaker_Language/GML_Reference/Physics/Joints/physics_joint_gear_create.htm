<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.13.4.0_6";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>physics_joint_gear_create</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Reference page for physics_joint_gear_create">
  <meta name="rh-index-keywords" content="physics_joint_gear_create">
  <meta name="search-keywords" content="physics_joint_gear_create">
  <meta name="is_pure" content="true">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Physics/Joints/physics_joint_rope_create.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Physics/Joints/physics_joint_pulley_create.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="physics_joint_gear_create">
        <span>physics_joint_gear_create</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">physics_joint_gear_create</span></h1>
  <p>如果要创建复杂的机械装置，可能需要使用齿轮。原则上，您可以通过使用复合实例在 <span data-keyref="GameMaker Name">GameMaker</span> 中创建齿轮来模拟齿轮齿，但这不是很有效，编写起来可能会很乏味！谢天谢地，有一个更简单的方法，那就是使用<i>齿轮关节</i>。要创建一个，您需要先定义您的固定装置并创建将组成您的齿轮的两个基本关节 - 这些<b>必须</b>由一个<a href="physics_joint_revolute_create.htm">旋转关节</a>和一个<a href="physics_joint_prismatic_create.htm">棱柱关节</a>或另一个<i>旋转关节</i>组成。下图显示了通常在游戏中如何创建齿轮：</p>
  <p><img alt="Gear joint illustration" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Physics/gear_joint_image.png"> 发生了什么事？一旦将两个关节添加到齿轮中，与一个关节的相互作用将对另一个关节产生影响，因此在上面的示例图像中，如果在 inst2 中旋转，则 inst3 将上下移动，或者如果在 inst3 中上下移动，则 inst2 将旋转。也可以更改齿轮比率，这意味着需要多移动一个实例 (或少移动一个实例) 才能获得所需的效果。底部示例中的代码显示了如何创建类似上图的内容。</p>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span> 如果您需要删除齿轮联接中涉及的两个实例中的任何一个 (或仅删除它们的联接)，则<b>必须</b>使用 <span style="font-size:1px;"><a href="physics_joint_delete.htm"><span class="inline">physics_joint_delete()</span></a></span> 删除齿轮联接，否则将出现错误！</p>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code"><span data-field="title" data-format="default">physics_joint_gear_create</span>(inst1, inst2, joint_1, joint_2, ratio)</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>inst1</td>
        <td><span data-keyref="Type_ID_Instance"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span></td>
        <td>与关节连接的第一个实例</td>
      </tr>
      <tr>
        <td>inst2</td>
        <td><span data-keyref="Type_ID_Instance"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm">Object Instance</a></span></td>
        <td>与关节连接的第二个实例</td>
      </tr>
      <tr>
        <td>joint_1</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>先前定义的旋转关节类型</td>
      </tr>
      <tr>
        <td>joint_2</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>先前定义的旋转<i>或</i>棱柱关节</td>
      </tr>
      <tr>
        <td>ratio</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>设置两个关节之间的速度比率</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Physics/Joints/Joints.htm">Physics Joint ID</a></span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">var t_fix, g_fix, inst1, inst2, inst3, r_joint, p_joint;<br>
    g_fix = physics_fixture_create();<br>
    physics_fixture_set_box_shape(g_fix, 40, 10);<br>
    t_fix = physics_fixture_create();<br>
    physics_fixture_set_circle_shape(t_fix, 10);<br>
    physics_fixture_set_density(t_fix, 0.5);<br>
    inst1 = instance_create_layer(60, room_height - 30, "Background", obj_Ground);<br>
    inst2 = instance_create_layer(40, room_height - 300, "Instances", obj_Cog);<br>
    inst3 = instance_create_layer(150, room_height - 300, "Instances", obj_Barrel);<br>
    physics_fixture_bind(g_fix, inst1);<br>
    physics_fixture_bind(t_fix, inst2);<br>
    physics_fixture_bind(t_fix, inst3);<br>
    r_joint = physics_joint_revolute_create(inst1, inst2, 40, room_height - 300, -80, 80, 1, 10, 0.5, 1, 0);<br>
    p_joint = physics_joint_prismatic_create(inst1, inst3, 150, room_height - 300, 0, 1, -10, 10, true, 0, 0, 0, 0);<br>
    <span data-field="title" data-format="default">physics_joint_gear_create</span>(inst2, inst3, r_joint, p_joint, 0.5);
  </p>
  <p>上述代码创建和定义两个装置，然后创建三个实例，"一个 obj_Ground" 和另外两个 "obj_Cog" 和 "obj_Barrel"。然后将装置绑定到这些实例，并创建两个关节。地面和齿轮之间的旋转关节，以及地面和圆筒之间的棱柱形关节。最后，使用先前定义的旋转关节和棱柱关节在齿轮和圆柱体实例之间创建齿轮关节。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Joints.htm">关节</a></div>
        <div style="float:right">Next:&nbsp;<a href="physics_joint_rope_create.htm">physics_joint_rope_create</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_gear_create
-->
  <!-- TAGS
physics_joint_gear_create
-->

</body></html>