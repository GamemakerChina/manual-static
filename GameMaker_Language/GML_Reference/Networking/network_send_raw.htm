<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.15.0_14"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>network_send_raw</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../../assets/css/default.css" type="text/css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Reference page for network_send_raw"><meta name="rh-index-keywords" content="network_send_raw,network_send_binary,network_send_text"><meta name="search-keywords" content="network_send_raw,text WebSockets,network_send_binary,network_send_text"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Networking/network_send_udp.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Networking/network_send_packet.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="network_send_raw"><span>network_send_raw</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">network_send_raw</span></h1><p>该函数通过网络发送 " 原始 " 数据包。</p><p>该函数采用 <span data-keyref="Type_ID_Network_Socket"><a target="_blank" href="network_create_socket.htm">网络套接字 ID</a></span> 进行连接，然后您必须提供包含要发送的数据的 <span data-keyref="Type_ID_Buffer"><a target="_blank" href="../Buffers/buffer_create.htm">缓冲区</a></span> ( 有关缓冲区的更多信息，请参阅 <a href="../Buffers/Buffers.htm">参考- 缓冲区</a> )，最后是数据包的大小 (以字节为单位)。</p><p>发送的数据不会被 <span data-keyref="GameMaker Name">GameMaker</span> 以任何方式格式化，接收设备将以流的形式获取数据，这意味着您必须自己处理它。请参阅： <a href="Networking.htm#h">数据包分离</a></p><p>该函数将返回已发送数据的字节数，如果发送失败，则返回小于 0 的数字。</p><p class="note"><span data-conref="../../../assets/snippets/Tag_warning.hts"><span class="warning">警告</span></span> <span data-conref="../../../assets/snippets/Networking_dont_mix_raw_reg.hts">您不得在游戏中混合使用常规函数和原始函数，因为这样做会导致问题。这意味着，对于使用 <span class="inline3_func"><a href="network_connect.htm" title="Cross-reference [network_connect.htm]" data-tcx-title="Cross-reference [network_connect.htm]">network_connect</a></span> 建立的连接，您必须使用 <span class="inline3_func"><a href="network_send_packet.htm" title="Cross-reference [network_send_packet.htm]" data-tcx-title="Cross-reference [network_send_packet.htm]">network_send_packet</a></span>，而对于 <span class="inline3_func"><a href="network_connect_raw.htm" title="Cross-reference [network_connect_raw.htm]" data-tcx-title="Cross-reference [network_connect_raw.htm]">network_connect_raw</a></span>，则必须使用 <span class="inline3_func"><a href="network_send_raw.htm" title="Cross-reference [network_send_raw.htm]" data-tcx-title="Cross-reference [network_send_raw.htm]">network_send_raw</a></span>.</span></p><div data-conref="../../../assets/snippets/Note_Networking_TCP_like.hts"><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span> 此函数使用类似 TCP 的套接字 (即 <span class="inline2">network_socket_tcp</span>)。它也可能适用于其他套接字类型，但这不能保证。</p></div><h2>选项参数</h2><p>最后一个参数是可选的，仅与WebSockets一起使用。它允许您选择发送二进制数据还是文本数据。可以在此参数中指定以下任一常量：</p><table><colgroup><col style="width:519px"><col style="width:743px"></colgroup><tbody><tr><th colspan="2" style=""><span data-keyref="Type_Constant_Network_Send_Type"><a target="_blank" href="network_send_raw.htm">网络发送类型常量</a></span></th></tr><tr><th style="">常量</th><th style="">描述</th></tr><tr><td style=""><span class="inline">network_send_binary</span></td><td style="">Send a binary message</td></tr><tr><td style=""><span class="inline">network_send_text</span></td><td style="">Send a text message</td></tr></tbody></table><p>某些平台的API在使用WebSockets(例如Twitch)时仅接受文本消息，因此<span class="inline2">network_send_text</span>常量可用于此类情况。如果未指定此参数，则默认情况下会发送二进制数据。</p><p>&nbsp;</p><h4>语法:</h4><p class="code"><span data-field="title" data-format="default">network_send_raw</span>(socket, bufferid, size, [options]);</p><table><tbody><tr><th>参数</th><th>类型</th><th>描述</th></tr><tr><td>socket</td><td><span data-keyref="Type_ID_Network_Socket"><a target="_blank" href="network_create_socket.htm">Network Socket ID</a></span></td><td>要使用的套接字的ID。</td></tr><tr><td>bufferid</td><td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../Buffers/buffer_create.htm">Buffer</a></span></td><td>从中获取数据的缓冲区。</td></tr><tr><td>size</td><td><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></td><td>数据的大小(以字节表示)。</td></tr><tr><td>options</td><td><span data-keyref="Type_Constant_Network_Send_Type"><a target="_blank" href="network_send_raw.htm">网络发送类型常量</a></span></td><td><span data-conref="../../../assets/snippets/Tag_optional.hts"><span class="optional">可选</span></span> 用于 WebSocket 在文本和二进制数据之间进行选择 ; 如果未指定，则发送二进制数据。</td></tr></tbody></table><p>&nbsp;</p><h4>返回:</h4><p class="code"><span data-keyref="Type_Real"><a target="_blank" href="../../GML_Overview/Data_Types.htm">Real</a></span></p><p>&nbsp;</p><h4>例子:</h4><p class="code">buff = buffer_load("player_save.dat");<br>network_send_raw(sock, buff, buffer_get_size(buff));</p><p>上述信息将之前保存的数据加载到内存中的缓冲区中，并将该缓冲区存储在变量 <span class="inline2">buff</span> 中。然后，使用变量 <span class="inline2">sock</span> 标识的套接字将这个完整的缓冲区作为原始数据包通过网络发送。</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="Networking.htm">网络</a></div><div style="float:right">Next: <a href="network_send_udp.htm">network_send_udp</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>