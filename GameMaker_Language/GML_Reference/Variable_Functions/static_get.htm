<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../../..",gTopicId="8.2.2.1.0_22"</script><script type="text/javascript" src="../../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>static_get</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" type="text/css" href="../../../assets/css/default.css"><script src="../../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Gurpreet S. Matharoo"><meta name="topic-comment" content="Reference page for the function static_get"><meta name="rh-index-keywords" content="static_get"><meta name="search-keywords" content="static_get"><meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt"><meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/static_set.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/is_instanceof.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="static_get"><span>static_get</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">static_get</span></h1><p>该函数返回给定函数或结构体的 <a href="../../GML_Overview/Structs/Static_Structs.htm">静态结构体</a>。</p><p>当你提供一个函数或方法时，该函数返回该函数或方法的静态结构体。</p><p>你也可以提供一个结构体。返回的内容取决于结构体：</p><ul class="colour"><li>对于使用<span class="inline2"><a href="../../GML_Overview/Language_Features/new.htm">new</a></span>关键字从构造函数创建的结构：用于创建该结构的构造函数的静态结构(如果在使用<span class="inline3_func"><a href="static_set.htm">static_set</a></span>创建后更改了该结构，则为不同的结构)。</li><li>对于静态结构：<a href="../../GML_Overview/Structs/Static_Structs.htm#h">静态链</a>中的父静态结构。当使用构造函数继承时，静态结构被链接，即如果构造函数有父构造函数，则可以获得静态结构的静态结构。</li><li>对于任何其他结构：此结构的"父"结构，它将结构链接到"根"结构。</li><li>对于"root"结构：<span class="inline2">undefined</span></li></ul><p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span>：你可以将 <span class="inline3_func"><a href="method_get_index.htm">method_get_index</a></span> 的结果传递给该函数，以获取方法的静态结构体。</p><p>请参阅：<a href="../../GML_Overview/Structs/Static_Structs.htm">静态结构</a></p><p>&nbsp;</p><h4>语法:</h4><p class="code"><span data-field="title" data-format="default">static_get</span>(struct_or_func_name);</p><table><colgroup><col><col><col></colgroup><tbody><tr><th>参数</th><th>类型</th><th>描述</th></tr><tr><td>struct_or_func_name</td><td><span data-keyref="Type_Struct"><a target="_blank" href="../../GML_Overview/Structs.htm">Struct</a></span>,&nbsp;<span data-keyref="Type_Function"><a target="_blank" href="../../GML_Overview/Script_Functions.htm">Function</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Method"><a target="_blank" href="../../GML_Overview/Method_Variables.htm">Method</a></span></td><td>要获取静态结构体的结构体、函数或方法</td></tr></tbody></table><p>&nbsp;</p><h4>返回:</h4><p class="code"><span data-keyref="Type_Struct"><a target="_blank" href="../../GML_Overview/Structs.htm">Struct</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Undefined"><a target="_blank" href="../../GML_Overview/Data_Types.htm">undefined</a></span>&nbsp;(for the root struct)</p><p>&nbsp;</p><h4>示例1：</h4><p class="code">function counter()<br>{<br>&nbsp;&nbsp; &nbsp;static count = 0;<br>&nbsp;&nbsp; &nbsp;return count ++;<br>}<br><br>repeat (10)&nbsp;counter()<br><br>// Get static struct of counter()<br>var _static_counter = static_get(counter);<br><br>// Both of these read the same variable<br>show_debug_message(counter.count); // 10<br>show_debug_message(_static_counter.count); // 10</p><p>上面的代码创建了带有静态变量的函数 <span class="inline2">counter()</span>。该函数被重复调用，因此其静态变量的值会增加。</p><p>然后返回该函数的静态结构，并将其存储在变量 (<span class="inline2">_static_counter</span>) 中。然后，它打印函数中的静态变量，方法是首先直接从函数中读取静态变量 (<span class="inline2">counter.count</span>)，然后从静态结构中读取它 (<span class="inline2">_static_counter.count</span>)。两者都打印相同的值，因为它们引用完全相同的变量。</p><p>&nbsp;</p><h4>示例 2：在静态链中向上移动</h4><p class="code">function item() constructor<br>{<br>&nbsp; &nbsp; static hello = function()<br>&nbsp; &nbsp; {<br>&nbsp; &nbsp; &nbsp; &nbsp; show_debug_message("Hello World!");<br>&nbsp; &nbsp; }<br>}<br>function potion() : item() constructor {}<br><br>my_potion = new potion();<br>var _static_potion = <span data-field="title" data-format="default">static_get</span>(my_potion);<br>var _static_parent = <span data-field="title" data-format="default">static_get</span>(_static_potion);<br>_static_parent.hello();</p><p>上面的代码首先创建两个构造函数：带有单个静态函数 <span class="inline2">hello</span> 的父构造函数 <span class="inline3_func">item</span> 和子构造函数 <span class="inline2">potion</span>。 然后，它创建一个新的 <span class="inline2">potion</span> 并将其存储在变量 <span class="inline2">my_potion</span> 中。 接下来，调用 <span class="inline3_func"><span data-field="title" data-format="default">static_get</span></span> 以获取 <span class="inline2">my_potion</span> 的静态结构。 返回的静态结构体存储在临时变量 <span class="inline2">_static_potion</span> 中，是静态链的一部分。 从此时起，对 <span class="inline3_func"><span data-field="title" data-format="default">static_get</span></span> 的所有进一步调用都将在静态链中向上移动。 再次调用 <span class="inline3_func"><span data-field="title" data-format="default">static_get</span></span>，返回 <span class="inline2">item</span> 的静态值并将其存储在另一个临时变量 <span class="inline2">_static_parent</span> 中。 最后，调用该结构体的 <span class="inline3_func">hello</span> 方法。</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div>Back:&nbsp;<a href="Variable_Functions.htm">变量函数</a></div><div>Next:&nbsp;<a href="static_set.htm">static_set</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>