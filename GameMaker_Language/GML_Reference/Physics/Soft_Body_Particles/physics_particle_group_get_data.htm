<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.13.5.0_29";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>physics_particle_group_get_data</title>
  <meta name="generator" content="Adobe RoboHelp 2020">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Reference page for physics_particle_group_get_data">
  <meta name="rh-index-keywords" content="physics_particle_group_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color">
  <meta name="search-keywords" content="physics_particle_group_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color">
  <meta name="is_pure" content="true">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_create.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_get_data_particle.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="physics_particle_group_get_data">
        <span>physics_particle_group_get_data</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_particle_group_get_data</h1>
  <p>此函数使用选中的给定标志返回有关物理模拟中一组粒子的各种信息。组索引 (其 ID) 是由函数 <a href="physics_particle_group_end.htm"><span class="inline">physics_particle_group_end()</span></a> 返回的索引，并且所使用的缓冲区必须先前使用函数 <a href="../../Buffers/buffer_create.htm"><span class="inline">buffer_create()</span></a> 创建。它应为 " 增长 " 类型，大小大约为预期返回数据的大小。标志本身使用下面给出的常量进行设置，您可以使用 <a href="../../../../Additional_Information/Bitwise_Operators.htm"> 位 <i> 或 </i></a>"|" 来创建单个标志值以获取所需信息。</p>
  <table>
    <tbody>
      <tr>
        <th>常量</th>
        <th>描述</th>
        <th>数据类型</th>
      </tr>
      <tr>
        <td><span class="inline">phy_particle_data_flag_typeflags</span></td>
        <td>The flags value for the particle.</td>
        <td>buffer_u32</td>
      </tr>
      <tr>
        <td><span class="inline">phy_particle_data_flag_position</span></td>
        <td>The x and y position of the particle.</td>
        <td>2 x buffer_f32</td>
      </tr>
      <tr>
        <td><span class="inline">phy_particle_data_flag_velocity</span></td>
        <td>The horizontal and vertical speed.</td>
        <td>2 x buffer_f32</td>
      </tr>
      <tr>
        <td><span class="inline">phy_particle_data_flag_colour</span></td>
        <td>The colour and alpha value (hexadecimal).</td>
        <td>buffer_f32</td>
      </tr>
      <tr>
        <td><span class="inline">phy_particle_data_flag_category</span></td>
        <td>The particle category (as defined when you created the group to which it belongs).</td>
        <td>buffer_u32</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">physics_particle_group_get_data(group, buffer, flags)</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>group</td>
        <td><span data-keyref="Type_ID_Phy_Particle_Group"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_group_end.htm">Physics Particle Group ID</a></span></td>
        <td>要从中获取数据的粒子组的组索引 (ID)。</td>
      </tr>
      <tr>
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">Buffer ID</a></span></td>
        <td>用于存储数据的(以前创建的)缓冲区。</td>
      </tr>
      <tr>
        <td>flags</td>
        <td><span data-keyref="Type_Constant_Phy_Particle_Data_Flag"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Physics/Soft_Body_Particles/physics_particle_get_data.htm">Physics Particle Data Flag Constant</a></span>(s)</td>
        <td>用于提取有关特定粒子类型的数据的标志。</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">var count = physics_particle_group_count(gp);<br>
    var flags = phy_particle_data_flag_position | phy_particle_data_flag_colour;<br>
    if (count &gt; 0)<br>
    {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;var buffer = buffer_create(count * 12, buffer_grow, 4);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;physics_particle_group_get_data(gp, buffer, flags);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;for (var n = 0; n &lt; count; n++;)<br>
    &nbsp; &nbsp; {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var xx = buffer_read(buffer, buffer_f32);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var yy = buffer_read(buffer, buffer_f32);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var argb = buffer_read(buffer, buffer_u32);<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var alpha = (argb &gt;&gt; 24) &amp; 255;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_sprite_ext(sprBlob, 0, xx, yy, 1, 1, 0, c_green, alpha);<br>
    &nbsp; &nbsp; }<br>
    &nbsp;&nbsp;&nbsp;&nbsp;buffer_delete(buffer);<br>
    }</p>
  <p>上述代码获取由变量 "gp" 索引的组中每个粒子的位置和速度，将缓冲数据存储在多个变量中，然后使用它在组中每个粒子的位置绘制一个子精灵。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Soft_Body_Particles.htm">柔体粒子</a></div>
        <div style="float:right">Next:&nbsp;<a href="physics_particle_create.htm">physics_particle_create</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_particle_group_get_data
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_group_get_data
-->

</body></html>