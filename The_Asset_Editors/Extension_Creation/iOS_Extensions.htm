<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../..",gTopicId="6.2.0_4"</script><script type="text/javascript" src="../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>iOS / tvOS Extensions</title><meta name="generator" content="Adobe RoboHelp 2022"><link rel="stylesheet" href="../../assets/css/default.css" type="text/css"><script src="../../assets/scripts/main_script.js" type="module"></script><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page detailing how iOS extensions work"><meta name="rh-index-keywords" content="Extensions - Creating iOS / tvOS Extensions"><meta name="search-keywords" content="iOS Extensions,iOS, tvOS Extensions, tvOS"><meta name="brsnext" value="The_Asset_Editors/Extension_Creation/HTML5_Extensions.htm"><meta name="brsprev" value="The_Asset_Editors/Extension_Creation/Android_Extensions.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="iOS / tvOS Extensions"><span>iOS / tvOS Extensions</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1>iOS / tvOS 扩展</h1><p>要为 iOS 或 tvOS 创建扩展，必须分两部分进行。第一部分是添加扩展本身以及所需的文件，第二部分是创建扩展所需的函数和宏/常量。</p><p>函数和常量是通过<strong>占位符</strong>文件来添加的，所以你要添加一个占位符，然后按照<a href="Creating_An_Extension.htm">这里</a>的解释来定义函数和宏。要添加其余的文件，你需要首先在编辑器的<em>附加功能</em>部分勾选<em>iOS</em> 和/或<strong>tvOS&nbsp;</strong>复选框，以打开相关的<strong>扩展属性</strong>窗口（下图是iOS的属性窗口，但tvOS的窗口是完全一样的）。</p><p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png"></p><p>在这里，你可以提供以下细节。</p><ul class="colour"><li class="dropspot"><strong>编译器标志/链接器标志</strong>: 一些框架和第三方SDK需要添加额外的链接器标志和编译器标志才能工作，可以在这里指定（详情请参见相关SDK或框架的随附文档）。</li><li class="dropspot"><strong>类名</strong>：你的扩展可以有多个类，每个类都有自己的函数和常量，所以你应该给它起一个能反映其用途的名字。</li><li class="dropspot"><strong>App Delegate Class Name</strong>: The name of your custom app delegate class. Setting this allows the extension to override/extend core app functionality. To use this feature you need to do the following:<ol><li>Ensure that the delegate source files have the same name as the delegate class (e.g. <span class="inline">@interface MyCustomAppDelegate</span> should be defined in " <span class="inline">MyCustomAppDelegate.h</span>")</li><li>Add the <span class="inline">${YYExtAppDelegateIncludes}</span> environment variable at the top of your app delegate header file. This will be replaced at compile-time with the relevant include files for the parent delegate class.</li><li>Use the <span class="inline">${YYExtAppDelegateBaseClass}</span> environment variable as the base class for your custom app delegate. This will be replaced at compile-time with the correct base delegate class.<br><br>To ensure your extension works with any other extensions that use custom app delegates, you should call any base class methods from overridden methods in your child class. Before calling the superclass method, you need to make sure it is implemented in the class hierarchy to avoid errors, for e.g.:</li></ol><p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br>{<br>&nbsp; &nbsp; // Check if any superclasses implement this method and call it<br>&nbsp; &nbsp; if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br>&nbsp; &nbsp; &nbsp; return [super application:application willFinishLaunchingWithOptions:launchOptions];<br>&nbsp; &nbsp; else<br>&nbsp; &nbsp; &nbsp; &nbsp; return TRUE;<br>}</p></li><li class="dropspot"><strong>系统框架</strong>：在这里，你可以添加任何iOS系统&nbsp;<a class="tooltip" title="框架是可由用户更改和/或构建的代码的基础。一个框架可能包括不同的软件库，API，编译器等等。简单来说，框架为项目的某种类型和级别的编程提供了良好的环境。例如，在GameMaker Studio 2中，您可以创建自己的框架项目（通过本地资源包），其中包含用于常规控件，统计信息管理，联网或项目中常用的其他内容的脚本和对象，然后将其导入新项目一开始就为您提供了基本的基础，而不必每次都对这些系统进行重新编程。">框架</a><span class="glossextra"></span>到你的扩展中。通过点击<img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18">&nbsp;按钮，可以添加一个占位符框架，然后你可以通过双击<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png">&nbsp;对其进行编辑。你可以在<a href="https://developer.apple.com/documentation/">这里</a>找到更多关于可用的系统框架。要删除一个系统框架，只需选择它，然后点击<img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png">&nbsp;按钮。<br><br><img class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS_Weak_Reference.png">你可以启用某个框架的复选框，将其标记为"<strong>弱参考</strong>"。这将它添加到Xcode的"<strong>Build Phases -&gt; Link Binary with Libraries</strong>"部分，作为一个"<strong>Optional</strong>"框架，而不是一个"<strong>Required</strong>"框架（这是默认行为）。</li><li class="dropspot"><strong>第三方框架+捆绑包</strong>：这一部分是用来添加第三方和SDK捆绑包的。与系统框架一样，你点击<img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18">&nbsp;按钮来添加它们，然后双击<img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png">来编辑，选择它们然后点击<img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png">&nbsp;将删除它们（关于框架名称的信息，请参见你选择的SDK附带的文档）<br><br>在这里你可以选择<strong>不嵌入</strong>框架，<strong>嵌入&amp;签署</strong>它，或者<strong>嵌入它而不签署</strong>：<br><img class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS_Embed_Framework.png">这反映了Xcode中"<strong>框架、库和嵌入内容</strong>"下添加框架的相同选项</li><li class="dropspot"><strong>输入Mac上的框架路径</strong>：如果你想添加一个框架的扩展，其文件存在于用于构建你的项目的Mac上，你可以在这个字段中输入该框架的路径（在构建机器上），然后点击<img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18">&nbsp;按钮来添加它。<br><br>该路径需要指向一个<span class="inline">.framework</span>文件，该文件将被压缩为<span class="inline">.zip</span>，并放置在你的扩展目录下的<span class="inline">iOSSourceFromMac</span>文件夹中；你可以在任何时候通过右击<img alt="RMB Icon" class="icon" src="../../assets/Images/Icons/Icon_RMB.png">&nbsp;扩展，选择<em>在资源管理器中打开</em>，轻松打开该文件。</li><li class="dropspot"><strong>添加来源</strong>：你可以用它来添加扩展工作所需的源文件。添加的文件将被存储在你的扩展目录下的<span class="inline">iOSSource</span>&nbsp;文件夹中。</li><li class="dropspot"><b>代码注入</b>：在这里你可以添加任何代码，以便在你的游戏被构建为测试或最终发布时被注入（添加）到你的iOS应用程序中。在向商店提交任何游戏之前，请确保仔细修改这个（和你的权限），因为不正确的设置将导致你的游戏提交失败。</li></ul><h2>代码注入</h2><p>代码注入可用于iOS/tvOS扩展，方法与Android扩展页面上的描述相同：见<a href="Android_Extensions.htm#h">代码注入</a>。</p><p>以下标签可用于iOS和tvOS平台。</p><p class="code">YYIosPlist<br>YYIosEntitlements<br>YYIosCocoaPods<br>YYIosCocoaPodsDependencies<br>YYIosBuildRules<br>YYIosBuildSettingsInjection<br>YYIosScriptPhase<br>YYIosCFBundleURLSchemesArray<br>YYIosLSApplicationQueriesSchemesArray<br>YYIosPrivacyManifest<br><br>YYTvosPlist<br>YYTvosEntitlements<br>YYTvosCocoaPods<br>YYTvosCocoaPodsDependencies<br>YYTvosBuildRules<br>YYTvosBuildSettingsInjection<br>YYTvosScriptPhase<br>YYTvosCFBundleURLSchemesArray<br>YYTvosLSApplicationQueriesSchemesArray<br>YYTvosPrivacyManifest</p><p>代码被注入的运行时位置将取决于标签的类型:</p><table><colgroup><col style="width:174px"><col style="width:760px"></colgroup><tbody><tr><th style="">标签类型</th><th style="">注入路径</th></tr><tr><td style=""><b>Entitlements</b></td><td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\<br><span>${YYXCodeProjName}.entitlements</span></td></tr><tr><td style=""><b>info.plist</b></td><td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\<br>Supporting Files\<span>${YYXCodeProjName}-Info.plist</span></td></tr><tr><td style=""><strong>infoPlist.strings</strong></td><td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\<br>en.lproj\InfoPlist.strings</td></tr><tr><td style=""><strong>project.pbxproj</strong></td><td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}.xcodeproj\<br>project.pbxproj</td></tr><tr><td style=""><strong>xcscheme</strong></td><td style="">{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}.xcodeproj\<br>xcshareddata\xcschemes\${YYXCodeProjName}.xcscheme</td></tr><tr><td style=""><strong>PrivacyManifest</strong></td><td style=""><span>{RUNTIME}\ios\TemplateProject\${YYXCodeProjName}\Supporting Files\PrivacyInfo.xcprivacy</span></td></tr></tbody></table><p class="note"><strong></strong><span class="note">注意</span> 这些路径仅适用于 VM。&nbsp;对于 YYC，注入的代码将进入 <span class="inline">{RUNTIME}\yyc</span> 目录，其中的路径可能与 VM 的路径不同。</p><p>You can also inject tags conditionally. See:&nbsp;<a href="Android_Extensions.htm#h1">Conditional Injection</a></p><h2>File Injection</h2><p>Within the text files added to your extension (see: <a href="Creating_An_Extension.htm#h3">Adding Files</a>), you can inject code from the Code Injection window by mentioning a tag inside <span class="inline2">${ }</span>. For example, say you have a file with the following contents:</p><p class="code">&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br>&lt;dict&gt;<br><br>&nbsp;&nbsp; &nbsp;${YYIosMyInjectionTag}<br><br>&lt;/dict&gt;</p><p class="note"><span data-conref="../../assets/snippets/Tag_important.hts"><span class="important">重要</span></span>&nbsp;You can create your own tags for this use. Such custom tags must start with <span class="inline2">YYIos</span> or <span class="inline2">YYTvos</span> (depending on the platform).</p><p>The <span class="inline2">${YYIosMyInjectionTag}</span> part here will be replaced with the contents of the <span class="inline2">&lt;YYIosMyInjectionTag&gt; &lt;/YYIosMyInjectionTag&gt;</span> group from the extension's Code Injection window.</p><h3>Custom Files</h3><p>You can create a folder called "iOSProjectFiles" in the folder of your extension (alongside its <span class="inline2">.yy</span> file). Any files placed in this folder will be moved to the root of the generated Xcode project at compile time, and can also take injection tags as described above.</p><h2>其他资料</h2><p>如果你的扩展添加了任何系统框架或第三方框架，这些框架现在将被列在<strong>扩展属性</strong>窗口中，每个框架旁边都有一个复选框。如果你选中该复选框，你就启用了弱连接，如果你需要用你自己的值 "覆盖 "内含库中的任何符号，这很有用，但应该注意，这样做会减慢连接速度。</p><p>关于你为iOS创建原生扩展的信息，请参见&nbsp;<a href="Extended_Examples.htm">示例代码</a>，关于在扩展中使用CocoaPods的信息，请参见以下指南。</p><ul class="colour"><li><a href="https://help.yoyogames.com/hc/en-us/articles/360008958858">iOS 和 tvOS: 使用 Cocoa Pods</a></li></ul><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back: <a href="../Extensions.htm">The Extension Editor</a></div><div style="float:right">Next:&nbsp;<a href="HTML5_Extensions.htm">HTML5 代码注入</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>