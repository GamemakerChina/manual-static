<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.3.8.0_5";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>shader_set_uniform_f</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Page outlining the function shader_set_uniform_f">
  <meta name="rh-index-keywords" content="shader_set_uniform_f">
  <meta name="search-keywords" content="shader_set_uniform_f">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Shaders/shader_set_uniform_f_array.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Shaders/shader_set.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="shader_set_uniform_f">
        <span>shader_set_uniform_f</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>shader_set_uniform_f</h1>
  <p>使用此函数，可以设置着色器常量的值。您必须之前使用函数<a href="shader_get_uniform.htm"><span class="inline">shader_get_uniform()</span></a>获得常量的"句柄"，并且您必须知道将正确数目的浮点值传递给它的常量类型，即：如果您有一个<span class="inline">vec2</span>，则需要将两个值传递给函数。</p>
  <p>上述规则的例外情况是处理32位颜色值时。可以将多达八个 32 位颜色值传递到着色器中，它们将自动转换为 0-1 的 vec4 值。但是，为此，<i>必须使用</i>着色器常量名称<span class="inline">in_Colour</span>表示单一颜色，或<span class="inline">in_Colour0</span>、<span class="inline">in_Colour1</span>等... 最多<span class="inline">in_Colour7</span>用于多个输入值。下面的示例显示了在着色器本身中的外观：</p>
  <p class="code">&nbsp;&nbsp;&nbsp;&nbsp;//Single colour<br>
    &nbsp;&nbsp;&nbsp;&nbsp;attribute vec2 in_Position;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;attribute vec4 in_Colour;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;attribute vec2 in_TextureCoord;<br>
    <br>
    &nbsp;&nbsp;&nbsp;&nbsp;//Multiple colours<br>
    &nbsp;&nbsp;&nbsp;&nbsp;attribute vec2 in_Position;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;attribute vec4 in_Colour0;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;attribute vec4 in_Colour1;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;attribute vec2 in_TextureCoord;
  </p>
  <p>另请注意，如果您想使用 4 字节颜色格式进行压缩法线等，那么您还必须使用与上面所示相同的 "in_Colour" 格式。<b></b></p>
  <div data-conref="../../../../assets/snippets/Note_Set_Uniforms_After_Shader_Set.hts">
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"><span class="note"> 注意</span></span> 必须在调用函数 <span class="inline2"><a href="shader_set.htm">shader_set</a></span><em> 之后 </em> 和调用 <span class="inline2"><a href="shader_reset.htm">shader_reset</a></span><em> 之前 </em> 设置所有 uniforms 。</p>

</div>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">shader_set_uniform_f(handle, value1 [, value2, value3, value4]);</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>handle</td>
        <td><span data-keyref="Type_Handle_Shader_Uniform"><a target="_blank" href="shader_get_uniform.htm">Shader Uniform Handle</a></span></td>
        <td>要设置的着色器常量的句柄。</td>
      </tr>
      <tr>
        <td>value1 ... value4</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
        <td>要将着色器常量设置为的浮点值。</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">shader_set(shader_Glass);<br>
    shader_params = shader_get_uniform(shader_Glass, "u_vParams");<br>
    shader_set_uniform_f(shader_params, 0.1, 0.8, 0.25);<br>
    draw_self();<br>
    shader_reset();</p>
  <p>上面的代码将获得着色器常量"u_vParams"(a<span class="inline">vec3</span>)的句柄，然后将该常量设置为给定值。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Shaders.htm">着色器</a></div>
        <div style="float:right">Next: <a href="shader_set_uniform_f_array.htm">shader_set_uniform_f_array</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
shader_set_uniform_f
-->
  <!-- TAGS
shader_set_uniform_f
-->

</body></html>