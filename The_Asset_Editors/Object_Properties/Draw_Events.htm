<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><script type="text/javascript" language="JavaScript">function reDo(){innerWidth==origWidth&&innerHeight==origHeight||location.reload()}4==parseInt(navigator.appVersion)&&"Netscape"==navigator.appName&&(origWidth=innerWidth,origHeight=innerHeight,onresize=reDo),onerror=null</script><style type="text/css">p.WebHelpNavBar{text-align:right}</style><script type="text/javascript">gCommonRootRelPath=gRootRelPath="../..",gTopicId="6.3.1.1_1"</script><script type="text/javascript" src="../../template/scripts/rh.min.js"></script><script type="text/javascript" src="../../template/scripts/common.min.js"></script><script type="text/javascript" src="../../template/scripts/topic.min.js"></script><script type="text/javascript" src="../../template/scripts/topicwidgets.min.js"></script><script type="text/javascript" src="../../whxdata/projectsettings.js"></script><link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css"><link rel="stylesheet" type="text/css" href="../../template/Charcoal_Grey/topicheader.css"><meta name="topic-status" content="Draft"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>Draw Events</title><meta name="generator" content="Adobe RoboHelp 2022"><meta name="rh-authors" content="Mark Alexander"><meta name="topic-comment" content="Page detailing the draw event."><meta name="rh-index-keywords" content="Objects - Draw Events"><meta name="search-keywords" content="draw event,draw begin,draw end,pre-draw,post draw,draw GUI,draw order"><link rel="stylesheet" type="text/css" href="../../assets/css/default.css"><script src="../../assets/scripts/main_script.js" type="module"></script><meta name="brsnext" value="The_Asset_Editors/Object_Properties/Async_Events.htm"><meta name="brsprev" value="The_Asset_Editors/Object_Properties/Wallpaper_Config_Event.htm"></head><body><div class="topic-header rh-hide" id="rh-topic-header"><div class="logo"></div><div class="nav"><div class="title" title="Draw Events"><span>Draw Events</span></div><div class="gotohome" title="Click here to see this page in full context"><a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a></div></div></div><div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div><h1><span data-field="title" data-format="default">绘制事件</span></h1><p><img alt="The Draw Event" class="center" src="../../assets/Images/Asset_Editors/Editor_Objects_Draw.png">绘制事件类别包含所有事件，这些事件控制您运行游戏时在屏幕上看到的内容。它分为各种单独的事件，以更好地处理游戏的不同绘制要求。下图说明了事件的执行顺序：</p><p><img alt="Object Editor Draw Diagram" class="center" src="../../assets/Images/Asset_Editors/Editor_Events_DrawOrder.png">普通的绘制事件瀑布分为三个子类型：<strong>绘制开始</strong>、标准<strong>绘制</strong>和<strong>绘制结束</strong>事件。一般来说，您只需要使用标准绘制事件，并且您应该注意，房间中的所有实例都会在游戏的每一步触发此事件，因此只要实例具有 <span class="inline2"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/visible.htm">visible</a></span> flag设置为 <span class="inline2">true</span>。重要的是要理解，即使你在对象属性中没有为这个子事件定义任何东西(即：没有代码也没有动作)，<em>如果对象有一个指定的精灵，它仍然会有一个Draw事件被触发</em>。这是因为<span data-keyref="GameMaker Name">GameMaker</span>有两种方法在Draw事件中绘制东西：</p><ul class="colour"><li><strong id="default_draw">默认绘制</strong>，即当您在对象属性中定义精灵，并且在正常的Draw事件中不放置任何动作或代码时。在这种情况下，<span data-keyref="GameMaker Name">GameMaker</span>将自动绘制指定的精灵，或者如果您不指定精灵，则不绘制任何东西。请注意，您在其他事件中所做的任何更改，例如，<span class="inline2"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Instance_Variables/image_xscale.htm">image_xscale</a></span>，<span class="inline2"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Instance_Variables/image_yscale.htm">image_yscale</a></span>，<span class="inline2"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Instance_Variables/sprite_index.htm">sprite_index</a></span>， <span class="inline2"><a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Instance_Variables/image_blend.htm">image_blend</a></span>等也将被反映，只要Draw事件为空。</li><li><strong>自定义绘制</strong>，当您在Draw事件中放置代码或操作时。这告诉<span data-keyref="GameMaker Name">GameMaker</span>"<em>我想控制您为此对象的实例绘制的内容</em>"，它完全覆盖默认绘制。这意味着，例如，您可以为对象分配精灵，然后将Draw事件设置为绘制文本，文本将在屏幕上绘制，但精灵将<em>不会</em>被绘制，因为你没有告诉<span data-keyref="GameMaker Name">GameMaker</span>将其沿着绘制在文本中。</li></ul><p>其余的绘制事件将在下面列出的部分中进行说明：</p><p>&nbsp;</p><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#"><span data-open-text="true" data-skip-index="true">绘制开始和绘制结束</span> <span data-close-text="true">绘制开始和绘制结束</span></a></p><div class="droptext" data-targetname="drop-down"><p class="dropspot">除了主绘制事件之外，还有<strong>绘制开始</strong>和<strong>绘制结束</strong>事件。它们的作用与标准绘制事件完全相同(即：它们将在游戏的每一步和所有视口中绘制您放入其中的任何内容)，但是如果它们没有被显式地添加到对象，则它们不会"默认绘制"任何内容，并且它们总是在标准的Draw事件之前/之后运行。所以，当游戏运行时，你将<em>总是</em>有所有实例的Draw开始事件，然后是所有实例的Draw事件，最后是所有实例的Draw End事件。</p><p class="dropspot">通过这种方式，您可以在一个实例的绘制开始步骤中绘制内容或设置绘制属性，并确保具有标准绘制事件或绘制结束事件的所有实例都将使用这些属性或绘制第一个实例已绘制的内容。基本上，这是一种确保在特定时间绘制特定内容的可靠方法，就像<strong>开始步骤</strong>和<strong>结束步骤</strong>事件一样。</p><p class="dropspot">在 <span data-keyref="GameMaker Name">GameMaker</span> 中绘制东西时需要注意一些事情，无论是您正在绘制的精灵、着色器还是 3D 缓冲区：</p><ul class="colour"><li class="dropspot">Draw事件是一个非常密集的事件，因为它是占用最多时间和资源的事件之一.为此，在Draw事件中执行除绘图之外的任何操作都不是一个好主意。因此，将您的大型代码或复杂操作保存为Step事件或Alarms或任何其他适合的事件，但将Draw事件保留为绘图事件，因为这是它最擅长的。</li><li class="dropspot">如果您的对象已将visible参数设置为<em>off</em>(以便不绘制对象的实例)，则<strong>所有Draw事件都将被跳过</strong>(<strong>Resize</strong>事件除外)。这意味着使实例不可见将停止放置在任何这些事件中的所有代码的运行，因此，如果Draw事件不可见，请不要将基本代码放入其中。</li><li class="dropspot">您绘制的内容与您选择的碰撞引擎(传统或物理)无关，因为碰撞引擎由对象属性和对象给定的精灵(或掩码)定义。</li></ul><p class="dropspot">&nbsp;</p></div><p id="p"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#"><span data-open-text="true" data-skip-index="true">绘制GUI</span><span data-close-text="true">绘制GUI</span></a></p><div class="droptext" data-targetname="drop-down1"><p class="dropspot">绘制 GUI 事件类型属于绘制事件类别，专为绘制不受视图相机比例或旋转影响的 <a class="tooltip" title="“图形用户界面”（Graphical User Interface）的缩写，它是一个包含图形元素（例如窗口，图标和按钮）的用户界面。在GameMaker中，您有一组特定的对象事件（绘制GUI事件），可以将其吸引到专门为得分，生命，存货等事物设计的这一层。">GUI</a> 元素而设计。这意味着您可以让一个实例为您的 <a class="tooltip" title="在游戏中，HUD代表抬头显示器。这是一种将信息作为游戏用户界面的一部分可视地传递给玩家的方法，因此，诸如健康栏，状态图标，得分等之类的内容都构成了HUD的一部分，而通常HUD元素并不需要用户交互。">HUD</a> 或用户交互界面绘制所有元素，而不必将元素的所有位置基于房间内的实例位置或当前相机视图的位置。</p><p class="dropspot">在这些事件中绘图时，请务必了解，即使相机视图处于活动状态，绘图坐标也不会更改，并且(0，0)<em>始终</em>位于应用程序表面或显示屏的左手上角(请参阅本节底部的注释)，默认宽度和高度为1：在不同层上的不同实例之间仍然保持深度顺序(因此，较高层上的实例将绘制在较低层上的实例之下)以及事件本身内，因为<strong>绘制GUI开始</strong>事件将首先为所有实例绘制，然后标准<strong>绘制GUI</strong>将为所有实例绘制，最后触发<strong>绘制GUI结束</strong>事件。</p><p class="dropspot">通过这种方式，您可以在一个实例中的绘制 GUI 开始中绘制东西或设置绘制属性，并确保具有标准绘制 GUI 或绘制 GUI 结束事件的所有实例都将使用这些属性或绘制第一个实例绘制的内容。基本上，这是一种确保某些东西在特定时间被绘制的可靠方法，就像 <strong>开始步骤</strong> 和 <strong>结束步骤</strong> 事件所做的那样。</p><p class="dropspot">这些事件也可以和普通的Draw事件一起使用（Draw事件会受到摄像机视图位置、比例和旋转的正常影响）。如果你没有绘制事件，但你有一个绘制GUI事件，那么<span data-keyref="GameMaker Name">GameMaker</span>仍然会默认为实例绘制精灵（如果它有的话），就像平常一样。</p><p class="dropspot">关于其他的绘制事件，Draw GUI事件将总是在普通绘制事件中绘制的任何东西上绘制。因此，如果你有一个实例在较低的层上有一个Draw GUI事件，它将在较高的层上有一个普通绘制事件的实例上绘制。如果两个实例都有一个Draw GUI事件，那么层的顺序将被尊重。</p><p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span>默认情况下，此事件将与应用程序表面大小(通常是房间或视口的大小)1：1绘制。这意味着当您在<a href="../../Settings/Game_Options.htm">游戏选项</a>中启用<strong>纵横比校正</strong>时，GUI将不会绘制在"信箱"游戏的黑条上。此行为可以使用<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_maximise.htm">display_set_gui_maximum</a></span>函数，您还可以将GUI事件锁定为特定大小，然后使用函数自动缩放该大小以适应显示或应用程序表面尺寸<span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/display_set_gui_size.htm">display_set_gui_size</a></span> .</p><p class="dropspot">&nbsp;</p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#"><span data-open-text="true" data-skip-index="true">绘制前和绘制后</span><span data-close-text="true">绘制前和绘制后</span></a></p><div class="droptext" data-targetname="drop-down2"><p class="dropspot"><strong>绘制前</strong> 和 <strong>绘制后</strong> 事件是绘制事件类别的一部分。但是，与其他绘制事件不同，这些事件 <em>直接</em> 绘制到 <a class="tooltip" title="显示缓冲区是最终绘制所有内容的“画布”。一些事件直接针对此事件（例如Pre Draw事件），而另一些事件将首先绘制到应用程序表面，然后将其绘制到显示缓冲区。">显示缓冲区</a> ，显示缓冲区将是当前可见的所有视口的组合屏幕空间的大小， <em>或</em> 窗口大小 (如果仅使用一个视口或根本不使用视口)。下图说明了这一点：</p><p class="dropspot"><img alt="Object Editor Post Draw" class="center" src="../../assets/Images/Asset_Editors/Editor_Object_PostDraw.png"> 所以，如果使用 <strong>Pre-Draw</strong> 或 <strong>Post-Draw</strong> 事件，则绘制到全屏渲染目标 (显示缓冲区)，该目标的大小与所有视口都适合的窗口大小相同。如果没有活动的视口，则将其设置为窗口本身的大小。</p><p class="dropspot">Pre-Draw事件在任何其他Draw事件之前触发，在其中您可以设置值，设置绘制属性，甚至绘制东西，而无需担心视口或GUI层的大小(GUI层大小可能与屏幕缓冲区相同，但可能不是，因为您可以在代码中设置GUI分辨率)。</p><p class="dropspot">值得注意的是，此事件发生在显示缓冲区为常规绘图而清除 <em>之前</em> ，这意味着如果您没有在 <a href="../Rooms.htm">房间编辑器</a> 中关闭视图清除，则在预绘制事件中绘制的任何内容都不会被看到，因为第一个视口绘制将清除它。如果您希望能够通过视口本身进行查看，或者根本不使用视口，那么你也应该在 <a href="../Rooms.htm">房间编辑器</a> 中设置背景颜色为 0。</p><p class="note"><b><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span></b> 如果您关闭这些选项，您可能会注意到在测试游戏时屏幕上绘制了不需要的伪影 (例如实例的 " 痕迹 ")。这是因为您直接在显示缓冲区的前一帧上绘制而未将其清除。但是您可以使用 <span class="inline3_func"><a href="../../GameMaker_Language/GML_Reference/Drawing/Colour_And_Alpha/draw_clear_alpha.htm">draw_clear_alpha</a></span> 自行完成此操作。</p><p class="dropspot">绘制后事件在所有标准绘制事件<em>之后</em>触发，但在绘制GUI事件<em>之前</em>触发。与绘制前事件一样，它基于显示缓冲区的大小，并位于绘图GUI事件之前，使您能够在不干扰任何<a class="tooltip" title="在游戏中，HUD代表抬头显示器。这是一种将信息作为游戏用户界面的一部分可视地传递给玩家的方法，因此，诸如健康栏，状态图标，得分等之类的内容都构成了HUD的一部分，而通常HUD元素并不需要用户交互。">HUD</a>/<a class="tooltip" title="“图形用户界面”（Graphical User Interface）的缩写，它是一个包含图形元素（例如窗口，图标和按钮）的用户界面。在GameMaker中，您有一组特定的对象事件（绘制GUI事件），可以将其吸引到专门为得分，生命，存货等事物设计的这一层。">GUI</a>的情况下，简单轻松地在全屏基础上执行后期处理效果和其他操作你在游戏中可能会遇到的问题。</p><p class="dropspot">&nbsp;</p></div><p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#"><span data-open-text="true" data-skip-index="true">窗口大小调整</span><span data-close-text="true">窗口大小调整</span></a>&nbsp;<span class="note">HTML5</span></p><div class="droptext" data-targetname="drop-down3"><p class="dropspot">这个事件类型属于"绘制事件"类别，尽管它实际上并不绘制任何东西，但它会对 HTML5 上显示缓冲区中的更改做出反应。</p><p class="dropspot">在 HTML5 上，捕获画布的任何错误都很重要。此事件将执行此操作，并且在每次调整画布大小时触发，允许您在此处添加自定义代码，以根据需要调整视图大小或重新定位 <a class="tooltip" title="在游戏中，HUD代表抬头显示器。这是一种将信息作为游戏用户界面的一部分可视地传递给玩家的方法，因此，诸如健康栏，状态图标，得分等之类的内容都构成了HUD的一部分，而通常HUD元素并不需要用户交互。">HUD</a> 元素。此函数是作为一种方便的方法提供的，以避免始终检查这些事情的步事件代码。</p><p class="note"><b><span data-conref="../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span></b> 您不能在此事件中绘制！它由绘制画布触发，仅用于捕获此更改。任何仍应完成的绘制都必须在其他绘制事件中完成。</p><p class="dropspot">&nbsp;</p></div><p>&nbsp;</p><p>&nbsp;</p><div class="footer"><div class="buttons"><div class="clear"><div style="float:left">Back:&nbsp;<a href="Object_Events.htm">对象事件</a></div><div style="float:right">Next:&nbsp;<a href="Async_Events.htm">异步事件</a></div></div></div><h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5></div></body></html>