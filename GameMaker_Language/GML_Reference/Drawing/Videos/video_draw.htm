<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.6.12.0_3";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">
<link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css"><script src="../../../../../assets/scripts/main_script.js"></script>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <meta name="generator" content="Adobe RoboHelp 2020">
  <title>video_draw</title>
  <meta name="topic-status" content="Draft">
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css">
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt">
  <meta name="rh-authors" content="Gurpreet S. Matharoo">
  <meta name="topic-comment" content="Reference page for video_draw">
  <meta name="rh-index-keywords" content="video_draw">
  <meta name="search-keywords" content="video_draw, draw video, render video">
  <meta name="condition-tags" content="">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Drawing/Videos/YUV_Videos.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Drawing/Videos/video_close.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="video_draw">
        <span>video_draw</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <div>
  </div>
  <div>
  <h1>video_draw</h1>
  <p>此函数将<a href="video_open.htm">打开的视频</a>的当前帧绘制到一个表面(或两个表面)。它返回表面作为其返回数组的一部分，可以手动<a href="../Surfaces/draw_surface.htm">绘制该返回数组。</a></p>
  <p>该函数还返回有关视频状态的数据，该数据在下面展开。</p>
  <p>请确保仅在<span class="inline"><a href="video_open.htm">video_open()</a></span>调用之后但在<span class="inline"><a href="video_close.htm">video_close()</a></span>调用之前调用此函数，否则它将不执行任何操作(因为不会加载视频)。</p>
  <h2>返回数据</h2>
  <p>函数将返回一个数组，其中第一个元素(<span class="inline2">[ 0 ]</span>)将是实数值。此值将显示视频的状态，并且将为：</p>
  <ul class="colour">
    <li><strong>0</strong>，如果播放的视频没有任何问题</li>
    <li><strong>-1</strong>，如果存在错误</li>
    <li>在某些平台上，<strong>-2</strong>，如果视频播放完毕(此时可通过<span class="inline"><a href="video_close.htm">视频关闭()</a></span>调用将其从内存中删除)<ul><li>建议使用<a href="Videos.htm#h">异步回调</a>，而不是知道视频何时结束</li></ul></li>
  </ul>
  <p>当此状态值为<strong>0</strong>时，数组将包含更多数据，这将取决于视频的格式。您可以通过调用<span class="inline"><a href="video_get_format.htm">video_get_format()</a></span>了解视频格式。</p>
  <h2>RGBA 视频</h2>
  <p><span>对于 RGBA 视频，位置<span class="inline2">[ 1 ]</span>将包含绘制视频帧的表面。您可以获取此表面并<a href="../Surfaces/draw_surface.htm">手动绘制它</a>。</span></p>
  <h2>YUV 视频</h2>
  <p><span>某些平台(尤其是控制台)对视频使用 YUV  颜色格式，该格式使用两个表面。在这种情况下，阵列的位置<span class="inline2">[ 1 ]</span>和<span class="inline2">[ 2 ]</span>具有两个表面：</span></p>
  <ul class="colour">
    <li><span><span class="inline2">[ 1 ]</span>是黑白视频的主表面</span></li>
    <li><span><span class="inline2">[ 2 ]</span>是包含所有颜色数据的色度表面</span></li>
  </ul>
  <p>然后使用YUV着色器将这两个表面组合在一起，然后再用于对自定义四边形进行纹理处理，从而将视频绘制到屏幕。</p>
  <p>有关使用着色器绘制这两个表面的步骤，请阅读<a href="YUV_Videos.htm">YUV 视频</a>。</p>
  <p>有关特定控制台的具体实施详细信息，请参阅<a href="https://help.yoyogames.com/hc/en-us/">YoYo游戏帮助台</a>上的文档。</p>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">video_draw();</p>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Array"><a target="_blank" href="../../../../../GameMaker_Language/GML_Overview/Arrays.htm">Array</a></span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">var _data = video_draw();<br>
    var _status = _data[0];<br>
    <br>
    if (_status == 0)<br>
    {<br>
    &nbsp; &nbsp; var _surface = _data[1];<br>
    <br>
    &nbsp; &nbsp; draw_surface(_surface, x, y);<br>
    }
  </p>
  <p>以上代码调用<span class="inline">video_draw()</span>，并检查返回的状态是否为0(表示正在播放视频)。在这种情况下，它将获取表面Id并在实例的位置绘制它。这只适用于 RGBA 视频。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back:&nbsp;<a href="Videos.htm">视频播放</a></div>
        <div>Next:&nbsp;<a href="YUV_Videos.htm">YUV 视频</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
video_draw
-->
  <!-- TAGS
video_draw
-->

</div>
  <!-- KEYWORDS
-->
  <!-- TAGS
-->

</body></html>