<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../../..";
    gCommonRootRelPath = "../../../../..";
    gTopicId = "8.2.2.3.12.1.0_2";
  
//]]></script>

  <script type="text/javascript" src="../../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>event_perform</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css">
  <script src="../../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Page outlining the function event_perform">
  <meta name="rh-index-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end,ev_outside_view0,ev_outside_view1,ev_outside_view2,ev_outside_view3,ev_outside_view4,ev_outside_view5,ev_outside_view6,ev_outside_view7,ev_boundary_view0,ev_boundary_view1,ev_boundary_view2,ev_boundary_view3,ev_boundary_view4,ev_boundary_view5,ev_boundary_view6,ev_boundary_view7,ev_animation_update,ev_animation_event,ev_user0,ev_user1,ev_user2,ev_user3,ev_user4,ev_user5,ev_user6,ev_user7,ev_user8,ev_user9,ev_user10,ev_user11,ev_user12,ev_user13,ev_user14,ev_user15,ev_broadcast_message,ev_draw_normal">
  <meta name="search-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end,ev_outside_view0,ev_outside_view1,ev_outside_view2,ev_outside_view3,ev_outside_view4,ev_outside_view5,ev_outside_view6,ev_outside_view7,ev_boundary_view0,ev_boundary_view1,ev_boundary_view2,ev_boundary_view3,ev_boundary_view4,ev_boundary_view5,ev_boundary_view6,ev_boundary_view7,ev_animation_update,ev_animation_event,ev_user0,ev_user1,ev_user2,ev_user3,ev_user4,ev_user5,ev_user6,ev_user7,ev_user8,ev_user9,ev_user10,ev_user11,ev_user12,ev_user13,ev_user14,ev_user15,ev_broadcast_message,ev_draw_normal">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform_async.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="event_perform">
        <span>event_perform</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">event_perform</span></h1>
  <p>对于运行代码的实例，此函数将使用指定的参数在指定的事件中执行代码。这里有许多选项，允许完全模拟所有可能的事件，但请注意，这实际上只是执行事件中的所有代码；游戏不会修改任何内容以使其手动触发。</p>
  <p>例如，如果您选择执行键盘按下事件 <span class="inline2">ev_keypress</span>，该事件将被触发，但相关键不会被识别为已被按下。或者，如果您执行计时器事件 <span class="inline2">ev_alarm</span>，则计时器计数不会设置为 -1，而是继续倒计时。</p>
  <p class="note"><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">注意</span></span>&nbsp;可以使用<span class="inline2"><a href="event_perform_async.htm">event_perform_async</a></span>调用异步事件。</p>
  <p>下表概述了 <span data-keyref="GameMaker Name">GameMaker</span> 中包含的用于引用事件 <em> 类型 </em> 的所有常量及其 <em> 编号 </em> 值。事件本身以 <b> 粗体文本 </b> 标记，并且与 <span class="inline2"><a href="event_type.htm">event_type</a></span> 变量的返回值相同 (将传递到此函数的第一个参数中)，而它们的数值则标记为 <i> 斜体文本 </i>，并且与 <span class="inline2"><a href="event_number.htm">event_number</a></span> 变量的返回值 (将传递到此函数的第二个参数中) 相同：</p>
  <table>
    <colgroup>
      <col>
      <col>
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2" width="40%"><span data-keyref="Type_Constant_Event_Type"><a target="_blank" href="event_perform.htm">事件类型常量</a></span>&nbsp;&amp;&nbsp;<span data-keyref="Type_Constant_Event_Number"><a target="_blank" href="event_perform.htm">事件数字常量</a></span></th>
      </tr>
      <tr>
        <th width="40%">常量</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><b>ev_create</b></td>
        <td>Create event</td>
      </tr>
      <tr>
        <td><b>ev_destroy</b></td>
        <td>Destroy event</td>
      </tr>
      <tr>
        <td><b>ev_cleanup</b></td>
        <td>Clean Up Event</td>
      </tr>
      <tr>
        <td><b>ev_step</b></td>
        <td>Step event</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_step_normal</i></td>
        <td>Step</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_step_begin</i></td>
        <td>Begin Step</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_step_end</i></td>
        <td>End Step</td>
      </tr>
      <tr>
        <td><b>ev_alarm</b></td>
        <td>Alarm event</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- 0 ... 11</i></td>
        <td>The number relevant to which of the 12 alarms you wish to trigger the event of</td>
      </tr>
      <tr>
        <td><b>ev_keyboard, ev_keypress, ev_keyrelease</b></td>
        <td>Keyboard/Keyboard Pressed/Keyboard Released</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- any key code</i></td>
        <td>vk_space or ord("W") for example.</td>
      </tr>
      <tr>
        <td><b>ev_mouse</b></td>
        <td>Mouse event</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_left_button</i></td>
        <td>Left button held down on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_right_button</i></td>
        <td>Right button held down on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_middle_button</i></td>
        <td>Middle button (or clickable wheel) held down on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_no_button</i></td>
        <td>No buttons held down</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_left_press</i></td>
        <td>Left button just pressed on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_right_press</i></td>
        <td>Right button just pressed on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_middle_press</i></td>
        <td>Middle button (or clickable wheel) just pressed on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_left_release</i></td>
        <td>Left button just released on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_right_release</i></td>
        <td>Right button just released on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_middle_release</i></td>
        <td>Middle button just released on object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_mouse_enter</i></td>
        <td>Mouse just entered object's bounding box</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_mouse_leave</i></td>
        <td>Mouse just left object's bounding box</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_mouse_wheel_up</i></td>
        <td>Mouse wheel scrolled upwards</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_mouse_wheel_down</i></td>
        <td>Mouse wheel scrolled downwards</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_left_button</i></td>
        <td>Left button held down anywhere</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_right_button</i></td>
        <td>Right button held down anywhere</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_middle_button</i></td>
        <td>Middle button (or clickable wheel) held down anywhere</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_left_press</i></td>
        <td>Left button just pressed anywhere</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_right_press</i></td>
        <td>Right button just pressed anywhere</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_middle_press</i></td>
        <td>Middle button (or clickable wheel) just pressed anywhere</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_left_release</i></td>
        <td>Left button just released anywhere</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_right_release</i></td>
        <td>Right button just released anywhere</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_middle_release</i></td>
        <td>Middle button just released anywhere</td>
      </tr>
      <tr>
        <td><b>ev_gesture</b></td>
        <td>A gesture event (Tap, Drag, Flick, Pinch or Rotate)</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_tap</i></td>
        <td>A single click/touch and release has been detected for an <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_double_tap</i></td>
        <td>Two quick touches/clicks and releases have been detected for an <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_drag_start</i></td>
        <td>The beginning of a drag gesture has been detected for an <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_dragging</i></td>
        <td>A touch/click has been held and moved for an <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_drag_end</i></td>
        <td>The release of the touch/click from a drag has been detected for an <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_flick</i></td>
        <td>The release of a touch/click from a drag had enough movement for a flick event to be detected for the <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_pinch_start</i></td>
        <td>Two touches and a straight movement have been detected for an <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_pinch_in</i></td>
        <td>The movement between two touches for an <i>instance</i> has been detected as inwards</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_pinch_out</i></td>
        <td>The movement between two touches for an <i>instance</i> has been detected as outwards</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_pinch_end</i></td>
        <td>The release of one (or both) touches for a pinch has been detected for an <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_rotate_start</i></td>
        <td>The movement between two touches for an <i>instance</i> has been detected as a rotation</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_rotating</i></td>
        <td>The movement between two touches for an <i>instance</i> has been detected as rotating</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gesture_rotate_end</i></td>
        <td>The release of one (or both) touches for a rotation has been detected for an <i>instance</i></td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_tap</i></td>
        <td>A single click/touch and release has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_double_tap</i></td>
        <td>Two quick touches/clicks and releases have been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_drag_start</i></td>
        <td>The beginning of a drag gesture has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_dragging</i></td>
        <td>A touch/click has been held and moved <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_drag_end</i></td>
        <td>The release of the touch/click from a drag has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_flick</i></td>
        <td>The release of a touch/click from a drag had enough movement for a flick event to be detected <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_pinch_start</i></td>
        <td>Two touches and a straight movement have been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_pinch_in</i></td>
        <td>The movement between two touches <i>anywhere</i> in the room has been detected as inwards</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_pinch_out</i></td>
        <td>The movement between two touches <i>anywhere</i> in the room has been detected as outwards</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_pinch_end</i></td>
        <td>The release of one (or both) touches for a pinch has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_rotate_start</i></td>
        <td>The movement between two touches <i>anywhere</i> in the room has been detected as a rotation</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_rotating</i></td>
        <td>The movement between two touches <i>anywhere</i> in the room has been detected as rotating</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_global_gesture_rotate_end</i></td>
        <td>The release of one (or both) touches for a rotation has been detected <i>anywhere</i> in the room</td>
      </tr>
      <tr>
        <td><b>ev_collision</b></td>
        <td>Collision with an object</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- The index of the object to check.</i></td>
        <td><span class="inline">obj_enemy</span> for example.</td>
      </tr>
      <tr>
        <td><b>ev_other</b></td>
        <td>One of the actions listed under 'Other'</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_outside</i></td>
        <td>Whether the instance is outside of the room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_boundary</i></td>
        <td>Whether the instance is intersecting the boundary</td>
      </tr>
      <tr>
        <td><em>&nbsp; &nbsp;---- ev_outside_view0...7</em></td>
        <td>Whether the instance is outside the given view (0 to 7)</td>
      </tr>
      <tr>
        <td><em>&nbsp; &nbsp;---- ev_boundary_view0...7</em></td>
        <td>Whether the instance is interesecting with the boundary of the given view (0 to 7)</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_game_start</i></td>
        <td>Only triggered at the start of the game</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_game_end</i></td>
        <td>Only triggered at the end of the game</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_room_start</i></td>
        <td>Only triggered at the start of a room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_room_end</i></td>
        <td>Only triggered at the end of a room</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_animation_end</i></td>
        <td>If the object's sprite has reached the end of its animation</td>
      </tr>
      <tr>
        <td><em><i>&nbsp;&nbsp;&nbsp;---- ev_animation_update</i></em></td>
        <td>Animation event that runs every step for objects that use skeletal animations</td>
      </tr>
      <tr>
        <td><em><i>&nbsp;&nbsp;&nbsp;---- ev_animation_event</i></em></td>
        <td>Animation event that runs for skeletal animations as assigned in the skeletal animation tool</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_end_of_path</i></td>
        <td>If the object has reached the end of a path it is following</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_user0... ev_user15</i></td>
        <td>One of the 16 available user events.</td>
      </tr>
      <tr>
        <td><em>&nbsp; &nbsp;---- ev_broadcast_message</em></td>
        <td>Broadcast Message event used for sprites and sequences</td>
      </tr>
      <tr>
        <td><b>ev_draw</b></td>
        <td>Draw event.&nbsp;<i><b><span data-conref="../../../../../assets/snippets/Tag_note.hts"><span class="note">NOTE</span></span>&nbsp;</b>This event cannot be forced outside of a draw event and the constants are only for identifying the event when performed in these cases.</i></td>
      </tr>
      <tr>
        <td>&nbsp;<em> &nbsp;---- ev_draw_normal</em></td>
        <td>The normal draw event.</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_draw_begin</i></td>
        <td>The draw begin event.</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_draw_end</i></td>
        <td>The draw end event.</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_draw_pre</i></td>
        <td>The pre draw event.</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_draw_post</i></td>
        <td>The post draw event.</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gui</i></td>
        <td>The draw gui event.</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gui_begin</i></td>
        <td>The draw gui begin event.</td>
      </tr>
      <tr>
        <td><i>&nbsp;&nbsp;&nbsp;---- ev_gui_end</i></td>
        <td>The draw gui end event.</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code"><span data-field="title" data-format="default">event_perform</span>(type, numb);</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>type</td>
        <td><span data-keyref="Type_Constant_Event_Type"><a target="_blank" href="event_perform.htm">事件类型常量</a></span></td>
        <td>要执行的事件类型(请参见上表)。</td>
      </tr>
      <tr>
        <td>numb</td>
        <td><span data-keyref="Type_Real"><a target="_blank" href="../../../../GML_Overview/Data_Types.htm">Real</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Constant_Event_Number"><a target="_blank" href="event_perform.htm">事件数字常量</a></span></td>
        <td>特定的事件常量或值。无论事件是否有子事件，其默认事件总是由事件编号 0 引用 (例如，创建事件只有一个事件编号为 0 的子事件，正常的步骤和绘制事件可以通过其常量 (分别为 <span class="inline2">ev_step_normal</span> 和 <span class="inline2">ev_draw_normal</span>)<em> 或 </em> 事件编号 0 引用)</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p>&nbsp;</p>
  <h4>拓展示例</h4>
  <p class="code"><span data-field="title" data-format="default">event_perform</span>(ev_keypress, ord("W"));</p>
  <p>这将执行与按下 "W" 键的键盘检查相关联的事件 (而不实际生成键盘按下)。</p>
  <p class="code"><span data-field="title" data-format="default">event_perform</span>(ev_step, ev_step_begin);</p>
  <p>这将执行<i>步开始</i>事件(如果从任何步骤事件调用，它将导致步开始事件代码运行两次)。</p>
  <p class="code"><span data-field="title" data-format="default">event_perform</span>(ev_create, 0);</p>
  <p>这将执行该实例的<i>创建<i>事件。</i></i></p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:&nbsp;<a href="Generating_Object_Events.htm">生成对象事件</a></div>
        <div style="float:right">Next:&nbsp;<a href="event_perform_async.htm">event_perform_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
event_perform
ev_create
ev_destroy
ev_step
ev_alarm
ev_keyboard
ev_mouse
ev_collision
ev_other
ev_draw
ev_draw_begin
ev_draw_end
ev_draw_post
ev_draw_pre
ev_gui
ev_gui_begin
ev_gui_end
ev_keypress
ev_keyrelease
ev_trigger
ev_left_button
ev_right_button
ev_middle_button
ev_no_button
ev_left_press
ev_right_press
ev_middle_press
ev_left_release
ev_right_release
ev_middle_release
ev_mouse_enter
ev_mouse_leave
ev_mouse_wheel_up
ev_mouse_wheel_down
ev_global_left_button
ev_global_right_button
ev_global_middle_button
ev_global_left_press
ev_global_right_press
ev_global_middle_press
ev_global_left_release
ev_global_right_release
ev_global_middle_release
ev_outside
ev_boundary
ev_game_start
ev_cleanup
ev_game_end
ev_room_start
ev_room_end
ev_no_more_lives
ev_no_more_health
ev_animation_end
ev_end_of_path
ev_close_button
ev_user0
ev_user1
ev_user2
ev_user3
ev_user4
ev_user5
ev_user6
ev_user7
ev_user8
ev_user9
ev_user10
ev_user11
ev_user12
ev_user13
ev_user14
ev_user15
ev_step_normal
ev_step_begin
ev_step_end
ev_gesture
ev_gesture_tap
ev_gesture_double_tap
ev_gesture_drag_start
ev_gesture_drag_end
ev_gesture_dragging
ev_gesture_flick
ev_gesture_pinch_start
ev_gesture_pinch_in
ev_gesture_pinch_out
ev_gesture_pinch_end
ev_gesture_rotate_start
ev_gesture_rotating
ev_gesture_rotate_end
ev_global_gesture_tap
ev_global_gesture_double_tap
ev_global_gesture_drag_start
ev_global_gesture_drag_end
ev_global_gesture_dragging
ev_global_gesture_flick
ev_global_gesture_pinch_start
ev_global_gesture_pinch_in
ev_global_gesture_pinch_out
ev_global_gesture_pinch_end
ev_global_gesture_rotate_start
ev_global_gesture_rotating
ev_global_gesture_rotate_end
-->
  <!-- TAGS
event_perform
-->

</body></html>