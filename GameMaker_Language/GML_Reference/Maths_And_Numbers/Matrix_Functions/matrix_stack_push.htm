<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../../..";
    gCommonRootRelPath = "../../../..";
    gTopicId = "8.2.2.11.4.0_14";
  
//]]></script>

  <script type="text/javascript" src="../../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>matrix_stack_push</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css">
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Reference page for matrix_stack_push">
  <meta name="rh-index-keywords" content="matrix_stack_push">
  <meta name="search-keywords" content="matrix_stack_push">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Maths_And_Numbers/Matrix_Functions/matrix_stack_pop.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Maths_And_Numbers/Matrix_Functions/matrix_stack_set.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="matrix_stack_push">
        <span>matrix_stack_push</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>matrix_stack_push</h1>
  <p>该函数用于将一个新矩阵压入当前矩阵栈的顶部。 它会先将给定的矩阵与当前位于栈顶的矩阵相乘，然后将得到的矩阵压入栈中。</p>
  <p>此函数对于将多个矩阵转换应用于您的视觉效果非常有用，而无需手动将各种矩阵相乘。</p>
  <p>例如，您可以将一个基础矩阵推入堆栈，将图形绘制到某个矩形区域(例如，一个窗口)。 使用该矩阵绘制一些图形后，您可以将另一个矩阵压入堆栈以在子区域内绘制图形(如窗口中的按钮)。 在该子区域中绘制内容后，您可以调用 <span class="inline"><a href="matrix_stack_pop.htm">matrix_stack_pop()</a></span> 将其矩阵从堆栈中移除并继续将视觉对象绘制到主窗口区域中。</p>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code">matrix_stack_push(matrix);</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td>matrix</td><td><span data-keyref="Type_Array_Matrix"><a target="_blank" href="../../../../../GameMaker_Language/GML_Reference/Maths_And_Numbers/Matrix_Functions/Matrix_Functions.htm">Matrix Array</a></span></td>
        <td>要压入到堆栈的矩阵</td>
     </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p>&nbsp;</p>
  <h4>例子:</h4>
  <p class="code">var m1 = matrix_build(66, 145, 0, 0, 0, 0, 1, 1, 1);<br>
    var m2 = matrix_build(0, 0, 0, 0, 0, image_angle * 6, 1, 1, 1) ;<br>
    matrix_stack_push(m1);<br>
    matrix_stack_push(m2);<br>
    matrix_set(matrix_world, matrix_stack_top());<br>
    draw_sprite(spr_tyre, 0, 0, 0);<br>
    matrix_stack_pop();<br>
    matrix_stack_pop();</p>
  <p>上面的代码将构建两个新矩阵，然后将它们压入矩阵堆栈。 然后将世界矩阵设置到堆栈的顶部，绘制一个精灵，然后从堆栈中弹出变换。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Matrix_Functions.htm">矩阵函数</a></div>
        <div style="float:right">Next:&nbsp;<a href="matrix_stack_pop.htm">matrix_stack_pop</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
matrix_stack_push
-->
  <!-- TAGS
matrix_stack_push
-->

</body></html>