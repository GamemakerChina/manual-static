<!--?xml version="1.0" encoding="utf-8" ?--><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = "../../..";
    gCommonRootRelPath = "../../..";
    gTopicId = "8.2.2.1.0_24";
  
//]]></script>

  <script type="text/javascript" src="../../../template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/common.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="../../../template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="../../../whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="../../../template/styles/topic.min.css">
  <link rel="stylesheet" type="text/css" href="../../../template/Charcoal_Grey/topicheader.css">
  <meta name="topic-status" content="Draft">

  <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
  <title>instanceof</title>
  <meta name="generator" content="Adobe RoboHelp 2022">
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css">
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander">
  <meta name="topic-comment" content="Page explaining the function instanceof">
  <meta name="rh-index-keywords" content="instanceof">
  <meta name="search-keywords" content="">
  <meta name="is_pure" content="true">
<meta name="brsnext" value="GameMaker_Language/GML_Reference/Variable_Functions/array_create.htm"><meta name="brsprev" value="GameMaker_Language/GML_Reference/Variable_Functions/variable_struct_names_count.htm"></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="instanceof">
        <span>instanceof</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">instanceof</span></h1>
  <p>此函数可用于获取用于创建结构的<a href="../../GML_Overview/Structs.htm">构造函数</a>的名称。结构本身应该是使用<a href="../../GML_Overview/Language_Features/new.htm"><span class="inline"></span></a> <a href="../../GML_Overview/Language_Features/new.htm"><span class="inline">new</span></a> 运算符以及构造函数本身创建的。您为变量提供要检查的struct引用，该函数将返回具有构造函数名称的字符串或 <span class="inline">undefined</span>。</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_tip.hts"><span class="tip">提示</span></span> 建议使用 <span class="inline3_func"><a href="is_instanceof.htm">is_instanceof</a></span> 检查结构的构造函数，因为它还允许您使用父构造函数 (即结构的构造函数可能继承自的构造函数) 进行检查。<span class="inline3_func"><a href="is_instanceof.htm">is_instanceof</a></span> 还允许您直接使用构造函数引用而不是字符串进行检查。</p>
  <h3>用法说明</h3>
  <ul class="colour">
    <li>如果向函数传递结构文字 (即：不使用构造函数创建的结构)，则它将简单地返回字符串 <span class="inline2">"struct"</span>。</li>
    <li>If you pass the function the&nbsp;<span class="inline2">self</span>&nbsp;keyword inside an object instance, it will return <span class="inline2">"instance"</span>.</li>
    <li>如果未在脚本中创建构造函数，则返回的构造函数名称将包含其他文本。如果它是在对象内部创建的，则其名称将包括该对象和创建该对象的事件。例如，在<span class="inline2">Object1</span>的创建事件中创建的名为<strong>test_constructor</strong>的构造函数将返回为<span class="inline2">“test_constructor_gml_Object_Object1_Create_0”</span>。为了避免这种情况，请在<a href="../../GML_Overview/Script_Functions.htm">脚本</a>中创建构造函数。</li>
    <li>该函数还可以用来检查struct引用是否是<strong><a class="tooltip" title="A&nbsp;weak reference is a reference that does not protect the referenced object from collection by a garbage collector, and so can be used to check if a struct is still &quot;alive&quot; (referenced) or not somewhere in the game.">弱引用</a></strong>，在这种情况下，函数将返回字符串<span class="inline2">“weakref”</span>，而不是创建结构的函数的名称。有关更多信息，请参见函数<a href="../Garbage_Collection/weak_ref_create.htm"><span class="inline">weak_ref_create()</span></a>。</li>
  </ul>
  <p>&nbsp;</p>
  <h4>语法:</h4>
  <p class="code"><span data-field="title" data-format="default">instanceof</span>(struct_id);</p>
  <table>
    <tbody>
      <tr>
        <th>参数</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td>struct</td>
        <td><span data-keyref="Type_Struct"><a target="_blank" href="../../../../GameMaker_Language/GML_Overview/Structs.htm">Struct</a></span></td>
        <td>要使用的struct引用。</td>
      </tr>
    </tbody>
  </table>
  <p>&nbsp;</p>
  <h4>返回:</h4>
  <p class="code"><span data-keyref="Type_String"><a target="_blank" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">String</a></span>&nbsp;or&nbsp;<span data-keyref="Type_Undefined"><a target="_blank" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">undefined</a></span></p>
  <p>&nbsp;</p>
  <h4>扩展示例：</h4>
  <p>在这个例子中，我们必须首先定义将用作我们结构的构造函数。在脚本资源中定义了以下函数:</p>
  <p class="code">function init_struct(_a, _b, _c) constructor<br>
    {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;a = _a;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;b = _b;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;c = _c;<br>
    }</p>
  <p>然后可以将此函数与<span class="inline">new</span>运算符一起使用，以创建一个结构，并使用设置为函数中使用的参数值的变量来填充它:</p>
  <p class="code">mystruct = new init_struct(10, 100, "Hello World");</p>
  <p>然后，我们可以得到这样使用的构造函数的名称:</p>
  <p class="code">var _name = instanceof(mystruct);<br>
    if is_string(_name)<br>
    {<br>
    &nbsp;&nbsp;&nbsp;&nbsp;show_debug_message(_name);<br>
    }</p>
  <p>这会将字符串<span class="inline2">“init_struct”</span>打印到输出日志中，该日志是其脚本中定义的构造函数的名称。</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Variable_Functions.htm">变量函数</a></div>
        <div style="float:right">Next:&nbsp;<a href="struct_foreach.htm">struct_foreach</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instanceof
-->
  <!-- TAGS
instanceof
-->

</body></html>